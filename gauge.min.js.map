{"version":3,"sources":["gauge.min.js"],"names":["_toConsumableArray","arr","Array","isArray","i","arr2","length","from","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","TypeError","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_classCallCheck","instance","Constructor","vendorize","prop","window","global","vendors","s","capitalized","charAt","toUpperCase","substr","vendorProp","step","time","draw","start","rule","duration","end","anim","progress","percent","frame","requestAnimationFrame","Collection","apply","this","arguments","roundRect","context","x","y","w","h","r","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","padValue","val","options","dec","valueDec","int","valueInt","strVal","n","parseFloat","Math","abs","toFixed","toString","split","round","formatMajorTickNumber","num","right","hasDec","majorTicksDec","majorTicksInt","indexOf","join","replace","radians","degrees","PI","radialPoint","radius","angle","sin","cos","linearGradient","colorFrom","colorTo","grad","createLinearGradient","addColorStop","drawCircle","arc","fillStyle","drawings","fill","maxRadius","max","borderShadowWidth","borderOuterWidth","borderMiddleWidth","borderInnerWidth","drawPlate","d0","r0","r1","r2","r3","save","glow","shadowBlur","shadowColor","colorBorderShadow","colorBorderOuterStart","colorBorderOuterEnd","colorBorderMiddleStart","colorBorderMiddleEnd","colorBorderInnerStart","colorBorderInnerEnd","restore","colorPlate","drawHighlights","highlights","hlt","vd","maxValue","minValue","ticksAngle","sa","startAngle","ea","to","ps","pe","ps1","pe1","rotate","color","drawMinorTicks","lineWidth","SmartCanvas","pixelRatio","strokeStyle","colorMinorTicks","minorTicks","majorTicks","stroke","drawMajorTicks","colorMajorTicks","push","a","strokeTicks","drawNumbers","points","point","font","colorNumbers","textAlign","fillText","drawTitle","title","colorTitle","drawUnits","units","colorUnits","drawNeedleShadow","needleShadow","shadowOffsetX","shadowOffsetY","colorNeedleShadowDown","drawNeedle","needle","needleCircleSize","rIn","needleEnd","rStart","needleStart","rOut","pad1","needleWidth","pad2","needleType","colorNeedleStart","colorNeedleEnd","colorNeedleShadowUp","needleCircleOuter","colorNeedleCircleOuterStart","colorNeedleCircleOuterEnd","needleCircleInner","colorNeedleCircleInnerStart","colorNeedleCircleInnerEnd","drawValueBox","valueText","text","valueBox","th","tw","measureText","width","grd","createRadialGradient","colorValueBoxRectStart","colorValueBoxRectEnd","colorValueBoxShadow","colorValueBoxBackground","colorValueTextShadow","colorValueText","drawRectangle","colorStart","colorEnd","rect","barDimensions","len","wid","ang","isVertical","ds","barStrokeWidth","bw","barWidth","barBeginCircle","drawLinearBar","_barDimensions","_barDimensions2","_slicedToArray","cAngle","baseAngle","atan","sAngle","eAngle","sinba","cosba","arcX","arcY","lx","ly","rx","ry","colorBar","colorBarEnd","colorBarStroke","drawLinearMajorTicks","_barDimensions3","_barDimensions4","hasLeft","tickSide","hasRight","lw","dlen","d","tx","ty","_ty","drawLinearMajorTicksNumbers","drawLinearMinorTicks","drawLinearBarHighlights","drawLinearBarProgress","drawLinearBarNeedle","drawLinearTitle","drawLinearUnits","drawLinearPlate","borderRadius","w1","w2","w3","w4","h1","h2","h3","h4","x2","x3","x4","y2","y3","y4","sliceIterator","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","err","_createClass","defineProperties","target","props","descriptor","defineProperty","key","protoProps","staticProps","assign","firstSource","nextSource","keysArray","keys","nextIndex","nextKey","desc","getOwnPropertyDescriptor","searchElement","fromIndex","k","O","Infinity","callback","setTimeout","Date","getTime","rules","linear","p","quad","pow","dequad","quint","dequint","cycle","acos","decycle","bounce","debounce","b","elastic","delastic","Animation","_this","performance","now","cancelAnimationFrame","id","DomObserver","element","Type","_this2","toLowerCase","type","toDashed","domReady","traverse","MutationObserver","observe","bind","document","body","childList","subtree","attributes","characterData","attributeOldValue","characterDataOldValue","node","tagName","getAttribute","elements","getElementsByTagName","isValidNode","process","records","record","attributeName","oldValue","addedNodes","ii","ss","JSON","parse","stringify","hasOwnProperty","toAttributeName","attributeValue","renderTo","test","e","camelCase","str","handler","addEventListener","attachEvent","canvas","height","collection","init","style","elementClone","cloneNode","getContext","contextClone","drawWidth","drawHeight","drawX","drawY","minSide","initialized","translate","index","splice","onRedraw","scale","redraw","get","devicePixelRatio","matchMedia","addListener","GenericOptions","updateValueOnAnimation","animation","animationDuration","animationRule","getElementById","gaugesCollection","BaseGauge","className","name","typeName","destroy","set","_this3","fromValue","_value","animate","defaultGaugeOptions","Gauge","_BaseGauge","isNaN","getPrototypeOf","clearRect","commit","drawImage","initialize","defaultLinearGaugeOptions","colorBarProgress","colorBarProgressEnd","needleSide","LinearGauge","_BaseGauge2","orientation","drawBox","concat"],"mappings":"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","file":"gauge.min.js","sourcesContent":["(function() {'use strict';\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @external {Object.assign} https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n */\n/* istanbul ignore next */\nif (!Object.assign) {\n    Object.defineProperty(Object, 'assign', {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function value(target, firstSource) {\n            'use strict';\n\n            if (target === undefined || target === null) {\n                throw new TypeError('Cannot convert first argument to object');\n            }\n\n            var to = Object(target);\n            var i = 1;\n\n            for (; i < arguments.length; i++) {\n                var nextSource = arguments[i];\n\n                if (nextSource === undefined || nextSource === null) {\n                    continue;\n                }\n\n                var keysArray = Object.keys(Object(nextSource));\n                var nextIndex = 0,\n                    len = keysArray.length;\n\n                for (; nextIndex < len; nextIndex++) {\n                    var nextKey = keysArray[nextIndex];\n                    var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n\n                    if (desc !== undefined && desc.enumerable) {\n                        to[nextKey] = nextSource[nextKey];\n                    }\n                }\n            }\n\n            return to;\n        }\n    });\n}\n\n/**\n * @external {Array.indexOf} https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf\n */\n/* istanbul ignore next */\nif (!Array.prototype.indexOf) {\n    Array.prototype.indexOf = function (searchElement, fromIndex) {\n        var k;\n\n        if (this == null) {\n            throw new TypeError('\"this\" is null or not defined');\n        }\n\n        var O = Object(this);\n        var len = O.length >>> 0;\n\n        if (len === 0) {\n            return -1;\n        }\n\n        var n = +fromIndex || 0;\n\n        if (Math.abs(n) === Infinity) {\n            n = 0;\n        }\n\n        if (n >= len) {\n            return -1;\n        }\n\n        k = Math.max(n >= 0 ? n : len - Math.abs(n), 0);\n\n        while (k < len) {\n            if (k in O && O[k] === searchElement) {\n                return k;\n            }\n\n            k++;\n        }\n\n        return -1;\n    };\n}\n\n/*!\n * @license\n * Minimalistic HTML5 Canvas Gauge implementation\n *\n * This code is subject to MIT license.\n *\n * Copyright (c) 2012 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n/**\n * Look-ups for a proper vendor-specific property and returns its value\n *\n * @example\n * var requestAnimationFrame = vendorize('requestAnimationFrame');\n * // it will refer properly to:\n * //  - window.requestAnimationFrame by default or to\n * //  - window.webkitRequestAnimationFrame or to\n * //  - window.mozRequestAnimationFrame or to\n * //  - window.msRequestAnimationFrame or to\n * //  - window.oRequestAnimationFrame\n * // depending on the current browser vendor\n *\n * @author Mykhailo Stadnyk <mikhus@gmail.com>\n * @param {string} prop\n * @param {HTMLElement|Window|object} [from] - default is window\n * @returns {*}\n */\nfunction vendorize(prop, from) {\n    /* istanbul ignore else: no reason to cover */\n    if (!from) {\n        from = typeof window === 'undefined' ? global : window;\n    }\n\n    if (typeof from[prop] !== 'undefined') {\n        return from[prop];\n    }\n\n    var vendors = ['webkit', 'moz', 'ms', 'o'];\n    var i = 0;\n    var s = vendors.length;\n    var capitalized = prop.charAt(0).toUpperCase() + prop.substr(1);\n\n    for (; i < s; i++) {\n        var vendorProp = from[vendors[i] + capitalized];\n\n        /* istanbul ignore if: requires very complex environment to test (specific browser version) */\n        if (typeof vendorProp !== 'undefined') {\n            return vendorProp;\n        }\n    }\n\n    return null;\n}\n\n/*!\n * @license\n * Minimalistic HTML5 Canvas Gauge implementation\n *\n * This code is subject to MIT license.\n *\n * Copyright (c) 2012 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/* istanbul ignore next */\n/**\n * @type {function(callback: function(time: number): number, element?: HTMLElement)}\n * @access private\n */\nvar requestAnimationFrame = vendorize('requestAnimationFrame') || function (callback) {\n    return setTimeout(function () {\n        return callback(new Date().getTime());\n    }, 1000 / 60);\n};\n\n/**\n * Generic AnimationRule function interface\n *\n * @typedef {function(percent: number): number} AnimationRule\n */\n\n/**\n * Callback for animation step draw event.\n * It will be called each time animation step is executed, bypassing\n * as first argument a percent of animation completeness. It is expected\n * that this callback will do an actual work of animating an elements or\n * whatever, as far as animation engine is just calculating and executing\n * animation steps without any knowledge about things under animation.\n *\n * @typedef {function(percent: number): *} DrawEventCallback\n */\n\n/**\n * Callback for animation complete event.\n * It is called once each animation is complete.\n *\n * @typedef {function(): *} EndEventCallback\n */\n\n/**\n * Predefined known animation rules.\n * It's a simple collection of math for some most used animations.\n *\n * @typedef {{linear: AnimationRule, quad: AnimationRule, dequad: AnimationRule, quint: AnimationRule, dequint: AnimationRule, cycle: AnimationRule, decycle: AnimationRule, bounce: AnimationRule, debounce: AnimationRule, elastic: AnimationRule, delastic: AnimationRule}} AnimationRules\n */\n\n/* istanbul ignore next: no reason covering this */\nvar rules = {\n    linear: function linear(p) {\n        return p;\n    },\n    quad: function quad(p) {\n        return Math.pow(p, 2);\n    },\n    dequad: function dequad(p) {\n        return 1 - rules.quad(1 - p);\n    },\n    quint: function quint(p) {\n        return Math.pow(p, 5);\n    },\n    dequint: function dequint(p) {\n        return 1 - Math.pow(1 - p, 5);\n    },\n    cycle: function cycle(p) {\n        return 1 - Math.sin(Math.acos(p));\n    },\n    decycle: function decycle(p) {\n        return Math.sin(Math.acos(1 - p));\n    },\n    bounce: function bounce(p) {\n        return 1 - rules.debounce(1 - p);\n    },\n    debounce: function debounce(p) {\n        var a = 0,\n            b = 1;\n        for (; 1; a += b, b /= 2) {\n            if (p >= (7 - 4 * a) / 11) {\n                return -Math.pow((11 - 6 * a - 11 * p) / 4, 2) + Math.pow(b, 2);\n            }\n        }\n    },\n    elastic: function elastic(p) {\n        return 1 - rules.delastic(1 - p);\n    },\n    delastic: function delastic(p) {\n        var x = 1.5;\n        return Math.pow(2, 10 * (p - 1)) * Math.cos(20 * Math.PI * x / 3 * p);\n    }\n};\n\n/* istanbul ignore next: private, not testable */\n/**\n * Evaluates animation step and decides if the next step required or\n * stops animation calling a proper events.\n *\n * @access private\n * @param {number} time\n * @param {DrawEventCallback} draw\n * @param {number} start\n * @param {AnimationRule} rule\n * @param {number} duration\n * @param {EndEventCallback} end\n * @param {Animation} anim\n */\nfunction step(time, draw, start, rule, duration, end, anim) {\n    if (typeof rule !== 'function') {\n        throw new TypeError('Invalid animation rule:', rule);\n    }\n\n    var progress = time - start;\n    var percent = progress / duration;\n\n    if (percent > 1) {\n        percent = 1;\n    }\n\n    draw && draw(percent === 1 ? percent : rule(percent));\n\n    if (progress < duration) {\n        anim.frame = requestAnimationFrame(function (time) {\n            return step(time, draw, start, rule, duration, end, anim);\n        });\n    } else {\n        end && end();\n    }\n}\n\n/**\n * Animation engine API for JavaScript-based animations.\n * This is simply an animation core framework which simplifies creation\n * of various animations for generic purposes.\n *\n * @example\n * // create 'linear' animation engine, 500ms duration\n * let linear = new Animation('linear', 500);\n *\n * // create 'elastic' animation engine\n * let elastic = new Animation('elastic');\n *\n * // define animation behavior\n * let bounced = new Animation('bounce', 500, percent => {\n *     let value = parseInt(percent * 100, 10);\n *\n *     $('div.bounced').css({\n *         width: value + '%',\n *         height: value + '%'\n *     });\n * });\n *\n * // execute animation\n * bounced.animate();\n *\n * // execute animation and handle when its finished\n * bounced.animate(null, () => {\n *    console.log('Animation finished!');\n * });\n */\n\nvar Animation = function () {\n\n    /**\n     * @constructor\n     * @param {string|AnimationRule} rule\n     * @param {number} duration\n     * @param {DrawEventCallback} [draw]\n     * @param {EndEventCallback} [end]\n     */\n    function Animation() {\n        var rule = arguments.length <= 0 || arguments[0] === undefined ? 'linear' : arguments[0];\n        var duration = arguments.length <= 1 || arguments[1] === undefined ? 250 : arguments[1];\n        var draw = arguments.length <= 2 || arguments[2] === undefined ? function () {} : arguments[2];\n        var end = arguments.length <= 3 || arguments[3] === undefined ? function () {} : arguments[3];\n\n        _classCallCheck(this, Animation);\n\n        /**\n         * Overall animation duration in milliseconds.\n         * By default is equal to 250 ms.\n         *\n         * @type {number}\n         */\n        this.duration = duration;\n\n        /**\n         * Animation rule. By default is linear animation.\n         * Animation rule is a subject to animation rules, which are\n         * a simple object containing math-based methods for calculating\n         * animation steps.\n         *\n         * @type {string|AnimationRule}\n         */\n        this.rule = rule;\n\n        /**\n         * Callback function for the animation step draw event.\n         *\n         * @type {DrawEventCallback}\n         */\n        this.draw = draw;\n\n        /**\n         * Callback for the animation complete event.\n         *\n         * @type {EndEventCallback}\n         */\n        this.end = end;\n\n        if (typeof this.draw !== 'function') {\n            throw new TypeError('Invalid animation draw callback:', draw);\n        }\n\n        if (typeof this.end !== 'function') {\n            throw new TypeError('Invalid animation end callback:', end);\n        }\n    }\n\n    /* istanbul ignore next: non-testable */\n    /**\n     * Performs animation calling each animation step draw callback and\n     * end callback at the end of animation. Callbacks are optional to this\n     * method call. If them are not bypassed will be used that ones which\n     * was pre-set on constructing an Animation object or pre-set after\n     * construction.\n     *\n     * @example\n     * function draw(percent) {\n     *     $('.my-animated-divs').css({\n     *         width: parseInt(percent * 100, 10) + '%'\n     *     });\n     * }\n     * function done() {\n     *     console.log('Animation complete!');\n     * }\n     *\n     * // Define 'draw' and 'end' callbacks on construction\n     * var animation = new Animation('cycle', 500, draw, done);\n     * animation.animate();\n     *\n     * // Define 'draw' and 'end' callbacks after construction\n     * var animation = new Animation('cycle', 500);\n     * animation.draw = draw;\n     * animation.end = done;\n     * animation.animate();\n     *\n     * // Define 'draw' and 'end' callbacks at animation\n     * var animation = new Animation('cycle', 500);\n     * animation.animate(draw, done);\n     *\n     * @param {DrawEventCallback} [draw]\n     * @param {EndEventCallback} [end]\n     */\n\n\n    _createClass(Animation, [{\n        key: 'animate',\n        value: function animate(draw, end) {\n            var _this = this;\n\n            //noinspection JSUnresolvedVariable\n            var start = vendorize('animationStartTime') || window.performance && window.performance.now ? window.performance.now() : Date.now();\n\n            draw = draw || this.draw;\n            end = end || this.end;\n\n            /**\n             * Current requested animation frame identifier\n             *\n             * @type {number}\n             */\n            this.frame = requestAnimationFrame(function (time) {\n                return step(time, draw, start, rules[_this.rule] || _this.rule, _this.duration, end, _this);\n            });\n        }\n\n        /**\n         * Destroys this object properly\n         */\n\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            if (this.frame) {\n                var cancelAnimationFrame = vendorize('cancelAnimationFrame') ||\n                /* istanbul ignore next */\n                function (id) {};\n\n                cancelAnimationFrame(this.frame);\n                this.frame = null;\n            }\n\n            this.draw = null;\n            this.end = null;\n        }\n    }]);\n\n    return Animation;\n}();\n\n/**\n * Animation rules bound statically to Animation constructor.\n *\n * @type {AnimationRules}\n * @static\n */\n\n\nAnimation.rules = rules;\n\n/*!\n * @license\n * Minimalistic HTML5 Canvas Gauge implementation\n *\n * This code is subject to MIT license.\n *\n * Copyright (c) 2012 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n/**\n * @typedef {{ constructor: function(options: object): GaugeInterface, draw: function(): GaugeInterface }} GaugeInterface\n */\n\n/**\n * DOM Observer.\n * It will observe DOM document for a configured element types and\n * instantiate associated Types for an existing or newly added DOM elements\n *\n * @example\n * class ProgressBar {\n *     constructor(options) {}\n *     draw() {}\n * }\n *\n * // It will observe DOM document for elements <div>\n * // having attribute 'data-type=\"progress\"'\n * // and instantiate for each new instance of ProgressBar\n *\n * new DomParser({color: 'red'}, 'div', 'progress', ProgressBar);\n *\n * // assume we could have HTML like this\n * // <div data-type=\"progress\" color=\"blue\"></div>\n * // in this case all matching attributes names for a given options will be\n * // parsed and bypassed to an instance from HTML attributes\n */\n\nvar DomObserver = function () {\n\n    /**\n     * @constructor\n     * @param {object} options\n     * @param {string} element\n     * @param {string} Type\n     */\n    function DomObserver(options, element, Type) {\n        var _this2 = this;\n\n        _classCallCheck(this, DomObserver);\n\n        //noinspection JSUnresolvedVariable\n        /**\n         * Default instantiation options for the given Type\n         *\n         * @type {Object}\n         */\n        this.options = options;\n\n        /**\n         * Name of an element to lookup/observe\n         *\n         * @type {string}\n         */\n        this.element = element.toLowerCase();\n\n        /**\n         * data-type attribute value to lookup\n         *\n         * @type {string}\n         */\n        this.type = DomObserver.toDashed(Type);\n\n        /**\n         * Actual type constructor to instantiate for each found element\n         *\n         * @type {Function}\n         */\n        this.Type = window[Type];\n\n        /* istanbul ignore next: this should be tested with end-to-end tests */\n        DomObserver.domReady(function () {\n            _this2.traverse();\n\n            if (window.MutationObserver) {\n                //noinspection JSCheckFunctionSignatures\n                new MutationObserver(_this2.observe.bind(_this2)).observe(document.body, {\n                    childList: true,\n                    subtree: true,\n                    attributes: true,\n                    characterData: true,\n                    attributeOldValue: true,\n                    characterDataOldValue: true\n                });\n            }\n        });\n    }\n\n    /**\n     * Checks if given node is valid node to process\n     *\n     * @param {Node|HTMLElement} node\n     * @returns {boolean}\n     */\n\n\n    _createClass(DomObserver, [{\n        key: 'isValidNode',\n        value: function isValidNode(node) {\n            return !!(node.tagName && node.tagName.toLowerCase() === this.element && node.getAttribute('data-type') === this.type);\n        }\n\n        /**\n         * Traverse entire current DOM tree and process matching nodes.\n         * Usually it should be called only once on document initialization.\n         */\n\n    }, {\n        key: 'traverse',\n        value: function traverse() {\n            var elements = document.getElementsByTagName(this.element);\n            var i = 0,\n                s = elements.length;\n\n            /* istanbul ignore next: this should be tested with end-to-end tests */\n            for (; i < s; i++) {\n                var node = elements[i];\n\n                if (this.isValidNode(node)) {\n                    this.process(node);\n                }\n            }\n        }\n\n        /**\n         * Observes given mutation records for an elements to process\n         *\n         * @param {MutationRecord[]} records\n         */\n\n    }, {\n        key: 'observe',\n        value: function observe(records) {\n            var i = 0;\n            var s = records.length;\n\n            /* istanbul ignore next: this should be tested with end-to-end tests */\n            for (; i < s; i++) {\n                var record = records[i];\n\n                if (record.type === 'attributes' && record.attributeName === 'data-type' && this.isValidNode(record.target) && record.oldValue !== this.type) // skip false-positive mutations\n                    {\n                        this.process(record.target);\n                    } else if (record.addedNodes && record.addedNodes.length) {\n                    var ii = 0;\n                    var ss = record.addedNodes.length;\n\n                    for (; ii < ss; ii++) {\n                        var node = record.addedNodes[ii];\n\n                        if (this.isValidNode(node)) {\n                            this.process(node);\n                        }\n                    }\n                }\n            }\n        }\n\n        /**\n         * Parses given attribute value to a proper JavaScript value.\n         * For example it will parse some stringified value to a proper type\n         * value, e.g. 'true' => true, 'null' => null, '{\"prop\": 20}' => {prop: 20}\n         *\n         * @param {*} value\n         * @return {*}\n         */\n\n    }, {\n        key: 'process',\n\n\n        /**\n         * Processes a given node, instantiating a proper type constructor for it\n         *\n         * @param {Node|HTMLElement} node\n         * @returns {GaugeInterface}\n         */\n        value: function process(node) {\n            var prop = void 0;\n            var options = JSON.parse(JSON.stringify(this.options));\n\n            for (prop in options) {\n                /* istanbul ignore else: non-testable in most cases */\n                if (options.hasOwnProperty(prop)) {\n                    var attributeName = DomObserver.toAttributeName(prop);\n                    var attributeValue = DomObserver.parse(node.getAttribute(attributeName));\n\n                    if (attributeValue !== null && attributeValue !== undefined) {\n                        options[prop] = attributeValue;\n                    }\n                }\n            }\n\n            options.renderTo = node;\n\n            return new this.Type(options).draw();\n        }\n\n        /**\n         * Transforms camelCase string to dashed string\n         *\n         * @static\n         * @param {string} camelCase\n         * @return {string}\n         */\n\n    }], [{\n        key: 'parse',\n        value: function parse(value) {\n            // parse boolean\n            if (value === 'true') return true;\n            if (value === 'false') return false;\n\n            // parse undefined\n            if (value === 'undefined') return undefined;\n\n            // parse null\n            if (value === 'null') return null;\n\n            // Comma-separated strings to array parsing.\n            // It won't match strings which contains non alphanum characters to\n            // prevent strings like 'rgba(0,0,0,0)' or JSON-like from being parsed.\n            // Typically it simply allows easily declare arrays as comma-separated\n            // numbers or plain strings. If something more complicated is\n            // required it can be declared using JSON format syntax\n            if (/^[\\w\\d\\s]+(?:,[\\w\\d\\s]+)+$/.test(value)) {\n                return value.split(',');\n            }\n\n            // parse JSON\n            try {\n                return JSON.parse(value);\n            } catch (e) {}\n\n            // plain value - no need to parse\n            return value;\n        }\n    }, {\n        key: 'toDashed',\n        value: function toDashed(camelCase) {\n            var arr = camelCase.split(/(?=[A-Z])/);\n            var i = 1;\n            var s = arr.length;\n            var str = arr[0].toLowerCase();\n\n            for (; i < s; i++) {\n                str += '-' + arr[i].toLowerCase();\n            }\n\n            return str;\n        }\n\n        /**\n         * Transforms camel case property name to dash separated attribute name\n         *\n         * @static\n         * @param {string} str\n         * @returns {string}\n         */\n\n    }, {\n        key: 'toAttributeName',\n        value: function toAttributeName(str) {\n            return 'data-' + DomObserver.toDashed(str);\n        }\n\n        /**\n         * Cross-browser DOM ready handler\n         *\n         * @static\n         * @param {Function} handler\n         */\n\n    }, {\n        key: 'domReady',\n        value: function domReady(handler) {\n            if (window.addEventListener) {\n                window.addEventListener('DOMContentLoaded', handler, false);\n            } else {\n                window.attachEvent('onload', handler);\n            }\n        }\n    }]);\n\n    return DomObserver;\n}();\n\n/*!\n * @license\n * Minimalistic HTML5 Canvas Gauge implementation\n *\n * This code is subject to MIT license.\n *\n * Copyright (c) 2012 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n/**\n * Drawings on canvas using hidden canvas as a cache for better\n * performance drawings during canvas animations. SmartCanvas also\n * adopts a canvas to\n */\n\n\nvar SmartCanvas = function () {\n\n    /**\n     * @constructor\n     * @param {HTMLCanvasElement} canvas\n     * @param {number} width\n     * @param {number} height\n     */\n    function SmartCanvas(canvas, width, height) {\n        _classCallCheck(this, SmartCanvas);\n\n        SmartCanvas.collection.push(this);\n\n        /**\n         * Canvas base width\n         *\n         * @type {number}\n         */\n        this.width = width || 0;\n\n        /**\n         * Canvas base height\n         *\n         * @type {number}\n         */\n        this.height = height || 0;\n\n        /**\n         * Target drawings canvas element\n         *\n         * @type {HTMLCanvasElement}\n         */\n        this.element = canvas;\n\n        this.init();\n    }\n\n    /**\n     * Initializes canvases and contexts\n     */\n\n\n    _createClass(SmartCanvas, [{\n        key: 'init',\n        value: function init() {\n            var pixelRatio = SmartCanvas.pixelRatio;\n\n            this.element.width = this.width * pixelRatio;\n            this.element.height = this.height * pixelRatio;\n\n            this.element.style.width = this.width + 'px';\n            this.element.style.height = this.height + 'px';\n\n            /**\n             * Canvas caching element\n             *\n             * @type {HTMLCanvasElement|Node}\n             */\n            this.elementClone = this.element.cloneNode(true);\n\n            //noinspection JSUnresolvedVariable\n            /**\n             * Target drawings canvas element 2D context\n             *\n             * @type {CanvasRenderingContext2D}\n             */\n            this.context = this.element.getContext('2d');\n\n            /**\n             * Canvas caching element 2D context\n             *\n             * @type {CanvasRenderingContext2D}\n             */\n            this.contextClone = this.elementClone.getContext('2d');\n\n            /**\n             * Actual drawings width\n             *\n             * @type {number}\n             */\n            this.drawWidth = this.element.width;\n\n            /**\n             * Actual drawings height\n             *\n             * @type {number}\n             */\n            this.drawHeight = this.element.height;\n\n            /**\n             * X-coordinate of drawings zero point\n             *\n             * @type {number}\n             */\n            this.drawX = this.drawWidth / 2;\n\n            /**\n             * Y-coordinate of drawings zero point\n             *\n             * @type {number}\n             */\n            this.drawY = this.drawHeight / 2;\n\n            /**\n             * Minimal side length in pixels of the drawing\n             *\n             * @type {number}\n             */\n            this.minSide = this.drawX < this.drawY ? this.drawX : this.drawY;\n\n            this.elementClone.initialized = false;\n\n            this.contextClone.translate(this.drawX, this.drawY);\n            this.contextClone.save();\n\n            this.context.translate(this.drawX, this.drawY);\n            this.context.save();\n\n            this.context.max = this.contextClone.max = this.minSide;\n            this.context.maxRadius = this.contextClone.maxRadius = null;\n        }\n\n        /**\n         * Destroys this object, removing the references from memory\n         */\n\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            var index = SmartCanvas.collection.indexOf(this);\n\n            /* istanbul ignore else */\n            if (~index) {\n                SmartCanvas.collection.splice(index, 1);\n            }\n\n            // derefecence all created elements\n            this.context.max = null;\n            delete this.context.max;\n\n            this.context.maxRadius = null;\n            delete this.context.maxRadius;\n\n            this.context = null;\n            this.contextClone = null;\n            this.elementClone = null;\n            this.element = null;\n\n            /**\n             * On canvas redraw event callback\n             *\n             * @type {function|null|undefined}\n             */\n            this.onRedraw = null;\n        }\n\n        /**\n         * Commits the drawings\n         */\n\n    }, {\n        key: 'commit',\n        value: function commit() {\n            var scale = SmartCanvas.pixelRatio;\n\n            if (scale !== 1) {\n                this.contextClone.scale(scale, scale);\n                this.contextClone.save();\n            }\n\n            return this;\n        }\n\n        /**\n         * Redraw this object\n         */\n\n    }, {\n        key: 'redraw',\n        value: function redraw() {\n            this.init();\n\n            /**\n             * On canvas redraw event callback\n             *\n             * @type {function(): *}\n             */\n            this.onRedraw && this.onRedraw();\n\n            return this;\n        }\n\n        /**\n         * Returns current device pixel ratio\n         *\n         * @returns {number}\n         */\n\n    }], [{\n        key: 'redraw',\n\n\n        /**\n         * Forces redraw all canvas in the current collection\n         */\n        value: function redraw() {\n            var i = 0;\n            var s = SmartCanvas.collection.length;\n\n            for (; i < s; i++) {\n                SmartCanvas.collection[i].redraw();\n            }\n        }\n    }, {\n        key: 'pixelRatio',\n        get: function get() {\n            /* istanbul ignore next */\n            //noinspection JSUnresolvedVariable\n            return window.devicePixelRatio || 1;\n        }\n    }]);\n\n    return SmartCanvas;\n}();\n\nSmartCanvas.collection = [];\n\n/* istanbul ignore next: very browser-specific testing required to cover */\n//noinspection JSUnresolvedVariable\nif (window.matchMedia) {\n    //noinspection JSUnresolvedFunction\n    window.matchMedia('screen and (min-resolution: 2dppx)').addListener(SmartCanvas.redraw);\n}\n\n/*!\n * @license\n * Minimalistic HTML5 Canvas Gauge implementation\n *\n * This code is subject to MIT license.\n *\n * Copyright (c) 2012 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/**\n * Describes rendering target element. Can be either string identifier of\n * the element or the element itself.\n *\n * @typedef {HTMLElement|string} RenderTarget\n */\n\n/**\n * Highlight area definition.\n * It describes highlight area starting from value to value using\n * color. Color can be describes with hex, rgb or rgba value.\n *\n * @typedef {{ from: number, to: number, color: string}} Highlight\n */\n\n/**\n *\n * @type {{renderTo: RenderTarget, width: number, height: number, minValue: number, maxValue: number, value: number, units: string|boolean, majorTicks: number[]|string[], minorTicks: number, strokeTicks: boolean, updateValueOnAnimation: boolean, glow: boolean, title: string|boolean, valueInt: number, valueDec: number, majorTicksInt: number, majorTicksDec: number, animation: boolean, animationDuration: number, animationRule: string|AnimationRule, colorPlate: string, colorMajorTicks: string, colorMinorTicks: string, colorTitle: string, colorUnits: string, colorNumbers: string, colorNeedleStart: string, colorNeedleEnd: string, colorValueText: string, colorValueTextShadow: string, colorBorderShadow: string, colorBorderOuterStart: string, colorBorderOuterEnd: string, colorBorderMiddleStart: string, colorBorderMiddleEnd: string, colorBorderInnerStart: string, colorBorderInnerEnd: string, needle: boolean, needleShadow: boolean, needleType: string, borderOuterWidth: number, borderMiddleWidth: number, borderInnerWidth: number, borderShadowWidth: number, valueBox: boolean, valueText: string|boolean, highlights: Highlight[]}} GenericOptions\n */\nvar GenericOptions = {\n    // basic options\n    renderTo: null,\n    width: 200,\n    height: 200,\n    minValue: 0,\n    maxValue: 100,\n    value: 0,\n    units: false,\n    majorTicks: [0, 20, 40, 60, 80, 100],\n    minorTicks: 10,\n    strokeTicks: true,\n    updateValueOnAnimation: false,\n    glow: true,\n    title: false,\n\n    // number formats\n    valueInt: 3,\n    valueDec: 2,\n    majorTicksInt: 1,\n    majorTicksDec: 0,\n\n    // animations\n    animation: true,\n    animationDuration: 250,\n    animationRule: 'cycle',\n\n    // colors\n    colorPlate: '#fff',\n    colorMajorTicks: '#444',\n    colorMinorTicks: '#666',\n    colorTitle: '#888',\n    colorUnits: '#888',\n    colorNumbers: '#444',\n    colorNeedleStart: 'rgba(240,128,128,1)',\n    colorNeedleEnd: 'rgba(255,160,122,.9)',\n    colorValueText: '#444',\n    colorValueTextShadow: 'rgba(0,0,0,0.3)',\n    colorBorderShadow: 'rgba(0,0,0,0.5)',\n    colorBorderOuterStart: '#ddd',\n    colorBorderOuterEnd: '#aaa',\n    colorBorderMiddleStart: '#eee',\n    colorBorderMiddleEnd: '#f0f0f0',\n    colorBorderInnerStart: '#fafafa',\n    colorBorderInnerEnd: '#ccc',\n\n    // needle\n    needle: true,\n    needleShadow: true,\n    needleType: 'arrow',\n\n    // borders\n    borderOuterWidth: 3,\n    borderMiddleWidth: 3,\n    borderInnerWidth: 3,\n    borderShadowWidth: 3,\n\n    // value and highlights\n    valueBox: true,\n    valueText: true,\n    highlights: [{ from: 20, to: 60, color: '#eee' }, { from: 60, to: 80, color: '#ccc' }, { from: 80, to: 100, color: '#999' }]\n};\n\nGenericOptions;\n\n/*!\n * @license\n * Minimalistic HTML5 Canvas Gauge implementation\n *\n * This code is subject to MIT license.\n *\n * Copyright (c) 2012 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/**\n * Gauge collections type.\n *\n * It is used ES5 declaration here, because babel\n * transpiles inheritance incorrectly in this case.\n *\n * @class Collection\n * @constructor\n */\nfunction Collection() {\n    Array.prototype.constructor.apply(this, arguments);\n}\n\nCollection.prototype = Object.create(Array.prototype);\nCollection.prototype.constructor = Collection;\n\n/**\n * Returns gauge object by its identifier or index in the collection\n *\n * @param {string|number} id\n * @return {*}\n */\nCollection.prototype.get = function (id) {\n    if (typeof id === 'string') {\n        var i = 0;\n        var s = this.length;\n\n        for (; i < s; i++) {\n            var canvas = this[i].options.renderTo.tagName ? this[i].options.renderTo :\n            /* istanbul ignore next: should be tested with e2e tests */\n            document.getElementById(this[i].options.renderTo || '');\n\n            if (canvas.getAttribute('id') === id) {\n                return this[i];\n            }\n        }\n    } else if (typeof id === 'number') {\n        return this[id];\n    }\n\n    return null;\n};\n\nvar gaugesCollection = new Collection();\n\n/**\n * Basic abstract BaseGauge class implementing common functionality\n * for different type of gauges.\n *\n * It should not be instantiated directly but must be extended by a final\n * gauge implementation.\n *\n * @abstract\n * @example\n *\n * class MyCoolGauge extends BaseGauge {\n *\n *     // theses methods below MUST be implemented:\n *\n *     constructor(options) {\n *        // ... do something with options\n *        super(options);\n *        // ... implement anything else\n *     }\n *\n *     draw() {\n *         // ... some implementation here\n *         return this;\n *     }\n * }\n */\n\nvar BaseGauge = function () {\n\n    /**\n     * @constructor\n     * @abstract\n     * @param {GenericOptions} options\n     */\n    function BaseGauge(options) {\n        _classCallCheck(this, BaseGauge);\n\n        var className = this.constructor.name;\n\n        if (className === 'BaseGauge') {\n            throw new TypeError('Attempt to instantiate abstract class!');\n        }\n\n        gaugesCollection.push(this);\n\n        /**\n         * Gauge type name\n         *\n         * @type {string} typeName\n         */\n        this.typeName = className;\n\n        /**\n         * Gauge type class\n         *\n         * @type {BaseGauge} type\n         */\n        this.type = window[className];\n\n        options.minValue = parseFloat(options.minValue);\n        options.maxValue = parseFloat(options.maxValue);\n\n        /**\n         * Gauge options\n         *\n         * @type {GenericOptions} options\n         */\n        this.options = options || {};\n\n        if (!options.renderTo) {\n            throw TypeError('Canvas element was not specified when creating ' + 'the Gauge object!');\n        }\n\n        var canvas = options.renderTo.tagName ? options.renderTo :\n        /* istanbul ignore next: to be tested with e2e tests */\n        document.getElementById(options.renderTo);\n\n        /**\n         * @type {SmartCanvas} canvas\n         */\n        this.canvas = new SmartCanvas(canvas, options.width, options.height);\n        this.canvas.onRedraw = this.draw.bind(this);\n\n        /**\n         * @type {Animation} animation\n         */\n        this.animation = new Animation(options.animationRule, options.animationDuration);\n    }\n\n    /**\n     * Sets new value for this gauge.\n     * If gauge is animated by configuration it will trigger a proper animation.\n     * Upsetting a value triggers gauge redraw.\n     *\n     * @param {number} value\n     */\n\n\n    _createClass(BaseGauge, [{\n        key: 'update',\n\n\n        /**\n         * Updates gauge configuration options at runtime and redraws the gauge\n         *\n         * @param {GaugeOptions} options\n         * @returns {BaseGauge}\n         */\n        value: function update(options) {\n            Object.assign(this.options, options || {});\n\n            this.canvas.width = this.options.width;\n            this.canvas.height = this.options.height;\n\n            this.animation.rule = this.options.animationRule;\n            this.animation.duration = this.options.animationDuration;\n\n            this.canvas.redraw();\n\n            return this;\n        }\n\n        /**\n         * Performs destruction of this object properly\n         */\n\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            var index = gaugesCollection.indexOf(this);\n\n            /* istanbul ignore else */\n            if (~index) {\n                //noinspection JSUnresolvedFunction\n                gaugesCollection.splice(index, 1);\n            }\n\n            this.canvas.destroy();\n            this.canvas = null;\n\n            this.animation.destroy();\n            this.animation = null;\n        }\n\n        /**\n         * Triggering gauge render on a canvas.\n         *\n         * @abstract\n         * @returns {BaseGauge}\n         */\n\n    }, {\n        key: 'draw',\n        value: function draw() {\n            throw new TypeError('draw() must be implemented by a child class!');\n        }\n\n        /**\n         * Collection of the gauges on a page.\n         * The collection is singleton collection of the gauges spread\n         * across all gauge types.\n         *\n         * @return {Collection}\n         */\n\n    }, {\n        key: 'value',\n        set: function set(value) {\n            var _this3 = this;\n\n            if (value === this.options.value) return;\n\n            if (this.options.animation) {\n                (function () {\n                    var fromValue = _this3.options.value;\n\n                    /**\n                     * @type {number}\n                     * @access private\n                     */\n                    _this3._value = value;\n\n                    _this3.animation.animate(function (percent) {\n                        _this3.options.value = fromValue + (value - fromValue) * percent;\n\n                        _this3.draw();\n                    }, function () {\n                        _this3.options.value = value;\n                        delete _this3._value;\n                        _this3.draw();\n                    });\n                })();\n            } else {\n                this.options.value = value;\n                this.draw();\n            }\n        }\n\n        /**\n         * Returns current value of the gauge\n         *\n         * @return {number}\n         */\n        ,\n        get: function get() {\n            return typeof this._value === 'undefined' ? this.options.value : this._value;\n        }\n    }], [{\n        key: 'initialize',\n\n\n        /**\n         * Inject given gauge object into DOM\n         *\n         * @param {string} Type\n         * @param {GenericOptions} options\n         */\n        value: function initialize(Type, options) {\n            new DomObserver(options, 'canvas', Type);\n        }\n    }, {\n        key: 'collection',\n        get: function get() {\n            return gaugesCollection;\n        }\n    }]);\n\n    return BaseGauge;\n}();\n\nwindow['BaseGauge'] = BaseGauge;\n\n/*!\n * @license\n * Minimalistic HTML5 Canvas Gauge implementation\n *\n * This code is subject to MIT license.\n *\n * Copyright (c) 2012 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/**\n * @access private\n * @typedef {CanvasRenderingContext2D|{max: number, maxRadius: number}} Canvas2DContext\n */\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws rounded corners rectangle\n *\n * @param {Canvas2DContext} context\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {number} r\n */\nfunction roundRect(context, x, y, w, h, r) {\n    context.beginPath();\n\n    context.moveTo(x + r, y);\n    context.lineTo(x + w - r, y);\n\n    context.quadraticCurveTo(x + w, y, x + w, y + r);\n    context.lineTo(x + w, y + h - r);\n\n    context.quadraticCurveTo(x + w, y + h, x + w - r, y + h);\n    context.lineTo(x + r, y + h);\n\n    context.quadraticCurveTo(x, y + h, x, y + h - r);\n    context.lineTo(x, y + r);\n\n    context.quadraticCurveTo(x, y, x + r, y);\n\n    context.closePath();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Pads a given value with leading zeros using the given options\n *\n * @param {number} val\n * @param {GaugeOptions|{valueInt: number, valueDec: number}} options\n * @returns {string}\n */\nfunction padValue(val, options) {\n    var dec = options.valueDec;\n    var int = options.valueInt;\n    var i = 0;\n    var s = void 0,\n        strVal = void 0,\n        n = void 0;\n\n    val = parseFloat(val);\n    n = val < 0;\n    val = Math.abs(val);\n\n    if (dec > 0) {\n        strVal = val.toFixed(dec).toString().split('.');\n        s = int - strVal[0].length;\n\n        for (; i < s; ++i) {\n            strVal[0] = '0' + strVal[0];\n        }\n\n        strVal = (n ? '-' : '') + strVal[0] + '.' + strVal[1];\n    } else {\n        strVal = Math.round(val).toString();\n        s = int - strVal.length;\n\n        for (; i < s; ++i) {\n            strVal = '0' + strVal;\n        }\n\n        strVal = (n ? '-' : '') + strVal;\n    }\n\n    return strVal;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Formats a number for display on the dial's plate using the majorTicksFormat\n * config option.\n *\n * @param {number} num number to format\n * @param {object} options\n * @returns {string} formatted number\n */\nfunction formatMajorTickNumber(num, options) {\n    var right = void 0,\n        hasDec = false;\n\n    // First, force the correct number of digits right of the decimal.\n    if (options.majorTicksDec === 0) {\n        right = Math.round(num).toString();\n    } else {\n        right = num.toFixed(options.majorTicksDec);\n    }\n\n    // Second, force the correct number of digits left of the decimal.\n    if (options.majorTicksInt > 1) {\n        // Does this number have a decimal?\n        hasDec = ~right.indexOf('.');\n\n        // Is this number a negative number?\n        if (~right.indexOf('-')) {\n            return '-' + [options.majorTicksInt + options.majorTicksDec + 2 + (hasDec ? 1 : 0) - right.length].join('0') + right.replace('-', '');\n        } else {\n            return [options.majorTicksInt + options.majorTicksDec + 1 + (hasDec ? 1 : 0) - right.length].join('0') + right;\n        }\n    }\n\n    return right;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Transforms degrees to radians\n *\n * @param {number} degrees\n * @returns {number}\n */\nfunction radians(degrees) {\n    return degrees * Math.PI / 180;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Calculates and returns radial point coordinates\n *\n * @param {number} radius\n * @param {number} angle\n * @returns {{x: number, y: number}}\n */\nfunction radialPoint(radius, angle) {\n    return { x: -radius * Math.sin(angle), y: radius * Math.cos(angle) };\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Creates and returns linear gradient canvas object\n *\n * @param {Canvas2DContext} context\n * @param {string} colorFrom\n * @param {string} colorTo\n * @param {number} length\n * @returns {CanvasGradient}\n */\nfunction linearGradient(context, colorFrom, colorTo, length) {\n    var grad = context.createLinearGradient(0, 0, 0, length);\n\n    grad.addColorStop(0, colorFrom);\n    grad.addColorStop(1, colorTo);\n\n    return grad;\n}\n\nvar drawings = {\n    roundRect: roundRect,\n    padValue: padValue,\n    formatMajorTickNumber: formatMajorTickNumber,\n    radians: radians,\n    radialPoint: radialPoint,\n    linearGradient: linearGradient\n};\n\ndrawings;\n\n/*!\n * @license\n * Minimalistic HTML5 Canvas Gauge implementation\n *\n * This code is subject to MIT license.\n *\n * Copyright (c) 2012 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n// todo: customizable fonts\n// todo: readme and documentation update\n// todo: github pages\n// todo: wiki\n// todo: LinearGauge implementation\n// todo: online configurator\n// todo: online packager\n// todo: e2e tests\n// todo: angular 2 integration\n// todo: react integrations\n// todo: typescript definitions\n\n/**\n * Gauge configuration options\n *\n * @typedef {GenericOptions|{ticksAngle: number, startAngle: number, colorNeedleCircleOuterStart: string, colorNeedleCircleOuterEnd: string, colorNeedleCircleInnerStart: string, colorNeedleCircleInnerEnd: string, colorNeedleShadowUp: string, colorNeedleShadowDown: string, colorValueBoxRectStart: string, colorValueBoxRectEnd: string, colorValueBoxBackground: string, colorValueBoxShadow: string, needleStart: number, needleEnd: number, needleWidth: number, needleCircleSize: number, needleCircleInner: boolean, needleCircleOuter: boolean}} GaugeOptions\n */\n\n/**\n * Default gauge configuration options\n *\n * @access private\n * @type {GaugeOptions}\n */\nvar defaultGaugeOptions = Object.assign({}, GenericOptions, {\n    // basic options\n    ticksAngle: 270,\n    startAngle: 45,\n\n    // colors\n    colorNeedleCircleOuterStart: '#f0f0f0',\n    colorNeedleCircleOuterEnd: '#ccc',\n    colorNeedleCircleInnerStart: '#e8e8e8',\n    colorNeedleCircleInnerEnd: '#f5f5f5',\n    colorNeedleShadowUp: 'rgba(2,255,255,0.2)',\n    colorNeedleShadowDown: 'rgba(188,143,143,0.45)',\n    colorValueBoxRectStart: '#888',\n    colorValueBoxRectEnd: '#666',\n    colorValueBoxBackground: '#babab2',\n    colorValueBoxShadow: 'rgba(0,0,0,1)',\n\n    // needle\n    needleStart: 0,\n    needleEnd: 85,\n    needleWidth: 4,\n    needleCircleSize: 10,\n    needleCircleInner: true,\n    needleCircleOuter: true\n});\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gradient-filled circle on a canvas\n *\n * @access private\n * @param {number} radius\n * @param {Canvas2DContext} context\n * @param {string} start gradient start color\n * @param {string} end gradient end color\n */\nfunction drawCircle(radius, context, start, end) {\n    context.beginPath();\n    context.arc(0, 0, radius, 0, Math.PI * 2, true);\n    context.fillStyle = drawings.linearGradient(context, start, end, radius);\n    context.fill();\n    context.closePath();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Returns max radius without borders for the gauge\n *\n * @param {Canvas2DContext} context\n * @param {GaugeOptions} options\n * @return {number}\n */\nfunction maxRadius(context, options) {\n    if (!context.maxRadius) {\n        context.maxRadius = context.max - options.borderShadowWidth - options.borderOuterWidth - options.borderMiddleWidth - options.borderInnerWidth;\n    }\n\n    return context.maxRadius;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge plate on the canvas\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {GaugeOptions} options\n */\nfunction drawPlate(context, options) {\n    var d0 = options.borderShadowWidth;\n    var r0 = context.max - options.borderShadowWidth;\n    var r1 = r0 - options.borderOuterWidth;\n    var r2 = r1 - options.borderMiddleWidth;\n    var r3 = maxRadius(context, options);\n\n    context.save();\n\n    if (options.glow) {\n        context.shadowBlur = d0;\n        context.shadowColor = options.colorBorderShadow;\n    }\n\n    if (options.borderOuterWidth) {\n        drawCircle(r0, context, options.colorBorderOuterStart, options.colorBorderOuterEnd);\n    }\n\n    if (options.borderMiddleWidth) {\n        drawCircle(r1, context, options.colorBorderMiddleStart, options.colorBorderMiddleEnd);\n    }\n\n    if (options.borderInnerWidth) {\n        drawCircle(r2, context, options.colorBorderInnerStart, options.colorBorderInnerEnd);\n    }\n\n    context.restore();\n\n    context.beginPath();\n    context.arc(0, 0, r3, 0, Math.PI * 2, true);\n    context.fillStyle = options.colorPlate;\n    context.fill();\n    context.closePath();\n\n    context.save();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge highlight areas on a canvas\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {GaugeOptions} options\n */\nfunction drawHighlights(context, options) {\n    context.save();\n\n    var r1 = maxRadius(context, options) - context.max * .05;\n    var r2 = r1 - context.max * .15;\n    var i = 0,\n        s = options.highlights.length;\n\n    for (; i < s; i++) {\n        var hlt = options.highlights[i];\n        var vd = (options.maxValue - options.minValue) / options.ticksAngle;\n        var sa = drawings.radians(options.startAngle + (hlt.from - options.minValue) / vd);\n        var ea = drawings.radians(options.startAngle + (hlt.to - options.minValue) / vd);\n        var ps = drawings.radialPoint(r2, sa);\n        var pe = drawings.radialPoint(r1, sa);\n        var ps1 = drawings.radialPoint(r1, ea);\n        var pe1 = drawings.radialPoint(r2, ea);\n\n        context.beginPath();\n        context.rotate(drawings.radians(90));\n        context.arc(0, 0, r1, sa, ea, false);\n        context.restore();\n        context.save();\n        context.moveTo(ps.x, ps.y);\n        context.lineTo(pe.x, pe.y);\n        context.lineTo(ps1.x, ps1.y);\n        context.lineTo(pe1.x, pe1.y);\n        context.lineTo(ps.x, ps.y);\n        context.closePath();\n\n        context.fillStyle = hlt.color;\n        context.fill();\n\n        context.beginPath();\n        context.rotate(drawings.radians(90));\n        context.arc(0, 0, r2, sa - 0.2, ea + 0.2, false);\n        context.restore();\n        context.closePath();\n\n        context.fillStyle = options.colorPlate;\n        context.fill();\n        context.save();\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws minor ticks bar on a canvas\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {GaugeOptions} options\n */\nfunction drawMinorTicks(context, options) {\n    var radius = maxRadius(context, options) - context.max * .05;\n\n    context.lineWidth = SmartCanvas.pixelRatio;\n    context.strokeStyle = options.colorMinorTicks;\n\n    context.save();\n\n    var s = options.minorTicks * (options.majorTicks.length - 1);\n    var i = 0;\n\n    for (; i < s; ++i) {\n        var angle = options.startAngle + i * (options.ticksAngle / s);\n\n        context.rotate(drawings.radians(angle));\n\n        context.beginPath();\n        context.moveTo(0, radius);\n        context.lineTo(0, radius - context.max * .075);\n        context.stroke();\n        context.restore();\n        context.closePath();\n\n        context.save();\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge major ticks bar on a canvas\n *\n * @param {Canvas2DContext} context\n * @param {GaugeOptions} options\n */\nfunction drawMajorTicks(context, options) {\n    var r = maxRadius(context, options) - context.max * .05;\n    var i = 0;\n    var s = options.majorTicks.length;\n    var pixelRatio = SmartCanvas.pixelRatio;\n\n    context.lineWidth = 2 * pixelRatio;\n    context.strokeStyle = options.colorMajorTicks;\n    context.save();\n\n    if (s === 0) {\n        options.majorTicks.push(drawings.formatMajorTickNumber(options.minValue, options));\n        options.majorTicks.push(drawings.formatMajorTickNumber(options.maxValue, options));\n        s = 2;\n    }\n\n    i = 0;\n    for (; i < s; ++i) {\n        var a = options.startAngle + i * (options.ticksAngle / (s - 1));\n        context.rotate(drawings.radians(a));\n\n        context.beginPath();\n        context.moveTo(0, r);\n        context.lineTo(0, r - context.max * .15);\n        context.stroke();\n\n        context.restore();\n        context.closePath();\n        context.save();\n    }\n\n    if (options.strokeTicks) {\n        context.rotate(drawings.radians(90));\n\n        context.beginPath();\n        context.arc(0, 0, r, drawings.radians(options.startAngle), drawings.radians(options.startAngle + options.ticksAngle), false);\n        context.stroke();\n        context.restore();\n        context.closePath();\n\n        context.save();\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge bar numbers\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {GaugeOptions} options\n */\nfunction drawNumbers(context, options) {\n    var radius = maxRadius(context, options) - context.max * .35;\n    var points = {};\n    var i = 0;\n    var s = options.majorTicks.length;\n\n    for (; i < s; ++i) {\n        var angle = options.startAngle + i * (options.ticksAngle / (s - 1));\n        var point = drawings.radialPoint(radius, drawings.radians(angle));\n\n        if (angle === 360) angle = 0;\n\n        if (points[angle]) {\n            continue; //already drawn at this place, skipping\n        }\n\n        points[angle] = true;\n\n        context.font = 20 * (context.max / 200) + 'px Arial';\n        context.fillStyle = options.colorNumbers;\n        context.lineWidth = 0;\n        context.textAlign = 'center';\n        context.fillText(options.majorTicks[i], point.x, point.y + 3);\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge title\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {GaugeOptions} options\n */\nfunction drawTitle(context, options) {\n    if (!options.title) return;\n\n    context.save();\n    context.font = 24 * (context.max / 200) + 'px Arial';\n    context.fillStyle = options.colorTitle;\n    context.textAlign = 'center';\n    context.fillText(options.title, 0, -context.max / 4.25, context.max * .8);\n    context.restore();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws units name on the gauge\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {GaugeOptions} options\n */\nfunction drawUnits(context, options) {\n    if (!options.units) return;\n\n    context.save();\n    context.font = 22 * (context.max / 200) + 'px Arial';\n    context.fillStyle = options.colorUnits;\n    context.textAlign = 'center';\n    context.fillText(options.units, 0, context.max / 3.25, context.max * .8);\n    context.restore();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge needle shadow\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {GaugeOptions} options\n */\nfunction drawNeedleShadow(context, options) {\n    if (!options.needleShadow) return;\n\n    context.shadowOffsetX = 2;\n    context.shadowOffsetY = 2;\n    context.shadowBlur = 10;\n    context.shadowColor = options.colorNeedleShadowDown;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge needle\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {GaugeOptions} options\n */\nfunction drawNeedle(context, options) {\n    if (!options.needle) return;\n\n    var value = options.value;\n    var max = maxRadius(context, options);\n    var r1 = max / 100 * options.needleCircleSize;\n    var r2 = max / 100 * options.needleCircleSize * 0.75;\n    var rIn = max / 100 * options.needleEnd;\n    var rStart = options.needleStart ? max / 100 * options.needleStart : 0,\n        rOut = max * .2;\n    var pad1 = max / 100 * options.needleWidth;\n    var pad2 = max / 100 * options.needleWidth / 2;\n    var pixelRatio = SmartCanvas.pixelRatio;\n\n    drawNeedleShadow(context, options);\n\n    context.save();\n\n    context.rotate(drawings.radians(options.startAngle + (value - options.minValue) / (options.maxValue - options.minValue) * options.ticksAngle));\n\n    if (options.needleType === 'arrow') {\n        context.beginPath();\n        context.moveTo(-pad2, -rOut);\n        context.lineTo(-pad1, 0);\n        context.lineTo(-1 * pixelRatio, rIn);\n        context.lineTo(pixelRatio, rIn);\n        context.lineTo(pad1, 0);\n        context.lineTo(pad2, -rOut);\n        context.closePath();\n\n        context.fillStyle = drawings.linearGradient(context, options.colorNeedleStart, options.colorNeedleEnd, rIn - rOut);\n        context.fill();\n\n        context.beginPath();\n        context.lineTo(-0.5 * pixelRatio, rIn);\n        context.lineTo(-1 * pixelRatio, rIn);\n        context.lineTo(-pad1, 0);\n        context.lineTo(-pad2, -rOut);\n        context.lineTo(pad2 / 2 * pixelRatio - 2 * pixelRatio, -rOut);\n        context.closePath();\n        context.fillStyle = options.colorNeedleShadowUp;\n        context.fill();\n    } else {\n        // simple line needle\n        context.beginPath();\n        context.moveTo(-pad2, rIn);\n        context.lineTo(-pad2, rStart);\n        context.lineTo(pad2, rStart);\n        context.lineTo(pad2, rIn);\n        context.closePath();\n\n        context.fillStyle = drawings.linearGradient(context, options.colorNeedleStart, options.colorNeedleEnd, rIn - rOut);\n        context.fill();\n    }\n\n    context.restore();\n\n    if (options.needleCircleSize) {\n        drawNeedleShadow(context, options);\n\n        if (options.needleCircleOuter) {\n            context.beginPath();\n            context.arc(0, 0, r1, 0, Math.PI * 2, true);\n            context.fillStyle = drawings.linearGradient(context, options.colorNeedleCircleOuterStart, options.colorNeedleCircleOuterEnd, r1);\n            context.fill();\n            context.restore();\n            context.closePath();\n        }\n\n        if (options.needleCircleInner) {\n            context.beginPath();\n            context.arc(0, 0, r2, 0, Math.PI * 2, true);\n            context.fillStyle = drawings.linearGradient(context, options.colorNeedleCircleInnerStart, options.colorNeedleCircleInnerEnd, r2);\n            context.fill();\n            context.closePath();\n        }\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge value box\n *\n * @param {Canvas2DContext} context\n * @param {GaugeOptions} options\n * @param {number} value\n */\nfunction drawValueBox(context, options, value) {\n    if (!options.valueText) return;\n\n    var max = context.max;\n    var text = drawings.padValue(value, options);\n    var y = max - max * .33;\n    var x = 0;\n\n    context.save();\n    context.font = 40 * (max / 200) + 'px Led';\n    context.save();\n\n    if (options.valueBox) {\n        var th = 0.12 * max;\n        var tw = context.measureText('-' + drawings.padValue(0, options)).width;\n\n        drawings.roundRect(context, -tw / 2 - 0.025 * max, y - th - 0.04 * max, tw + 0.05 * max, th + 0.07 * max, 0.025 * max);\n    }\n\n    var grd = context.createRadialGradient(x, y - 0.12 * max - 0.025 * max + (0.12 * max + 0.045 * max) / 2, max / 10, x, y - 0.12 * max - 0.025 * max + (0.12 * max + 0.045 * max) / 2, max / 5);\n\n    grd.addColorStop(0, options.colorValueBoxRectStart);\n    grd.addColorStop(1, options.colorValueBoxRectEnd);\n\n    context.strokeStyle = grd;\n    context.lineWidth = 0.05 * max;\n    context.stroke();\n\n    context.shadowBlur = 0.012 * max;\n    context.shadowColor = options.colorValueBoxShadow;\n\n    context.fillStyle = options.colorValueBoxBackground;\n    context.fill();\n\n    context.restore();\n\n    context.shadowOffsetX = 0.004 * max;\n    context.shadowOffsetY = 0.004 * max;\n    context.shadowBlur = 0.012 * max;\n    context.shadowColor = options.colorValueTextShadow;\n\n    context.fillStyle = options.colorValueText;\n    context.textAlign = 'center';\n    context.fillText(text, -x, y);\n\n    context.restore();\n}\n\n/**\n * Minimalistic HTML5 Canvas Gauge\n * @example\n *  var gauge = new Gauge({\n *     renderTo: 'gauge-id', // identifier of HTML canvas element or element itself\n *     width: 400,\n *     height: 400,\n *     units: 'Km/h',\n *     title: false,\n *     value: 0,\n *     minValue: 0,\n *     maxValue: 220,\n *     majorTicks: [\n *         '0','20','40','60','80','100','120','140','160','180','200','220'\n *     ],\n *     minorTicks: 2,\n *     strokeTicks: false,\n *     highlights: [\n *         { from: 0, to: 50, color: 'rgba(0,255,0,.15)' },\n *         { from: 50, to: 100, color: 'rgba(255,255,0,.15)' },\n *         { from: 100, to: 150, color: 'rgba(255,30,0,.25)' },\n *         { from: 150, to: 200, color: 'rgba(255,0,225,.25)' },\n *         { from: 200, to: 220, color: 'rgba(0,0,255,.25)' }\n *     ],\n *     colorPlate: '#222',\n *     colorMajorTicks: '#f5f5f5',\n *     colorMinorTicks: '#ddd',\n *     colorTitle: '#fff',\n *     colorUnits: '#ccc',\n *     colorNumbers: '#eee',\n *     colorNeedleStart: 'rgba(240, 128, 128, 1)',\n *     colorNeedleEnd: 'rgba(255, 160, 122, .9)',\n *     valueBox: true,\n *     animationRule: 'bounce'\n * });\n * // draw initially\n * gauge.draw();\n * // animate\n * setInterval(() => {\n *    gauge.value = Math.random() * -220 + 220;\n * }, 1000);\n */\n\nvar Gauge = function (_BaseGauge) {\n    _inherits(Gauge, _BaseGauge);\n\n    /**\n     * @constructor\n     * @param {GaugeOptions} options\n     */\n    function Gauge(options) {\n        _classCallCheck(this, Gauge);\n\n        options = Object.assign({}, defaultGaugeOptions, options || {});\n\n        /* istanbul ignore if */\n        if (isNaN(options.startAngle)) options.startAngle = 45;\n        /* istanbul ignore if */\n        if (isNaN(options.ticksAngle)) options.ticksAngle = 270;\n\n        /* istanbul ignore if */\n        if (options.ticksAngle > 360) options.ticksAngle = 360;\n        /* istanbul ignore if */\n        if (options.ticksAngle < 0) options.ticksAngle = 0;\n\n        /* istanbul ignore if */\n        if (options.startAngle < 0) options.startAngle = 0;\n        /* istanbul ignore if */\n        if (options.startAngle > 360) options.startAngle = 360;\n\n        return _possibleConstructorReturn(this, Object.getPrototypeOf(Gauge).call(this, options));\n    }\n\n    /*  */\n    /**\n     * Triggering gauge render on a canvas.\n     *\n     * @returns {Gauge}\n     */\n\n\n    _createClass(Gauge, [{\n        key: 'draw',\n        value: function draw() {\n            var canvas = this.canvas;\n            var x = -canvas.drawX;\n            var y = -canvas.drawY;\n            var w = canvas.drawWidth;\n            var h = canvas.drawHeight;\n\n            var options = this.options;\n\n            if (!canvas.elementClone.initialized) {\n                var context = canvas.contextClone;\n\n                // clear the cache\n                context.clearRect(x, y, w, h);\n                context.save();\n\n                drawPlate(context, options);\n                drawHighlights(context, options);\n                drawMinorTicks(context, options);\n                drawMajorTicks(context, options);\n                drawNumbers(context, options);\n                drawTitle(context, options);\n                drawUnits(context, options);\n\n                canvas.elementClone.initialized = true;\n            }\n\n            this.canvas.commit();\n\n            // clear the canvas\n            canvas.context.clearRect(x, y, w, h);\n            canvas.context.save();\n\n            canvas.context.drawImage(canvas.elementClone, x, y, w, h);\n            canvas.context.save();\n\n            drawValueBox(canvas.context, options, this.value);\n            drawNeedle(canvas.context, options);\n\n            return this;\n        }\n    }]);\n\n    return Gauge;\n}(BaseGauge);\n\nwindow['Gauge'] = Gauge;\n\nBaseGauge.initialize('Gauge', defaultGaugeOptions);\n\n/*!\n * @license\n * Minimalistic HTML5 Canvas Gauge implementation\n *\n * This code is subject to MIT license.\n *\n * Copyright (c) 2012 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/**\n * Linear gauge configuration options\n *\n * @typedef {GenericOptions|{orientation: string, borderRadius: number, barBeginCircle: number, barWidth: number, barStrokeWidth: number, colorBar: string, colorBarEnd: string, colorBarStroke: string, tickSide: string, needleSide: string}} LinearGaugeOptions\n */\n\n/**\n * Default linear gauge configuration options\n *\n * @type {LinearGaugeOptions}\n */\nvar defaultLinearGaugeOptions = Object.assign({}, GenericOptions, {\n    // basic options\n    borderRadius: 0,\n    width: 150,\n    height: 400,\n\n    // bar\n    barBeginCircle: 25, // percents\n    barWidth: 15, // percents\n    barStrokeWidth: 0, // pixels\n\n    colorBarStroke: '#222222',\n    colorBar: '#cccccc',\n    colorBarEnd: '',\n    colorBarProgress: '',\n    colorBarProgressEnd: '',\n\n    tickSide: 'both', // available: 'left', 'right', 'both'\n    needleSide: 'both' });\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws rectangle on a canvas\n *\n * @param {Canvas2DContext} context\n * @param {number} r radius for founded corner rectangle if 0 or less won't be drawn\n * @param {number} x x-coordinate of the top-left corner\n * @param {number} y y-coordinate of the top-left corner\n * @param {number} w width of the rectangle\n * @param {number} h height of the rectangle\n * @param {string} colorStart base fill color of the rectangle\n * @param {string} [colorEnd] gradient color of the rectangle\n */\nfunction drawRectangle(context, r, x, y, w, h, colorStart, colorEnd) {\n    context.beginPath();\n    context.fillStyle = colorEnd ? drawings.linearGradient(context, colorStart, colorEnd, w > h ? w : h) : colorStart;\n\n    r > 0 ? drawings.roundRect(context, x, y, w, h, r) : context.rect(x, y, w, h);\n\n    context.fill();\n    context.closePath();\n    context.save();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Calculates and returns linear gauge base bar dimensions.\n *\n * @param {LinearGaugeOptions} options\n * @param {number} w\n * @param {number} h\n * @return {[number, number, number, number, boolean, number, number, number]}\n */\nfunction barDimensions(options, w, h) {\n    var length = .9;\n    var len = void 0,\n        wid = void 0,\n        ang = void 0;\n    var isVertical = h >= w;\n\n    if (isVertical) {\n        len = h;\n        wid = w;\n        ang = 270;\n    } else {\n        len = w;\n        wid = h;\n        ang = 0;\n    }\n\n    if (options.title) length -= .1;\n    if (options.units) length -= .1;\n\n    length = len * length;\n\n    var pixelRatio = SmartCanvas.pixelRatio;\n    var ds = options.barStrokeWidth * pixelRatio / 2;\n    var bw = options.barWidth / 100 * wid - ds;\n    var r = options.barBeginCircle / 100 * wid / 2;\n\n    return [wid, len, ang, length, isVertical, ds, bw, r];\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws linear gauge's bar\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n * @param {number} x x-coordinate of the top-left corner of the gauge\n * @param {number} y y-coordinate of the top-left corner of the gauge\n * @param {number} w width of the gauge\n * @param {number} h height of the gauge\n */\nfunction drawLinearBar(context, options, x, y, w, h) {\n    if (!options.barWidth) {\n        return; // no bar configured\n    }\n    // todo: allow use shadow\n\n    var _barDimensions = barDimensions(options, w, h);\n\n    var _barDimensions2 = _slicedToArray(_barDimensions, 8);\n\n    var wid = _barDimensions2[0];\n    var len = _barDimensions2[1];\n    var ang = _barDimensions2[2];\n    var length = _barDimensions2[3];\n    var isVertical = _barDimensions2[4];\n    var ds = _barDimensions2[5];\n    var bw = _barDimensions2[6];\n    var r = _barDimensions2[7];\n\n\n    context.save();\n    context.beginPath();\n\n    if (options.barBeginCircle) {\n        var cAngle = drawings.radians(ang);\n        var baseAngle = Math.atan(bw / 2 / r);\n        var sAngle = cAngle + baseAngle;\n        var eAngle = cAngle - baseAngle;\n        var sinba = Math.sin(baseAngle);\n        var cosba = Math.cos(baseAngle);\n        var arcX = isVertical ? x + wid / 2 : x + (len - length) / 2 + r;\n        var arcY = isVertical ? y + (len - length) / 2 + length - r : y + wid / 2;\n        var lx = isVertical ? arcX - r * sinba : arcX + r * cosba - ds;\n        var ly = isVertical ? arcY - r * cosba + ds : arcY - r * sinba;\n\n        context.arc(arcX, arcY, r, sAngle, eAngle);\n\n        context.moveTo(lx, ly);\n        isVertical ? ly = ly - length + r * 2 : lx = lx + length - r * 2;\n        context.lineTo(lx, ly);\n        isVertical ? lx = lx + bw : ly = ly + bw + ds / 5;\n        context.lineTo(lx, ly);\n        lx = isVertical ? arcX + r * sinba : arcX + r * cosba - ds;\n        ly = isVertical ? arcY - r * cosba + ds : arcY + r * sinba + ds / 2;\n        context.lineTo(lx, ly);\n    } else {\n        // simply rectangle\n        var rx = isVertical ? x + wid / 2 - bw / 2 : x + (len - length) / 2;\n        var ry = isVertical ? y + (len - length) / 2 : y + wid / 2 - bw / 2;\n\n        context.rect(rx, ry, isVertical ? bw : length, isVertical ? length : bw);\n    }\n\n    if (options.colorBar) {\n        context.fillStyle = options.colorBarEnd ? drawings.linearGradient(context, options.colorBar, options.colorBarEnd, length) : options.colorBar;\n        context.fill();\n    }\n\n    if (options.barStrokeWidth) {\n        context.lineWidth = options.barStrokeWidth;\n        context.strokeStyle = options.colorBarStroke;\n        context.stroke();\n    }\n\n    context.closePath();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws linear gauge's bar major ticks\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n * @param {number} x x-coordinate of the top-left corner of the gauge\n * @param {number} y y-coordinate of the top-left corner of the gauge\n * @param {number} w width of the gauge\n * @param {number} h height of the gauge\n */\nfunction drawLinearMajorTicks(context, options, x, y, w, h) {\n    var _barDimensions3 = barDimensions(options, w, h);\n\n    var _barDimensions4 = _slicedToArray(_barDimensions3, 8);\n\n    var wid = _barDimensions4[0];\n    var len = _barDimensions4[1];\n    var ang = _barDimensions4[2];\n    var length = _barDimensions4[3];\n    var isVertical = _barDimensions4[4];\n    var ds = _barDimensions4[5];\n    var bw = _barDimensions4[6];\n    var r = _barDimensions4[7];\n\n\n    var s = options.majorTicks.length;\n    var pixelRatio = SmartCanvas.pixelRatio;\n    var i = 0;\n    var hasLeft = options.tickSide !== 'right';\n    var hasRight = options.tickSide !== 'left';\n    var lw = 2 * pixelRatio;\n\n    context.lineWidth = lw;\n    context.strokeStyle = options.colorMajorTicks;\n    context.save();\n\n    if (s === 0) {\n        options.majorTicks.push(drawings.formatMajorTickNumber(options.minValue, options));\n        options.majorTicks.push(drawings.formatMajorTickNumber(options.maxValue, options));\n        s = 2;\n    }\n\n    var dlen = (len - length) / 2;\n    var d = r * 2;\n\n    length = length - lw * 2 - d;\n\n    var tx = x + w / 2 - bw / 2 - .05 * w - .1 * w;\n\n    // left\n    if (hasLeft) {\n        for (i = 0; i <= s; ++i) {\n            context.beginPath();\n\n            var ty = y + dlen + length - i * length / s + lw * 2;\n\n            context.moveTo(tx, ty);\n            context.lineTo(tx + .1 * w, ty);\n            context.stroke();\n\n            context.closePath();\n            context.save();\n        }\n    }\n\n    tx = x + w / 2 + bw / 2 + .05 * w;\n\n    // right\n    if (hasRight) {\n        for (i = 0; i <= s; ++i) {\n            context.beginPath();\n\n            var _ty = y + dlen + length - i * length / s + lw * 2;\n\n            context.moveTo(tx, _ty);\n            context.lineTo(tx + .1 * w, _ty);\n            context.stroke();\n\n            context.closePath();\n            context.save();\n        }\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws linear gauge's bar major tick numbers\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n * @param {number} x x-coordinate of the top-left corner of the gauge\n * @param {number} y y-coordinate of the top-left corner of the gauge\n * @param {number} w width of the gauge\n * @param {number} h height of the gauge\n */\nfunction drawLinearMajorTicksNumbers(context, options, x, y, w, h) {}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws linear gauge's bar minor ticks\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n * @param {number} x x-coordinate of the top-left corner of the gauge\n * @param {number} y y-coordinate of the top-left corner of the gauge\n * @param {number} w width of the gauge\n * @param {number} h height of the gauge\n */\nfunction drawLinearMinorTicks(context, options, x, y, w, h) {}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws linear gauge's bar highlighted areas\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n * @param {number} x x-coordinate of the top-left corner of the gauge\n * @param {number} y y-coordinate of the top-left corner of the gauge\n * @param {number} w width of the gauge\n * @param {number} h height of the gauge\n */\nfunction drawLinearBarHighlights(context, options, x, y, w, h) {}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws linear gauge's bar progress\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n * @param {number} x x-coordinate of the top-left corner of the gauge\n * @param {number} y y-coordinate of the top-left corner of the gauge\n * @param {number} w width of the gauge\n * @param {number} h height of the gauge\n */\nfunction drawLinearBarProgress(context, options, x, y, w, h) {}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws linear gauge's bar needle\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n * @param {number} x x-coordinate of the top-left corner of the gauge\n * @param {number} y y-coordinate of the top-left corner of the gauge\n * @param {number} w width of the gauge\n * @param {number} h height of the gauge\n */\nfunction drawLinearBarNeedle(context, options, x, y, w, h) {}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws linear gauge's title\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n * @param {number} x x-coordinate of the top-left corner of the gauge\n * @param {number} y y-coordinate of the top-left corner of the gauge\n * @param {number} w width of the gauge\n * @param {number} h height of the gauge\n */\nfunction drawLinearTitle(context, options, x, y, w, h) {}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws linear gauge's units\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n * @param {number} x x-coordinate of the top-left corner of the gauge\n * @param {number} y y-coordinate of the top-left corner of the gauge\n * @param {number} w width of the gauge\n * @param {number} h height of the gauge\n */\nfunction drawLinearUnits(context, options, x, y, w, h) {}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws linear gauge plate\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n */\nfunction drawLinearPlate(context, options, x, y, w, h) {\n    context.save();\n\n    var r = options.borderRadius;\n\n    var w1 = w - options.borderShadowWidth;\n    var w2 = w1 - options.borderOuterWidth * 2;\n    var w3 = w2 - options.borderMiddleWidth * 2;\n    var w4 = w3 - options.borderInnerWidth * 2;\n\n    var h1 = h - options.borderShadowWidth * 2;\n    var h2 = h1 - options.borderOuterWidth * 2;\n    var h3 = h2 - options.borderMiddleWidth * 2;\n    var h4 = h3 - options.borderInnerWidth * 2;\n\n    var x2 = x - (w2 - w1) / 2;\n    var x3 = x2 - (w3 - w2) / 2;\n    var x4 = x3 - (w4 - w3) / 2;\n\n    var y2 = y - (h2 - h1) / 2;\n    var y3 = y2 - (h3 - h2) / 2;\n    var y4 = y3 - (h4 - h3) / 2;\n\n    if (options.glow) {\n        context.shadowBlur = options.borderShadowWidth;\n        context.shadowColor = options.colorBorderShadow;\n    }\n\n    if (options.borderOuterWidth) {\n        drawRectangle(context, r, x, y, w1, h1, options.colorBorderOuterStart, options.colorBorderOuterEnd);\n    }\n\n    context.shadowBlur = null;\n    context.shadowColor = null;\n\n    if (options.borderMiddleWidth) {\n        drawRectangle(context, --r, x2, y2, w2, h2, options.colorBorderMiddleStart, options.colorBorderMiddleEnd);\n    }\n\n    if (options.borderInnerWidth) {\n        drawRectangle(context, --r, x3, y3, w3, h3, options.colorBorderInnerStart, options.colorBorderInnerEnd);\n    }\n\n    drawRectangle(context, r, x4, y4, w4, h4, options.colorPlate);\n\n    return [x4, y4, w4, h4];\n}\n\n/**\n * Minimalistic HTML5 Canvas Linear Gauge\n */\n\nvar LinearGauge = function (_BaseGauge2) {\n    _inherits(LinearGauge, _BaseGauge2);\n\n    /**\n     * @constructor\n     * @param {LinearGaugeOptions} options\n     */\n    function LinearGauge(options) {\n        _classCallCheck(this, LinearGauge);\n\n        /* istanbul ignore else */\n        if (!options.width) options.width = defaultLinearGaugeOptions.width;\n        /* istanbul ignore else */\n        if (!options.height) options.height = defaultLinearGaugeOptions.height;\n\n        /* istanbul ignore else */\n        if (!options.orientation) {\n            options.orientation = options.width > options.height ? 'horizontal' : 'vertical';\n        }\n\n        options = Object.assign({}, defaultLinearGaugeOptions, options || {});\n\n        return _possibleConstructorReturn(this, Object.getPrototypeOf(LinearGauge).call(this, options));\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Triggering linear gauge render on a canvas.\n     *\n     * @returns {LinearGauge}\n     */\n\n\n    _createClass(LinearGauge, [{\n        key: 'draw',\n        value: function draw() {\n            var canvas = this.canvas;\n            var x = -canvas.drawX;\n            var y = -canvas.drawY;\n            var w = canvas.drawWidth;\n            var h = canvas.drawHeight;\n\n            var options = this.options;\n\n            if (!canvas.elementClone.initialized) {\n                var context = canvas.contextClone;\n\n                // clear the cache\n                context.clearRect(x, y, w, h);\n                context.save();\n\n                var drawBox = drawLinearPlate(context, options, x, y, w, h);\n\n                drawLinearMajorTicks.apply(undefined, [context, options].concat(_toConsumableArray(drawBox)));\n                drawLinearMinorTicks.apply(undefined, [context, options].concat(_toConsumableArray(drawBox)));\n                drawLinearTitle.apply(undefined, [context, options].concat(_toConsumableArray(drawBox)));\n                drawLinearUnits.apply(undefined, [context, options].concat(_toConsumableArray(drawBox)));\n                drawLinearBar.apply(undefined, [context, options].concat(_toConsumableArray(drawBox)));\n                drawLinearMajorTicksNumbers.apply(undefined, [context, options].concat(_toConsumableArray(drawBox)));\n                drawLinearBarHighlights.apply(undefined, [context, options].concat(_toConsumableArray(drawBox)));\n\n                canvas.elementClone.initialized = true;\n            }\n\n            this.canvas.commit();\n\n            // clear the canvas\n            canvas.context.clearRect(x, y, w, h);\n            canvas.context.save();\n\n            canvas.context.drawImage(canvas.elementClone, x, y, w, h);\n            canvas.context.save();\n\n            drawLinearBarProgress(canvas.context, options, x, y, w, h);\n            drawLinearBarNeedle(canvas.context, options, x, y, w, h);\n\n            return this;\n        }\n    }]);\n\n    return LinearGauge;\n}(BaseGauge);\n\nwindow['LinearGauge'] = LinearGauge;\n\nBaseGauge.initialize('LinearGauge', defaultLinearGaugeOptions);}());"],"sourceRoot":"/source/"}