{"version":3,"sources":["gauge.min.js"],"names":["_classCallCheck","instance","Constructor","TypeError","vendorize","prop","from","window","global","vendors","i","s","length","capitalized","charAt","toUpperCase","substr","vendorProp","step","time","draw","start","rule","duration","end","anim","progress","percent","frame","requestAnimationFrame","toAttributeName","str","arr","split","toLowerCase","domReady","handler","addEventListener","attachEvent","Collection","Array","prototype","constructor","apply","this","arguments","formatMajorTickNumber","num","options","right","hasDec","majorTicksDec","Math","round","toString","toFixed","majorTicksInt","indexOf","join","replace","radians","degrees","PI","radialPoint","radius","angle","x","sin","y","cos","linearGradient","context","colorFrom","colorTo","grad","createLinearGradient","addColorStop","padValue","val","dec","valueDec","int","valueInt","strVal","n","parseFloat","abs","drawCircle","beginPath","arc","fillStyle","fill","closePath","maxRadius","max","borderShadowWidth","borderOuterWidth","borderMiddleWidth","borderInnerWidth","drawPlate","d0","r0","r1","r2","r3","save","glow","shadowBlur","shadowColor","colorBorderShadow","borders","borderOuter","colorBorderOuterStart","colorBorderOuterEnd","restore","borderMiddle","colorBorderMiddleStart","colorBorderMiddleEnd","borderInner","colorBorderInnerStart","colorBorderInnerEnd","colorPlate","drawHighlights","highlights","hlt","vd","maxValue","minValue","ticksAngle","sa","startAngle","ea","to","ps","pe","ps1","pe1","rotate","moveTo","lineTo","color","drawMinorTicks","lineWidth","SmartCanvas","pixelRatio","strokeStyle","colorMinorTicks","minorTicks","majorTicks","stroke","drawMajorTicks","r","colorMajorTicks","numberOfDefaultTicks","tickSize","push","a","strokeTicks","drawNumbers","points","point","font","colorNumbers","textAlign","fillText","drawTitle","title","colorTitle","drawUnits","units","colorUnits","drawNeedleShadow","needleShadow","shadowOffsetX","shadowOffsetY","colorNeedleShadowDown","drawNeedle","needle","value","needleCircleSize","rIn","needleEnd","rStart","needleStart","rOut","pad1","needleWidth","pad2","needleType","colorNeedleStart","colorNeedleEnd","colorNeedleShadowUp","needleCircle","needleCircleOuter","colorNeedleCircleOuterStart","colorNeedleCircleOuterEnd","needleCircleInner","colorNeedleCircleInnerStart","colorNeedleCircleInnerEnd","roundRect","w","h","quadraticCurveTo","drawValueBox","valueText","text","valueBox","th","tw","measureText","width","grd","createRadialGradient","colorValueBoxRectStart","colorValueBoxRectEnd","colorValueBoxShadow","colorValueBoxBackground","colorValueTextShadow","colorValueText","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","assign","firstSource","undefined","nextSource","keysArray","keys","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","searchElement","fromIndex","k","O","Infinity","callback","setTimeout","Date","getTime","rules","linear","p","quad","pow","dequad","quint","dequint","cycle","acos","decycle","bounce","debounce","b","elastic","delastic","Animation","_this","performance","now","cancelAnimationFrame","id","DomObserver","element","type","Type","_this2","traverse","MutationObserver","observe","bind","document","body","childList","subtree","attributes","characterData","attributeOldValue","characterDataOldValue","node","tagName","getAttribute","elements","getElementsByTagName","isValidNode","process","records","record","attributeName","oldValue","addedNodes","ii","ss","JSON","parse","stringify","hasOwnProperty","attributeValue","renderTo","test","e","canvas","height","collection","init","style","elementClone","cloneNode","getContext","contextClone","drawWidth","drawHeight","drawX","drawY","minSide","initialized","translate","index","splice","onRedraw","scale","redraw","get","devicePixelRatio","matchMedia","addListener","SharedOptions","updateValueOnAnimation","animation","animationDuration","animationRule","create","getElementById","defaultGaugeOptions","Gauge","parseInt","isNaN","clearRect","commit","drawImage","destroy","set","_this3","fromValue","_value","animate","defaultLinearGaugeOptions","orientation","LinearGauge"],"mappings":"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","file":"gauge.min.js","sourcesContent":["(function() {'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @external {Object.assign} https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n */\n/* istanbul ignore next */\nif (!Object.assign) {\n    Object.defineProperty(Object, 'assign', {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function value(target, firstSource) {\n            'use strict';\n\n            if (target === undefined || target === null) {\n                throw new TypeError('Cannot convert first argument to object');\n            }\n\n            var to = Object(target);\n            var i = 1;\n\n            for (; i < arguments.length; i++) {\n                var nextSource = arguments[i];\n\n                if (nextSource === undefined || nextSource === null) {\n                    continue;\n                }\n\n                var keysArray = Object.keys(Object(nextSource));\n                var nextIndex = 0,\n                    len = keysArray.length;\n\n                for (; nextIndex < len; nextIndex++) {\n                    var nextKey = keysArray[nextIndex];\n                    var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n\n                    if (desc !== undefined && desc.enumerable) {\n                        to[nextKey] = nextSource[nextKey];\n                    }\n                }\n            }\n\n            return to;\n        }\n    });\n}\n\n/**\n * @external {Array.indexOf} https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf\n */\n/* istanbul ignore next */\nif (!Array.prototype.indexOf) {\n    Array.prototype.indexOf = function (searchElement, fromIndex) {\n        var k;\n\n        if (this == null) {\n            throw new TypeError('\"this\" is null or not defined');\n        }\n\n        var O = Object(this);\n        var len = O.length >>> 0;\n\n        if (len === 0) {\n            return -1;\n        }\n\n        var n = +fromIndex || 0;\n\n        if (Math.abs(n) === Infinity) {\n            n = 0;\n        }\n\n        if (n >= len) {\n            return -1;\n        }\n\n        k = Math.max(n >= 0 ? n : len - Math.abs(n), 0);\n\n        while (k < len) {\n            if (k in O && O[k] === searchElement) {\n                return k;\n            }\n\n            k++;\n        }\n\n        return -1;\n    };\n}\n\n/*!\n * @license\n * Minimalistic HTML5 Canvas Gauge implementation\n *\n * This code is subject to MIT license.\n *\n * Copyright (c) 2012 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n/**\n * Look-ups for a proper vendor-specific property and returns its value\n *\n * @example\n * var requestAnimationFrame = vendorize('requestAnimationFrame');\n * // it will refer properly to:\n * //  - window.requestAnimationFrame by default or to\n * //  - window.webkitRequestAnimationFrame or to\n * //  - window.mozRequestAnimationFrame or to\n * //  - window.msRequestAnimationFrame or to\n * //  - window.oRequestAnimationFrame\n * // depending on the current browser vendor\n *\n * @author Mykhailo Stadnyk <mikhus@gmail.com>\n * @param {string} prop\n * @param {HTMLElement|Window|object} [from] - default is window\n * @returns {*}\n */\nfunction vendorize(prop, from) {\n    /* istanbul ignore else: no reason to cover */\n    if (!from) {\n        from = typeof window === 'undefined' ? global : window;\n    }\n\n    if (typeof from[prop] !== 'undefined') {\n        return from[prop];\n    }\n\n    var vendors = ['webkit', 'moz', 'ms', 'o'];\n    var i = 0;\n    var s = vendors.length;\n    var capitalized = prop.charAt(0).toUpperCase() + prop.substr(1);\n\n    for (; i < s; i++) {\n        var vendorProp = from[vendors[i] + capitalized];\n\n        /* istanbul ignore if: requires very complex environment to test (specific browser version) */\n        if (typeof vendorProp !== 'undefined') {\n            return vendorProp;\n        }\n    }\n\n    return null;\n}\n\n/*!\n * @license\n * Minimalistic HTML5 Canvas Gauge implementation\n *\n * This code is subject to MIT license.\n *\n * Copyright (c) 2012 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/* istanbul ignore next */\n/**\n * @type {function(callback: function(time: number): number, element?: HTMLElement)}\n * @access private\n */\nvar requestAnimationFrame = vendorize('requestAnimationFrame') || function (callback) {\n    return setTimeout(function () {\n        return callback(new Date().getTime());\n    }, 1000 / 60);\n};\n\n/**\n * Generic AnimationRule function interface\n *\n * @typedef {function(percent: number): number} AnimationRule\n */\n\n/**\n * Callback for animation step draw event.\n * It will be called each time animation step is executed, bypassing\n * as first argument a percent of animation completeness. It is expected\n * that this callback will do an actual work of animating an elements or\n * whatever, as far as animation engine is just calculating and executing\n * animation steps without any knowledge about things under animation.\n *\n * @typedef {function(percent: number): *} DrawEventCallback\n */\n\n/**\n * Callback for animation complete event.\n * It is called once each animation is complete.\n *\n * @typedef {function(): *} EndEventCallback\n */\n\n/**\n * Predefined known animation rules.\n * It's a simple collection of math for some most used animations.\n *\n * @typedef {{linear: AnimationRule, quad: AnimationRule, dequad: AnimationRule, quint: AnimationRule, dequint: AnimationRule, cycle: AnimationRule, decycle: AnimationRule, bounce: AnimationRule, debounce: AnimationRule, elastic: AnimationRule, delastic: AnimationRule}} AnimationRules\n */\n\n/* istanbul ignore next: no reason covering this */\nvar rules = {\n    linear: function linear(p) {\n        return p;\n    },\n    quad: function quad(p) {\n        return Math.pow(p, 2);\n    },\n    dequad: function dequad(p) {\n        return 1 - rules.quad(1 - p);\n    },\n    quint: function quint(p) {\n        return Math.pow(p, 5);\n    },\n    dequint: function dequint(p) {\n        return 1 - Math.pow(1 - p, 5);\n    },\n    cycle: function cycle(p) {\n        return 1 - Math.sin(Math.acos(p));\n    },\n    decycle: function decycle(p) {\n        return Math.sin(Math.acos(1 - p));\n    },\n    bounce: function bounce(p) {\n        return 1 - rules.debounce(1 - p);\n    },\n    debounce: function debounce(p) {\n        var a = 0,\n            b = 1;\n        for (; 1; a += b, b /= 2) {\n            if (p >= (7 - 4 * a) / 11) {\n                return -Math.pow((11 - 6 * a - 11 * p) / 4, 2) + Math.pow(b, 2);\n            }\n        }\n    },\n    elastic: function elastic(p) {\n        return 1 - rules.delastic(1 - p);\n    },\n    delastic: function delastic(p) {\n        var x = 1.5;\n        return Math.pow(2, 10 * (p - 1)) * Math.cos(20 * Math.PI * x / 3 * p);\n    }\n};\n\n/* istanbul ignore next: private, not testable */\n/**\n * Evaluates animation step and decides if the next step required or\n * stops animation calling a proper events.\n *\n * @access private\n * @param {number} time\n * @param {DrawEventCallback} draw\n * @param {number} start\n * @param {AnimationRule} rule\n * @param {number} duration\n * @param {EndEventCallback} end\n * @param {Animation} anim\n */\nfunction step(time, draw, start, rule, duration, end, anim) {\n    if (typeof rule !== 'function') {\n        throw new TypeError('Invalid animation rule:', rule);\n    }\n\n    var progress = time - start;\n    var percent = progress / duration;\n\n    if (percent > 1) {\n        percent = 1;\n    }\n\n    draw && draw(percent === 1 ? percent : rule(percent));\n\n    if (progress < duration) {\n        anim.frame = requestAnimationFrame(function (time) {\n            return step(time, draw, start, rule, duration, end, anim);\n        });\n    } else {\n        end && end();\n    }\n}\n\n/**\n * Animation engine API for JavaScript-based animations.\n * This is simply an animation core framework which simplifies creation\n * of various animations for generic purposes.\n *\n * @example\n * // create 'linear' animation engine, 500ms duration\n * let linear = new Animation('linear', 500);\n *\n * // create 'elastic' animation engine\n * let elastic = new Animation('elastic');\n *\n * // define animation behavior\n * let bounced = new Animation('bounce', 500, percent => {\n *     let value = parseInt(percent * 100, 10);\n *\n *     $('div.bounced').css({\n *         width: value + '%',\n *         height: value + '%'\n *     });\n * });\n *\n * // execute animation\n * bounced.animate();\n *\n * // execute animation and handle when its finished\n * bounced.animate(null, () => {\n *    console.log('Animation finished!');\n * });\n */\n\nvar Animation = function () {\n\n    /**\n     * @constructor\n     * @param {string|AnimationRule} rule\n     * @param {number} duration\n     * @param {DrawEventCallback} [draw]\n     * @param {EndEventCallback} [end]\n     */\n    function Animation() {\n        var rule = arguments.length <= 0 || arguments[0] === undefined ? 'linear' : arguments[0];\n        var duration = arguments.length <= 1 || arguments[1] === undefined ? 250 : arguments[1];\n        var draw = arguments.length <= 2 || arguments[2] === undefined ? function () {} : arguments[2];\n        var end = arguments.length <= 3 || arguments[3] === undefined ? function () {} : arguments[3];\n\n        _classCallCheck(this, Animation);\n\n        /**\n         * Overall animation duration in milliseconds.\n         * By default is equal to 250 ms.\n         *\n         * @type {number}\n         */\n        this.duration = duration;\n\n        /**\n         * Animation rule. By default is linear animation.\n         * Animation rule is a subject to animation rules, which are\n         * a simple object containing math-based methods for calculating\n         * animation steps.\n         *\n         * @type {string|AnimationRule}\n         */\n        this.rule = rule;\n\n        /**\n         * Callback function for the animation step draw event.\n         *\n         * @type {DrawEventCallback}\n         */\n        this.draw = draw;\n\n        /**\n         * Callback for the animation complete event.\n         *\n         * @type {EndEventCallback}\n         */\n        this.end = end;\n\n        if (typeof this.draw !== 'function') {\n            throw new TypeError('Invalid animation draw callback:', draw);\n        }\n\n        if (typeof this.end !== 'function') {\n            throw new TypeError('Invalid animation end callback:', end);\n        }\n    }\n\n    /* istanbul ignore next: non-testable */\n    /**\n     * Performs animation calling each animation step draw callback and\n     * end callback at the end of animation. Callbacks are optional to this\n     * method call. If them are not bypassed will be used that ones which\n     * was pre-set on constructing an Animation object or pre-set after\n     * construction.\n     *\n     * @example\n     * function draw(percent) {\n     *     $('.my-animated-divs').css({\n     *         width: parseInt(percent * 100, 10) + '%'\n     *     });\n     * }\n     * function done() {\n     *     console.log('Animation complete!');\n     * }\n     *\n     * // Define 'draw' and 'end' callbacks on construction\n     * var animation = new Animation('cycle', 500, draw, done);\n     * animation.animate();\n     *\n     * // Define 'draw' and 'end' callbacks after construction\n     * var animation = new Animation('cycle', 500);\n     * animation.draw = draw;\n     * animation.end = done;\n     * animation.animate();\n     *\n     * // Define 'draw' and 'end' callbacks at animation\n     * var animation = new Animation('cycle', 500);\n     * animation.animate(draw, done);\n     *\n     * @param {DrawEventCallback} [draw]\n     * @param {EndEventCallback} [end]\n     */\n\n\n    _createClass(Animation, [{\n        key: 'animate',\n        value: function animate(draw, end) {\n            var _this = this;\n\n            //noinspection JSUnresolvedVariable\n            var start = vendorize('animationStartTime') || window.performance && window.performance.now ? window.performance.now() : Date.now();\n\n            draw = draw || this.draw;\n            end = end || this.end;\n\n            /**\n             * Current requested animation frame identifier\n             *\n             * @type {number}\n             */\n            this.frame = requestAnimationFrame(function (time) {\n                return step(time, draw, start, rules[_this.rule] || _this.rule, _this.duration, end, _this);\n            });\n        }\n\n        /**\n         * Destroys this object properly\n         */\n\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            if (this.frame) {\n                var cancelAnimationFrame = vendorize('cancelAnimationFrame') ||\n                /* istanbul ignore next */\n                function (id) {};\n\n                cancelAnimationFrame(this.frame);\n                this.frame = null;\n            }\n\n            this.draw = null;\n            this.end = null;\n        }\n    }]);\n\n    return Animation;\n}();\n\n/**\n * Animation rules bound statically to Animation constructor.\n *\n * @type {AnimationRules}\n * @static\n */\n\n\nAnimation.rules = rules;\n\n/*!\n * @license\n * Minimalistic HTML5 Canvas Gauge implementation\n *\n * This code is subject to MIT license.\n *\n * Copyright (c) 2012 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n/**\n * @typedef {{ constructor: function(options: object): GaugeInterface, draw: function(): GaugeInterface }} GaugeInterface\n */\n\n/* istanbul ignore next: private, not testable */\n/**\n * Transforms camel case property name to dash separated attribute name\n *\n * @access private\n * @param {string} str\n * @returns {string}\n */\nfunction toAttributeName(str) {\n    var arr = str.split(/(?=[A-Z])/);\n    var i = 0;\n    var s = arr.length;\n\n    str = 'data';\n\n    for (; i < s; i++) {\n        str += '-' + arr[i].toLowerCase();\n    }\n\n    return str;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Cross-browser DOM ready handler\n *\n * @access private\n * @param {Function} handler\n */\nfunction domReady(handler) {\n    if (window.addEventListener) {\n        window.addEventListener('DOMContentLoaded', handler, false);\n    } else {\n        window.attachEvent('onload', handler);\n    }\n}\n\n/**\n * DOM Observer.\n * It will observe DOM document for a configured element types and\n * instantiate associated Types for an existing or newly added DOM elements\n *\n * @example\n * class ProgressBar {\n *     constructor(options) {}\n *     draw() {}\n * }\n *\n * // It will observe DOM document for elements <div>\n * // having attribute 'data-type=\"progress\"'\n * // and instantiate for each new instance of ProgressBar\n *\n * new DomParser({color: 'red'}, 'div', 'progress', ProgressBar);\n *\n * // assume we could have HTML like this\n * // <div data-type=\"progress\" color=\"blue\"></div>\n * // in this case all matching attributes names for a given options will be\n * // parsed and bypassed to an instance from HTML attributes\n */\n\nvar DomObserver = function () {\n\n    /**\n     * @constructor\n     * @param {object} options\n     * @param {string} element\n     * @param {string} type\n     * @param {Function} Type\n     */\n    function DomObserver(options, element, type, Type) {\n        var _this2 = this;\n\n        _classCallCheck(this, DomObserver);\n\n        //noinspection JSUnresolvedVariable\n        /**\n         * Default instantiation options for the given Type\n         *\n         * @type {Object}\n         */\n        this.options = options;\n\n        /**\n         * Name of an element to lookup/observe\n         *\n         * @type {string}\n         */\n        this.element = element.toLowerCase();\n\n        /**\n         * data-type attribute value to lookup\n         *\n         * @type {string}\n         */\n        this.type = type;\n\n        /**\n         * Actual type constructor to instantiate for each found element\n         *\n         * @type {Function}\n         */\n        this.Type = Type;\n\n        /* istanbul ignore next: this should be tested with end-to-end tests */\n        domReady(function () {\n            _this2.traverse();\n\n            if (window.MutationObserver) {\n                //noinspection JSCheckFunctionSignatures\n                new MutationObserver(_this2.observe.bind(_this2)).observe(document.body, {\n                    childList: true,\n                    subtree: true,\n                    attributes: true,\n                    characterData: true,\n                    attributeOldValue: true,\n                    characterDataOldValue: true\n                });\n            }\n        });\n    }\n\n    /**\n     * Checks if given node is valid node to process\n     *\n     * @param {Node|HTMLElement} node\n     * @returns {boolean}\n     */\n\n\n    _createClass(DomObserver, [{\n        key: 'isValidNode',\n        value: function isValidNode(node) {\n            return !!(node.tagName && node.tagName.toLowerCase() === this.element && node.getAttribute('data-type') === this.type);\n        }\n\n        /**\n         * Traverse entire current DOM tree and process matching nodes.\n         * Usually it should be called only once on document initialization.\n         */\n\n    }, {\n        key: 'traverse',\n        value: function traverse() {\n            var elements = document.getElementsByTagName(this.element);\n            var i = 0,\n                s = elements.length;\n\n            /* istanbul ignore next: this should be tested with end-to-end tests */\n            for (; i < s; i++) {\n                var node = elements[i];\n\n                if (this.isValidNode(node)) {\n                    this.process(node);\n                }\n            }\n        }\n\n        /**\n         * Observes given mutation records for an elements to process\n         *\n         * @param {MutationRecord[]} records\n         */\n\n    }, {\n        key: 'observe',\n        value: function observe(records) {\n            var i = 0;\n            var s = records.length;\n\n            /* istanbul ignore next: this should be tested with end-to-end tests */\n            for (; i < s; i++) {\n                var record = records[i];\n\n                if (record.type === 'attributes' && record.attributeName === 'data-type' && this.isValidNode(record.target) && record.oldValue !== this.type) // skip false-positive mutations\n                    {\n                        this.process(record.target);\n                    } else if (record.addedNodes && record.addedNodes.length) {\n                    var ii = 0;\n                    var ss = record.addedNodes.length;\n\n                    for (; ii < ss; ii++) {\n                        var node = record.addedNodes[ii];\n\n                        if (this.isValidNode(node)) {\n                            this.process(node);\n                        }\n                    }\n                }\n            }\n        }\n\n        /**\n         * Parses given attribute value to a proper javascript value\n         *\n         * @param value\n         * @return {*}\n         */\n\n    }, {\n        key: 'process',\n\n\n        /**\n         * Processes a given node, instantiating a proper type constructor for it\n         *\n         * @param {Node|HTMLElement} node\n         * @returns {GaugeInterface}\n         */\n        value: function process(node) {\n            var prop = void 0;\n            var options = JSON.parse(JSON.stringify(this.options));\n\n            for (prop in options) {\n                /* istanbul ignore else: non-testable in most cases */\n                if (options.hasOwnProperty(prop)) {\n                    var attributeName = toAttributeName(prop);\n                    var attributeValue = DomObserver.parse(node.getAttribute(attributeName));\n\n                    if (attributeValue !== null && attributeValue !== undefined) {\n                        options[prop] = attributeValue;\n                    }\n                }\n            }\n\n            options.renderTo = node;\n\n            return new this.Type(options).draw();\n        }\n    }], [{\n        key: 'parse',\n        value: function parse(value) {\n            // parse boolean\n            if (value === 'true') return true;\n            if (value === 'false') return false;\n\n            // parse undefined\n            if (value === 'undefined') return undefined;\n\n            // parse null\n            if (value === 'null') return null;\n\n            // Comma-separated strings to array parsing.\n            // It won't match strings which contains non alphanum characters to\n            // prevent strings like 'rgba(0,0,0,0)' or JSON-like from being parsed.\n            // Typically it simply allows easily declare arrays as comma-separated\n            // numbers or plain strings. If something more complicated is\n            // required it can be declared using JSON format syntax\n            if (/^[\\w\\d\\s]+(?:,[\\w\\d\\s]+)+$/.test(value)) {\n                return value.split(',');\n            }\n\n            // parse JSON\n            try {\n                return JSON.parse(value);\n            } catch (e) {}\n\n            // plain value - no need to parse\n            return value;\n        }\n    }]);\n\n    return DomObserver;\n}();\n\n/*!\n * @license\n * Minimalistic HTML5 Canvas Gauge implementation\n *\n * This code is subject to MIT license.\n *\n * Copyright (c) 2012 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n/**\n * Drawings on canvas using hidden canvas as a cache for better\n * performance drawings during canvas animations. SmartCanvas also\n * adopts a canvas to\n */\n\n\nvar SmartCanvas = function () {\n\n    /**\n     * @constructor\n     * @param {HTMLCanvasElement} canvas\n     * @param {number} width\n     * @param {number} height\n     */\n    function SmartCanvas(canvas, width, height) {\n        _classCallCheck(this, SmartCanvas);\n\n        SmartCanvas.collection.push(this);\n\n        /**\n         * Canvas base width\n         *\n         * @type {number}\n         */\n        this.width = width || 0;\n\n        /**\n         * Canvas base height\n         *\n         * @type {number}\n         */\n        this.height = height || 0;\n\n        /**\n         * Target drawings canvas element\n         *\n         * @type {HTMLCanvasElement}\n         */\n        this.element = canvas;\n\n        this.init();\n    }\n\n    /**\n     * Initializes canvases and contexts\n     */\n\n\n    _createClass(SmartCanvas, [{\n        key: 'init',\n        value: function init() {\n            var pixelRatio = SmartCanvas.pixelRatio;\n\n            this.element.width = this.width * pixelRatio;\n            this.element.height = this.height * pixelRatio;\n\n            this.element.style.width = this.width + 'px';\n            this.element.style.height = this.height + 'px';\n\n            /**\n             * Canvas caching element\n             *\n             * @type {HTMLCanvasElement|Node}\n             */\n            this.elementClone = this.element.cloneNode(true);\n\n            //noinspection JSUnresolvedVariable\n            /**\n             * Target drawings canvas element 2D context\n             *\n             * @type {CanvasRenderingContext2D}\n             */\n            this.context = this.element.getContext('2d');\n\n            /**\n             * Canvas caching element 2D context\n             *\n             * @type {CanvasRenderingContext2D}\n             */\n            this.contextClone = this.elementClone.getContext('2d');\n\n            /**\n             * Actual drawings width\n             *\n             * @type {number}\n             */\n            this.drawWidth = this.element.width;\n\n            /**\n             * Actual drawings height\n             *\n             * @type {number}\n             */\n            this.drawHeight = this.element.height;\n\n            /**\n             * X-coordinate of drawings zero point\n             *\n             * @type {number}\n             */\n            this.drawX = this.drawWidth / 2;\n\n            /**\n             * Y-coordinate of drawings zero point\n             *\n             * @type {number}\n             */\n            this.drawY = this.drawHeight / 2;\n\n            /**\n             * Minimal side length in pixels of the drawing\n             *\n             * @type {number}\n             */\n            this.minSide = this.drawX < this.drawY ? this.drawX : this.drawY;\n\n            this.elementClone.initialized = false;\n\n            this.contextClone.translate(this.drawX, this.drawY);\n            this.contextClone.save();\n\n            this.context.translate(this.drawX, this.drawY);\n            this.context.save();\n\n            this.context.max = this.contextClone.max = this.minSide;\n            this.context.maxRadius = this.contextClone.maxRadius = null;\n        }\n\n        /**\n         * Destroys this object, removing the references from memory\n         */\n\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            var index = SmartCanvas.collection.indexOf(this);\n\n            /* istanbul ignore else */\n            if (~index) {\n                SmartCanvas.collection.splice(index, 1);\n            }\n\n            // derefecence all created elements\n            this.context.max = null;\n            delete this.context.max;\n\n            this.context.maxRadius = null;\n            delete this.context.maxRadius;\n\n            this.context = null;\n            this.contextClone = null;\n            this.elementClone = null;\n            this.element = null;\n\n            /**\n             * On canvas redraw event callback\n             *\n             * @type {function|null|undefined}\n             */\n            this.onRedraw = null;\n        }\n\n        /**\n         * Commits the drawings\n         */\n\n    }, {\n        key: 'commit',\n        value: function commit() {\n            var scale = SmartCanvas.pixelRatio;\n\n            if (scale !== 1) {\n                this.contextClone.scale(scale, scale);\n                this.contextClone.save();\n            }\n\n            return this;\n        }\n\n        /**\n         * Redraw this object\n         */\n\n    }, {\n        key: 'redraw',\n        value: function redraw() {\n            this.init();\n\n            /**\n             * On canvas redraw event callback\n             *\n             * @type {function(): *}\n             */\n            this.onRedraw && this.onRedraw();\n\n            return this;\n        }\n\n        /**\n         * Returns current device pixel ratio\n         *\n         * @returns {number}\n         */\n\n    }], [{\n        key: 'redraw',\n\n\n        /**\n         * Forces redraw all canvas in the current collection\n         */\n        value: function redraw() {\n            var i = 0;\n            var s = SmartCanvas.collection.length;\n\n            for (; i < s; i++) {\n                SmartCanvas.collection[i].redraw();\n            }\n        }\n    }, {\n        key: 'pixelRatio',\n        get: function get() {\n            /* istanbul ignore next */\n            //noinspection JSUnresolvedVariable\n            return window.devicePixelRatio || 1;\n        }\n    }]);\n\n    return SmartCanvas;\n}();\n\nSmartCanvas.collection = [];\n\n/* istanbul ignore next: very browser-specific testing required to cover */\n//noinspection JSUnresolvedVariable\nif (window.matchMedia) {\n    //noinspection JSUnresolvedFunction\n    window.matchMedia('screen and (min-resolution: 2dppx)').addListener(SmartCanvas.redraw);\n}\n\n/*!\n * @license\n * Minimalistic HTML5 Canvas Gauge implementation\n *\n * This code is subject to MIT license.\n *\n * Copyright (c) 2012 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/**\n * Describes rendering target element. Can be either string identifier of\n * the element or the element itself.\n *\n * @typedef {HTMLElement|string} RenderTarget\n */\n\n/**\n * Highlight area definition.\n * It describes highlight area starting from value to value using\n * color. Color can be describes with hex, rgb or rgba value.\n *\n * @typedef {{ from: number, to: number, color: string}} Highlight\n */\n\nvar SharedOptions = {\n    // basic options\n    renderTo: null,\n    width: 200,\n    height: 200,\n    minValue: 0,\n    maxValue: 100,\n    value: 0,\n    units: false,\n    majorTicks: [0, 20, 40, 60, 80, 100],\n    minorTicks: 10,\n    strokeTicks: true,\n    updateValueOnAnimation: false,\n    glow: true,\n    title: false,\n\n    // number formats\n    valueInt: 3,\n    valueDec: 2,\n    majorTicksInt: 1,\n    majorTicksDec: 0,\n\n    // animations\n    animation: true,\n    animationDuration: 250,\n    animationRule: 'cycle',\n\n    // colors\n    colorPlate: '#fff',\n    colorMajorTicks: '#444',\n    colorMinorTicks: '#666',\n    colorTitle: '#888',\n    colorUnits: '#888',\n    colorNumbers: '#444',\n    colorNeedleStart: 'rgba(240,128,128,1)',\n    colorNeedleEnd: 'rgba(255,160,122,.9)',\n    colorValueText: '#444',\n    colorValueTextShadow: 'rgba(0,0,0,0.3)',\n    colorBorderShadow: 'rgba(0,0,0,0.5)',\n    colorBorderOuterStart: '#ddd',\n    colorBorderOuterEnd: '#aaa',\n    colorBorderMiddleStart: '#eee',\n    colorBorderMiddleEnd: '#f0f0f0',\n    colorBorderInnerStart: '#fafafa',\n    colorBorderInnerEnd: '#ccc',\n\n    // needle\n    needle: true,\n    needleShadow: true,\n    needleType: 'arrow',\n\n    // borders\n    borders: true,\n    borderOuter: true,\n    borderOuterWidth: 3,\n    borderMiddle: true,\n    borderMiddleWidth: 3,\n    borderInner: true,\n    borderInnerWidth: 3,\n    borderShadowWidth: 3,\n\n    // value and highlights\n    valueBox: true,\n    valueText: true,\n    highlights: [{ from: 20, to: 60, color: '#eee' }, { from: 60, to: 80, color: '#ccc' }, { from: 80, to: 100, color: '#999' }]\n};\n\n/*!\n * @license\n * Minimalistic HTML5 Canvas Gauge implementation\n *\n * This code is subject to MIT license.\n *\n * Copyright (c) 2012 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/**\n * Gauge collections type.\n *\n * It is used ES5 declaration here, because babel\n * transpiles inheritance incorrectly in this case.\n *\n * @class Collection\n * @constructor\n */\nfunction Collection() {\n    Array.prototype.constructor.apply(this, arguments);\n}\n\nCollection.prototype = Object.create(Array.prototype);\nCollection.prototype.constructor = Collection;\n\n/**\n * Returns gauge object by its identifier or index in the collection\n *\n * @param {string|number} id\n * @return {*}\n */\nCollection.prototype.get = function (id) {\n    if (typeof id === 'string') {\n        var i = 0;\n        var s = this.length;\n\n        for (; i < s; i++) {\n            var canvas = this[i].options.renderTo.tagName ? this[i].options.renderTo :\n            /* istanbul ignore next: should be tested with e2e tests */\n            document.getElementById(this[i].options.renderTo || '');\n\n            if (canvas.getAttribute('id') === id) {\n                return this[i];\n            }\n        }\n    } else if (typeof id === 'number') {\n        return this[id];\n    }\n\n    return null;\n};\n\n/*!\n * @license\n * Minimalistic HTML5 Canvas Gauge implementation\n *\n * This code is subject to MIT license.\n *\n * Copyright (c) 2012 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n * @authors: Mykhailo Stadnyk <mikhus@gmail.com>\n *           Chris Poile <poile@edwards.usask.ca>\n *           Luca Invernizzi <http://www.lucainvernizzi.net>\n *           Rhys Lloyd <http://rhyslloyd.me>\n *           Robert Blackburn <http://www.rwblackburn.com>\n *           Charles Galpin <https://github.com/cgalpin>\n *           Luca Ghio <https://github.com/cassiodoroVicinetti>\n *           Greg <https://github.com/gregroper>\n *           David Esperalta <info@davidesperalta.com>\n *           Gwenaël (https://thegtricks.thegounet.fr)\n *           migeruhito (https://github.com/migeruhito)\n */\n\n// todo: customizable fonts\n// todo: readme and documentation update\n// todo: github pages\n// todo: wiki\n// todo: LinearGauge implementation\n// todo: online configurator\n// todo: online packager\n// todo: e2e tests\n// todo: angular 2 integration\n// todo: react integrations\n// todo: typescript definitions\n\n/**\n * Gauge configuration options\n *\n * @typedef {{renderTo: RenderTarget, width: number, height: number, title: string|boolean, maxValue: number, minValue: number, value: number, majorTicks: Array, minorTicks: number, ticksAngle: number, startAngle: number, strokeTicks: boolean, units: string|boolean, updateValueOnAnimation: boolean, glow: boolean, valueInt: number, valueDec: number, majorTicksInt: number, majorTicksDec: number, animation: boolean, animationDuration: number, animationRule: AnimationRule, colorPlate: string, colorMajorTicks: string, colorMinorTicks: string, colorTitle: string, colorUnits: string, colorNumbers: string, colorNeedleStart: string, colorNeedleEnd: string, colorNeedleCircleOuterStart: string, colorNeedleCircleOuterEnd: string, colorNeedleCircleInnerStart: string, colorNeedleCircleInnerEnd: string, colorNeedleShadowUp: string, colorNeedleShadowDown: string, colorValueBoxRectStart: string, colorValueBoxRectEnd: string, colorValueBoxBackground: string, colorValueBoxShadow: string, colorValueText: string, colorValueTextShadow: string, colorBorderShadow: string, colorBorderOuterStart: string, colorBorderOuterEnd: string, colorBorderMiddleStart: string, colorBorderMiddleEnd: string, colorBorderInnerStart: string, colorBorderInnerEnd: string, needle: boolean, needleShadow: boolean, needleType: string, needleStart: number, needleEnd: number, needleWidth: number, needleCircle: boolean, needleCircleSize: number, needleCircleInner: boolean, needleCircleOuter: boolean, borders: boolean, borderOuter: boolean, borderOuterWidth: number, borderMiddle: boolean, borderMiddleWidth: number, borderInner: boolean, borderInnerWidth: number, borderShadowWidth: number, valueBox: boolean, valueText: boolean, highlights: Highlight[]}} GaugeOptions\n */\n\n/**\n * @access private\n * @typedef {CanvasRenderingContext2D|{max: number, maxRadius: number}} Canvas2DContext\n */\n\n//noinspection JSValidateTypes\n/**\n * Default gauge configuration options\n *\n * @access private\n * @type {GaugeOptions}\n */\nvar defaultGaugeOptions = Object.assign({}, SharedOptions, {\n    // basic options\n    ticksAngle: 270,\n    startAngle: 45,\n\n    // colors\n    colorNeedleCircleOuterStart: '#f0f0f0',\n    colorNeedleCircleOuterEnd: '#ccc',\n    colorNeedleCircleInnerStart: '#e8e8e8',\n    colorNeedleCircleInnerEnd: '#f5f5f5',\n    colorNeedleShadowUp: 'rgba(2,255,255,0.2)',\n    colorNeedleShadowDown: 'rgba(188,143,143,0.45)',\n    colorValueBoxRectStart: '#888',\n    colorValueBoxRectEnd: '#666',\n    colorValueBoxBackground: '#babab2',\n    colorValueBoxShadow: 'rgba(0,0,0,1)',\n\n    // needle\n    needleStart: 0,\n    needleEnd: 85,\n    needleWidth: 4,\n    needleCircle: true,\n    needleCircleSize: 10,\n    needleCircleInner: true,\n    needleCircleOuter: true\n});\n\n/* istanbul ignore next: private, not testable */\n/**\n * Formats a number for display on the dial's plate using the majorTicksFormat\n * config option.\n *\n * @access private\n * @param {number} num number to format\n * @param {object} options\n * @returns {string} formatted number\n */\nfunction formatMajorTickNumber(num, options) {\n    var right = void 0,\n        hasDec = false;\n\n    // First, force the correct number of digits right of the decimal.\n    if (options.majorTicksDec === 0) {\n        right = Math.round(num).toString();\n    } else {\n        right = num.toFixed(options.majorTicksDec);\n    }\n\n    // Second, force the correct number of digits left of the decimal.\n    if (options.majorTicksInt > 1) {\n        // Does this number have a decimal?\n        hasDec = ~right.indexOf('.');\n\n        // Is this number a negative number?\n        if (~right.indexOf('-')) {\n            return '-' + [options.majorTicksInt + options.majorTicksDec + 2 + (hasDec ? 1 : 0) - right.length].join('0') + right.replace('-', '');\n        } else {\n            return [options.majorTicksInt + options.majorTicksDec + 1 + (hasDec ? 1 : 0) - right.length].join('0') + right;\n        }\n    }\n\n    return right;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Transforms degrees to radians\n *\n * @param {number} degrees\n * @returns {number}\n */\nfunction radians(degrees) {\n    return degrees * Math.PI / 180;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Calculates and returns radial point coordinates\n *\n * @access private\n * @param {number} radius\n * @param {number} angle\n * @returns {{x: number, y: number}}\n */\nfunction radialPoint(radius, angle) {\n    return { x: -radius * Math.sin(angle), y: radius * Math.cos(angle) };\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Creates and returns linear gradient canvas object\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {string} colorFrom\n * @param {string} colorTo\n * @param {number} length\n * @returns {CanvasGradient}\n */\nfunction linearGradient(context, colorFrom, colorTo, length) {\n    var grad = context.createLinearGradient(0, 0, 0, length);\n\n    grad.addColorStop(0, colorFrom);\n    grad.addColorStop(1, colorTo);\n\n    return grad;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Pads a given value with leading zeros using the given options\n *\n * @access private\n * @param {number} val\n * @param {{valueInt: number, valueDec: number}} options\n * @returns {string}\n */\nfunction padValue(val, options) {\n    var dec = options.valueDec;\n    var int = options.valueInt;\n    var i = 0;\n    var s = void 0,\n        strVal = void 0,\n        n = void 0;\n\n    val = parseFloat(val);\n    n = val < 0;\n    val = Math.abs(val);\n\n    if (dec > 0) {\n        strVal = val.toFixed(dec).toString().split('.');\n        s = int - strVal[0].length;\n\n        for (; i < s; ++i) {\n            strVal[0] = '0' + strVal[0];\n        }\n\n        strVal = (n ? '-' : '') + strVal[0] + '.' + strVal[1];\n    } else {\n        strVal = Math.round(val).toString();\n        s = int - strVal.length;\n\n        for (; i < s; ++i) {\n            strVal = '0' + strVal;\n        }\n\n        strVal = (n ? '-' : '') + strVal;\n    }\n\n    return strVal;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gradient-filled circle on a canvas\n *\n * @access private\n * @param {number} radius\n * @param {Canvas2DContext} context\n * @param {string} start gradient start color\n * @param {string} end gradient end color\n */\nfunction drawCircle(radius, context, start, end) {\n    context.beginPath();\n    context.arc(0, 0, radius, 0, Math.PI * 2, true);\n    context.fillStyle = linearGradient(context, start, end, radius);\n    context.fill();\n    context.closePath();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Returns max radius without borders for the gauge\n *\n * @param {Canvas2DContext} context\n * @param {GaugeOptions} options\n * @return {number}\n */\nfunction maxRadius(context, options) {\n    if (!context.maxRadius) {\n        context.maxRadius = context.max - options.borderShadowWidth - options.borderOuterWidth - options.borderMiddleWidth - options.borderInnerWidth;\n    }\n\n    return context.maxRadius;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge plate on the canvas\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {GaugeOptions} options\n */\nfunction drawPlate(context, options) {\n    var d0 = options.borderShadowWidth;\n    var r0 = context.max - options.borderShadowWidth;\n    var r1 = r0 - options.borderOuterWidth;\n    var r2 = r1 - options.borderMiddleWidth;\n    var r3 = maxRadius(context, options);\n\n    context.save();\n\n    if (options.glow) {\n        context.shadowBlur = d0;\n        context.shadowColor = options.colorBorderShadow;\n    }\n\n    if (options.borders) {\n        if (options.borderOuter) {\n            drawCircle(r0, context, options.colorBorderOuterStart, options.colorBorderOuterEnd);\n        }\n\n        context.restore();\n\n        if (options.borderMiddle) {\n            drawCircle(r1, context, options.colorBorderMiddleStart, options.colorBorderMiddleEnd);\n        }\n\n        if (options.borderInner) {\n            drawCircle(r2, context, options.colorBorderInnerStart, options.colorBorderInnerEnd);\n        }\n    }\n\n    context.beginPath();\n    context.arc(0, 0, r3, 0, Math.PI * 2, true);\n    context.fillStyle = options.colorPlate;\n    context.fill();\n    context.closePath();\n\n    context.save();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge highlight areas on a canvas\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {GaugeOptions} options\n */\nfunction drawHighlights(context, options) {\n    context.save();\n\n    var r1 = maxRadius(context, options) - context.max * .05;\n    var r2 = r1 - context.max * .15;\n    var i = 0,\n        s = options.highlights.length;\n\n    for (; i < s; i++) {\n        var hlt = options.highlights[i];\n        var vd = (options.maxValue - options.minValue) / options.ticksAngle;\n        var sa = radians(options.startAngle + (hlt.from - options.minValue) / vd);\n        var ea = radians(options.startAngle + (hlt.to - options.minValue) / vd);\n        var ps = radialPoint(r2, sa);\n        var pe = radialPoint(r1, sa);\n        var ps1 = radialPoint(r1, ea);\n        var pe1 = radialPoint(r2, ea);\n\n        context.beginPath();\n        context.rotate(radians(90));\n        context.arc(0, 0, r1, sa, ea, false);\n        context.restore();\n        context.save();\n        context.moveTo(ps.x, ps.y);\n        context.lineTo(pe.x, pe.y);\n        context.lineTo(ps1.x, ps1.y);\n        context.lineTo(pe1.x, pe1.y);\n        context.lineTo(ps.x, ps.y);\n        context.closePath();\n\n        context.fillStyle = hlt.color;\n        context.fill();\n\n        context.beginPath();\n        context.rotate(radians(90));\n        context.arc(0, 0, r2, sa - 0.2, ea + 0.2, false);\n        context.restore();\n        context.closePath();\n\n        context.fillStyle = options.colorPlate;\n        context.fill();\n        context.save();\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws minor ticks bar on a canvas\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {GaugeOptions} options\n */\nfunction drawMinorTicks(context, options) {\n    var radius = maxRadius(context, options) - context.max * .05;\n\n    context.lineWidth = SmartCanvas.pixelRatio;\n    context.strokeStyle = options.colorMinorTicks;\n\n    context.save();\n\n    var s = options.minorTicks * (options.majorTicks.length - 1);\n    var i = 0;\n\n    for (; i < s; ++i) {\n        var angle = options.startAngle + i * (options.ticksAngle / s);\n\n        context.rotate(radians(angle));\n\n        context.beginPath();\n        context.moveTo(0, radius);\n        context.lineTo(0, radius - context.max * .075);\n        context.stroke();\n        context.restore();\n        context.closePath();\n\n        context.save();\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge major ticks bar on a canvas\n *\n * @param {Canvas2DContext} context\n * @param {GaugeOptions} options\n */\nfunction drawMajorTicks(context, options) {\n    var r = maxRadius(context, options) - context.max * .05;\n    var i = 0;\n    var s = options.majorTicks.length;\n    var pixelRatio = SmartCanvas.pixelRatio;\n\n    context.lineWidth = 2 * pixelRatio;\n    context.strokeStyle = options.colorMajorTicks;\n    context.save();\n\n    if (s === 0) {\n        var numberOfDefaultTicks = 5;\n        var tickSize = (options.maxValue - options.minValue) / numberOfDefaultTicks;\n\n        for (; i < numberOfDefaultTicks; i++) {\n            options.majorTicks.push(formatMajorTickNumber(options.minValue + tickSize * i, options));\n        }\n        options.majorTicks.push(formatMajorTickNumber(options.maxValue, options));\n    }\n\n    i = 0;\n    for (; i < s; ++i) {\n        var a = options.startAngle + i * (options.ticksAngle / (s - 1));\n        context.rotate(radians(a));\n\n        context.beginPath();\n        context.moveTo(0, r);\n        context.lineTo(0, r - context.max * .15);\n        context.stroke();\n\n        context.restore();\n        context.closePath();\n        context.save();\n    }\n\n    if (options.strokeTicks) {\n        context.rotate(radians(90));\n\n        context.beginPath();\n        context.arc(0, 0, r, radians(options.startAngle), radians(options.startAngle + options.ticksAngle), false);\n        context.stroke();\n        context.restore();\n        context.closePath();\n\n        context.save();\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge bar numbers\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {GaugeOptions} options\n */\nfunction drawNumbers(context, options) {\n    var radius = maxRadius(context, options) - context.max * .35;\n    var points = {};\n    var i = 0;\n    var s = options.majorTicks.length;\n\n    for (; i < s; ++i) {\n        var angle = options.startAngle + i * (options.ticksAngle / (s - 1));\n        var point = radialPoint(radius, radians(angle));\n\n        if (angle === 360) angle = 0;\n\n        if (points[angle]) {\n            continue; //already drawn at this place, skipping\n        }\n\n        points[angle] = true;\n\n        context.font = 20 * (context.max / 200) + 'px Arial';\n        context.fillStyle = options.colorNumbers;\n        context.lineWidth = 0;\n        context.textAlign = 'center';\n        context.fillText(options.majorTicks[i], point.x, point.y + 3);\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge title\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {GaugeOptions} options\n */\nfunction drawTitle(context, options) {\n    if (!options.title) return;\n\n    context.save();\n    context.font = 24 * (context.max / 200) + 'px Arial';\n    context.fillStyle = options.colorTitle;\n    context.textAlign = 'center';\n    context.fillText(options.title, 0, -context.max / 4.25, context.max * .8);\n    context.restore();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws units name on the gauge\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {GaugeOptions} options\n */\nfunction drawUnits(context, options) {\n    if (!options.units) return;\n\n    context.save();\n    context.font = 22 * (context.max / 200) + 'px Arial';\n    context.fillStyle = options.colorUnits;\n    context.textAlign = 'center';\n    context.fillText(options.units, 0, context.max / 3.25, context.max * .8);\n    context.restore();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge needle shadow\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {GaugeOptions} options\n */\nfunction drawNeedleShadow(context, options) {\n    if (!options.needleShadow) return;\n\n    context.shadowOffsetX = 2;\n    context.shadowOffsetY = 2;\n    context.shadowBlur = 10;\n    context.shadowColor = options.colorNeedleShadowDown;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge needle\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {GaugeOptions} options\n */\nfunction drawNeedle(context, options) {\n    if (!options.needle) return;\n\n    var value = options.value;\n    var max = maxRadius(context, options);\n    var r1 = max / 100 * options.needleCircleSize;\n    var r2 = max / 100 * options.needleCircleSize * 0.75;\n    var rIn = max / 100 * options.needleEnd;\n    var rStart = options.needleStart ? max / 100 * options.needleStart : 0,\n        rOut = max * .2;\n    var pad1 = max / 100 * options.needleWidth;\n    var pad2 = max / 100 * options.needleWidth / 2;\n    var pixelRatio = SmartCanvas.pixelRatio;\n\n    drawNeedleShadow(context, options);\n\n    context.save();\n\n    context.rotate(radians(options.startAngle + (value - options.minValue) / (options.maxValue - options.minValue) * options.ticksAngle));\n\n    if (options.needleType === 'arrow') {\n        context.beginPath();\n        context.moveTo(-pad2, -rOut);\n        context.lineTo(-pad1, 0);\n        context.lineTo(-1 * pixelRatio, rIn);\n        context.lineTo(pixelRatio, rIn);\n        context.lineTo(pad1, 0);\n        context.lineTo(pad2, -rOut);\n        context.closePath();\n\n        context.fillStyle = linearGradient(context, options.colorNeedleStart, options.colorNeedleEnd, rIn - rOut);\n        context.fill();\n\n        context.beginPath();\n        context.lineTo(-0.5 * pixelRatio, rIn);\n        context.lineTo(-1 * pixelRatio, rIn);\n        context.lineTo(-pad1, 0);\n        context.lineTo(-pad2, -rOut);\n        context.lineTo(pad2 / 2 * pixelRatio - 2 * pixelRatio, -rOut);\n        context.closePath();\n        context.fillStyle = options.colorNeedleShadowUp;\n        context.fill();\n    } else {\n        // simple line needle\n        context.beginPath();\n        context.moveTo(-pad2, rIn);\n        context.lineTo(-pad2, rStart);\n        context.lineTo(pad2, rStart);\n        context.lineTo(pad2, rIn);\n        context.closePath();\n\n        context.fillStyle = linearGradient(context, options.colorNeedleStart, options.colorNeedleEnd, rIn - rOut);\n        context.fill();\n    }\n\n    context.restore();\n\n    if (options.needleCircle) {\n        drawNeedleShadow(context, options);\n\n        if (options.needleCircleOuter) {\n            context.beginPath();\n            context.arc(0, 0, r1, 0, Math.PI * 2, true);\n            context.fillStyle = linearGradient(context, options.colorNeedleCircleOuterStart, options.colorNeedleCircleOuterEnd, r1);\n            context.fill();\n            context.restore();\n            context.closePath();\n        }\n\n        if (options.needleCircleInner) {\n            context.beginPath();\n            context.arc(0, 0, r2, 0, Math.PI * 2, true);\n            context.fillStyle = linearGradient(context, options.colorNeedleCircleInnerStart, options.colorNeedleCircleInnerEnd, r2);\n            context.fill();\n            context.closePath();\n        }\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws rounded corners rectangle\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {number} r\n */\nfunction roundRect(context, x, y, w, h, r) {\n    context.beginPath();\n\n    context.moveTo(x + r, y);\n    context.lineTo(x + w - r, y);\n\n    context.quadraticCurveTo(x + w, y, x + w, y + r);\n    context.lineTo(x + w, y + h - r);\n\n    context.quadraticCurveTo(x + w, y + h, x + w - r, y + h);\n    context.lineTo(x + r, y + h);\n\n    context.quadraticCurveTo(x, y + h, x, y + h - r);\n    context.lineTo(x, y + r);\n\n    context.quadraticCurveTo(x, y, x + r, y);\n\n    context.closePath();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge value box\n *\n * @param {Canvas2DContext} context\n * @param {GaugeOptions} options\n * @param {number} value\n */\nfunction drawValueBox(context, options, value) {\n    if (!options.valueText) return;\n\n    var max = context.max;\n    var text = padValue(value, options);\n    var y = max - max * .33;\n    var x = 0;\n\n    context.save();\n    context.font = 40 * (max / 200) + 'px Led';\n    context.save();\n\n    if (options.valueBox) {\n        var th = 0.12 * max;\n        var tw = context.measureText('-' + padValue(0, options)).width;\n\n        roundRect(context, -tw / 2 - 0.025 * max, y - th - 0.04 * max, tw + 0.05 * max, th + 0.07 * max, 0.025 * max);\n    }\n\n    var grd = context.createRadialGradient(x, y - 0.12 * max - 0.025 * max + (0.12 * max + 0.045 * max) / 2, max / 10, x, y - 0.12 * max - 0.025 * max + (0.12 * max + 0.045 * max) / 2, max / 5);\n\n    grd.addColorStop(0, options.colorValueBoxRectStart);\n    grd.addColorStop(1, options.colorValueBoxRectEnd);\n\n    context.strokeStyle = grd;\n    context.lineWidth = 0.05 * max;\n    context.stroke();\n\n    context.shadowBlur = 0.012 * max;\n    context.shadowColor = options.colorValueBoxShadow;\n\n    context.fillStyle = options.colorValueBoxBackground;\n    context.fill();\n\n    context.restore();\n\n    context.shadowOffsetX = 0.004 * max;\n    context.shadowOffsetY = 0.004 * max;\n    context.shadowBlur = 0.012 * max;\n    context.shadowColor = options.colorValueTextShadow;\n\n    context.fillStyle = options.colorValueText;\n    context.textAlign = 'center';\n    context.fillText(text, -x, y);\n\n    context.restore();\n}\n\n/**\n * Minimalistic HTML5 Canvas Gauge\n * @example\n *  var gauge = new Gauge({\n *     renderTo: 'gauge',\n *     width: 400,\n *     height: 400,\n *     units: 'Km/h',\n *     title: false,\n *     value: 0,\n *     minValue: 0,\n *     maxValue: 220,\n *     majorTicks: [\n *         '0','20','40','60','80','100','120','140','160','180','200','220'\n *     ],\n *     minorTicks: 2,\n *     strokeTicks: false,\n *     highlights: [\n *         { from: 0, to: 50, color: 'rgba(0,255,0,.15)' },\n *         { from: 50, to: 100, color: 'rgba(255,255,0,.15)' },\n *         { from: 100, to: 150, color: 'rgba(255,30,0,.25)' },\n *         { from: 150, to: 200, color: 'rgba(255,0,225,.25)' },\n *         { from: 200, to: 220, color: 'rgba(0,0,255,.25)' }\n *     ],\n *     colorPlate: '#222',\n *     colorMajorTicks: '#f5f5f5',\n *     colorMinorTicks: '#ddd',\n *     colorTitle: '#fff',\n *     colorUnits: '#ccc',\n *     colorNumbers: '#eee',\n *     colorNeedleStart: 'rgba(240, 128, 128, 1)',\n *     colorNeedleEnd: 'rgba(255, 160, 122, .9)',\n *     valueBox: true,\n *     animationRule: 'bounce'\n * });\n * // draw initially\n * gauge.draw();\n * // animate\n * setInterval(() => {\n *    gauge.value = Math.random() * -220 + 220;\n * }, 1000);\n */\n\nvar Gauge = function () {\n\n    /**\n     * @constructor\n     * @param {GaugeOptions} options\n     */\n    function Gauge(options) {\n        _classCallCheck(this, Gauge);\n\n        //noinspection JSUnresolvedFunction\n        Gauge.collection.push(this);\n\n        options = Object.assign({}, defaultGaugeOptions, options || {});\n\n        options.startAngle = parseInt(options.startAngle, 10);\n        options.ticksAngle = parseInt(options.ticksAngle, 10);\n\n        /* istanbul ignore if */\n        if (isNaN(options.startAngle)) options.startAngle = 45;\n        /* istanbul ignore if */\n        if (isNaN(options.ticksAngle)) options.ticksAngle = 270;\n\n        /* istanbul ignore if */\n        if (options.ticksAngle > 360) options.ticksAngle = 360;\n        /* istanbul ignore if */\n        if (options.ticksAngle < 0) options.ticksAngle = 0;\n\n        /* istanbul ignore if */\n        if (options.startAngle < 0) options.startAngle = 0;\n        /* istanbul ignore if */\n        if (options.startAngle > 360) options.startAngle = 360;\n\n        options.minValue = parseFloat(options.minValue);\n        options.maxValue = parseFloat(options.maxValue);\n\n        /* istanbul ignore if */\n        if (!(options.highlights instanceof Array)) {\n            options.highlights = [];\n        }\n\n        if (!options.renderTo) {\n            throw TypeError('Canvas element was not specified when creating ' + 'the Gauge object!');\n        }\n\n        var canvas = options.renderTo.tagName ? options.renderTo :\n        /* istanbul ignore next: to be tested with e2e tests */\n        document.getElementById(options.renderTo);\n\n        //noinspection JSUnresolvedVariable\n        /**\n         * @property {GaugeOptions} Gauge.options\n         */\n        this.options = options;\n\n        /**\n         * @property {SmartCanvas} Gauge.canvas\n         */\n        this.canvas = new SmartCanvas(canvas, options.width, options.height);\n        this.canvas.onRedraw = this.draw.bind(this);\n\n        /**\n         * @property {Animation} Gauge.animation\n         */\n        this.animation = new Animation(options.animationRule, options.animationDuration);\n    }\n\n    /**\n     * Sets new value for this gauge.\n     * If gauge is animated by configuration it will trigger a proper animation.\n     * Upsetting a value triggers gauge redraw.\n     *\n     * @param {number} value\n     */\n\n\n    _createClass(Gauge, [{\n        key: 'draw',\n\n\n        /**\n         * Triggering gauge render on a canvas.\n         *\n         * @returns {Gauge}\n         */\n        value: function draw() {\n            var canvas = this.canvas;\n            var x = -canvas.drawX;\n            var y = -canvas.drawY;\n            var w = canvas.drawWidth;\n            var h = canvas.drawHeight;\n\n            var options = this.options;\n\n            if (!canvas.elementClone.initialized) {\n                var context = canvas.contextClone;\n\n                // clear the cache\n                context.clearRect(x, y, w, h);\n                context.save();\n\n                drawPlate(context, options);\n                drawHighlights(context, options);\n                drawMinorTicks(context, options);\n                drawMajorTicks(context, options);\n                drawNumbers(context, options);\n                drawTitle(context, options);\n                drawUnits(context, options);\n\n                canvas.elementClone.initialized = true;\n            }\n\n            this.canvas.commit();\n\n            // clear the canvas\n            canvas.context.clearRect(x, y, w, h);\n            canvas.context.save();\n\n            canvas.context.drawImage(canvas.elementClone, x, y, w, h);\n            canvas.context.save();\n\n            drawValueBox(canvas.context, options, this.value);\n            drawNeedle(canvas.context, options);\n\n            return this;\n        }\n\n        /**\n         * Updates gauge configuration options at runtime and redraws the gauge\n         *\n         * @param {GaugeOptions} options\n         * @returns {Gauge}\n         */\n\n    }, {\n        key: 'update',\n        value: function update(options) {\n            Object.assign(this.options, options || {});\n\n            this.canvas.width = this.options.width;\n            this.canvas.height = this.options.height;\n\n            this.animation.rule = this.options.animationRule;\n            this.animation.duration = this.options.animationDuration;\n\n            this.canvas.redraw();\n\n            return this;\n        }\n\n        /**\n         * Performs destruction of this object properly\n         */\n\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            var index = Gauge.collection.indexOf(this);\n\n            /* istanbul ignore else */\n            if (~index) {\n                //noinspection JSUnresolvedFunction\n                Gauge.collection.splice(index, 1);\n            }\n\n            this.canvas.destroy();\n            this.canvas = null;\n\n            this.animation.destroy();\n            this.animation = null;\n        }\n    }, {\n        key: 'value',\n        set: function set(value) {\n            var _this3 = this;\n\n            if (value === this.options.value) return;\n\n            if (this.options.animation) {\n                (function () {\n                    var fromValue = _this3.options.value;\n\n                    /**\n                     * @type {number}\n                     * @access private\n                     */\n                    _this3._value = value;\n\n                    _this3.animation.animate(function (percent) {\n                        _this3.options.value = fromValue + (value - fromValue) * percent;\n\n                        _this3.draw();\n                    }, function () {\n                        _this3.options.value = value;\n                        delete _this3._value;\n                        _this3.draw();\n                    });\n                })();\n            } else {\n                this.options.value = value;\n                this.draw();\n            }\n        }\n\n        /**\n         * Returns current value of the gauge\n         *\n         * @return {number}\n         */\n        ,\n        get: function get() {\n            return typeof this._value === 'undefined' ? this.options.value : this._value;\n        }\n    }]);\n\n    return Gauge;\n}();\n\nGauge.collection = new Collection();\n\nnew DomObserver(defaultGaugeOptions, 'canvas', 'gauge', Gauge);\n\nwindow['Gauge'] = Gauge;\n\n/*!\n * @license\n * Minimalistic HTML5 Canvas Gauge implementation\n *\n * This code is subject to MIT license.\n *\n * Copyright (c) 2012 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar defaultLinearGaugeOptions = Object.assign({}, SharedOptions, {\n    // basic options\n    orientation: 'vertical'\n});\n\n/**\n * Minimalistic HTML5 Canvas Linear Gauge\n */\n\nvar LinearGauge = function () {\n    function LinearGauge(options) {\n        _classCallCheck(this, LinearGauge);\n\n        //noinspection JSUnresolvedFunction\n        LinearGauge.collection.push(this);\n    }\n\n    _createClass(LinearGauge, [{\n        key: 'draw',\n        value: function draw() {\n            return this;\n        }\n    }, {\n        key: 'update',\n        value: function update(options) {}\n    }]);\n\n    return LinearGauge;\n}();\n\nLinearGauge.collection = new Collection();\n\nnew DomObserver(defaultLinearGaugeOptions, 'canvas', 'linear-gauge', LinearGauge);\n\nwindow['LinearGauge'] = LinearGauge;}());"],"sourceRoot":"/source/"}