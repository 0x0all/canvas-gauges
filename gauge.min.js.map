{"version":3,"sources":["gauge.min.js"],"names":["_toConsumableArray","arr","Array","isArray","i","arr2","length","from","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","TypeError","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_classCallCheck","instance","Constructor","vendorize","prop","window","global","vendors","s","capitalized","charAt","toUpperCase","substr","vendorProp","step","time","draw","start","rule","duration","end","anim","progress","percent","frame","requestAnimationFrame","Collection","apply","this","arguments","roundRect","context","x","y","w","h","r","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","padValue","val","options","dec","valueDec","int","valueInt","strVal","n","parseFloat","Math","abs","toFixed","toString","split","round","formatMajorTickNumber","num","right","hasDec","majorTicksDec","majorTicksInt","indexOf","join","replace","radians","degrees","PI","radialPoint","radius","angle","sin","cos","linearGradient","colorFrom","colorTo","grad","createLinearGradient","addColorStop","drawNeedleShadow","needleShadow","shadowOffsetX","shadowOffsetY","shadowBlur","shadowColor","colorNeedleShadowDown","drawCircle","arc","fillStyle","drawings","fill","maxRadius","max","borderShadowWidth","borderOuterWidth","borderMiddleWidth","borderInnerWidth","drawPlate","d0","r0","r1","r2","r3","save","glow","colorBorderShadow","colorBorderOuterStart","colorBorderOuterEnd","colorBorderMiddleStart","colorBorderMiddleEnd","colorBorderInnerStart","colorBorderInnerEnd","restore","colorPlate","drawHighlights","ticksRadius","highlights","hlt","vd","maxValue","minValue","ticksAngle","sa","startAngle","ea","to","ps","pe","ps1","pe1","rotate","HPI","color","drawMinorTicks","lineWidth","SmartCanvas","pixelRatio","strokeStyle","colorMinorTicks","minorTicks","majorTicks","closeStrokedPath","drawMajorTicks","colorMajorTicks","push","nextAngle","strokeTicks","stroke","drawNumbers","points","point","font","fontNumbers","colorNumbers","textAlign","fillText","drawTitle","title","fontTitle","colorTitle","drawUnits","units","fontUnits","colorUnits","drawNeedle","needle","needleCircleSize","rIn","needleEnd","rStart","needleStart","rOut","pad1","needleWidth","pad2","colorNeedleStart","colorNeedleEnd","needleType","colorNeedleShadowUp","needleCircleOuter","colorNeedleCircleOuterStart","colorNeedleCircleOuterEnd","needleCircleInner","colorNeedleCircleInnerStart","colorNeedleCircleInnerEnd","drawValueBox","valueText","text","fontValue","valueBox","th","tw","measureText","width","gy","grd","createRadialGradient","colorValueBoxRectStart","colorValueBoxRectEnd","colorValueBoxShadow","colorValueBoxBackground","colorValueTextShadow","colorValueText","drawRectangle","colorStart","colorEnd","rect","barDimensions","isVertical","hasTitle","hasUnits","titleMargin","unitsMargin","strokeWidth","barStrokeWidth","barBeginCircle","barWidth","barLength","barMargin","x0","y0","barOffset","ticksLength","X","Y","drawLinearBarShape","barOpWidth","strokeColor","circleRadius","toValue","_barDimensions","direction","alpha","asin","cosAlpha","sinAlpha","x1","y1","cutRadius","x2","y2","x3","y3","rx","ry","drawLinearBar","colorBarStroke","colorBar","colorBarEnd","drawLinearBarProgress","barProgress","colorBarProgress","colorBarProgressEnd","drawLinearBarHighlights","_context$barDimension","hasLeft","tickSide","hasRight","tickOffset","interval","eX","eH","eY","hLeft","hRight","entry","eW","drawLinearTick","drawLinearTicks","ticksSize","deltaLen","lineLength","_context$barDimension2","tickX","tickY","tickLen","tickLeft","tickRight","tickSpace","prepareTicks","drawLinearMajorTicks","_prepareTicks","_prepareTicks2","_slicedToArray","_context$barDimension3","_width","rightTicks","leftTicks","sX","sY","drawLinearTickStroke","drawLinearMinorTicks","_prepareTicks3","_prepareTicks4","drawLinearMajorTicksNumbers","_context$barDimension4","ticks","numberSide","textHeight","numLeft","numRight","textX","textY","textWidth","numberOffset","tick","drawLinearTitle","_context$barDimension5","drawLinearUnits","_context$barDimension6","drawLinearBarNeedle","_context$barDimension7","needleSide","position","tickWidth","baseLength","needleLength","toLowerCase","drawLinearArrowNeedle","drawLinearLineNeedle","barStart","nLeft","nRight","peakLength","bodyLength","halfWidth","drawLinearValueBox","drawLinearPlate","borderRadius","w1","w2","w3","w4","h1","h2","h3","h4","x4","y4","sliceIterator","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","err","_createClass","defineProperties","target","props","descriptor","defineProperty","key","protoProps","staticProps","assign","firstSource","nextSource","keysArray","keys","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","searchElement","fromIndex","k","O","Infinity","callback","setTimeout","Date","getTime","rules","linear","p","quad","pow","dequad","quint","dequint","cycle","acos","decycle","bounce","debounce","a","b","elastic","delastic","Animation","_this","performance","now","cancelAnimationFrame","id","DomObserver","element","Type","_this2","type","toDashed","domReady","GAUGE_DEFERRED","setInterval","traverse","clearInterval","mutationsObserved","node","tagName","getAttribute","elements","document","getElementsByTagName","process","MutationObserver","observe","bind","body","childList","subtree","attributes","characterData","attributeOldValue","characterDataOldValue","records","record","attributeName","isValidNode","oldValue","addedNodes","ii","ss","JSON","parse","stringify","hasOwnProperty","toAttributeName","attributeValue","renderTo","test","e","camelCase","str","handler","addEventListener","attachEvent","canvas","height","collection","init","style","elementClone","cloneNode","getContext","contextClone","drawWidth","drawHeight","drawX","drawY","minSide","initialized","translate","index","splice","onRedraw","scale","redraw","get","devicePixelRatio","matchMedia","addListener","GenericOptions","updateValueOnAnimation","borders","animation","animationDuration","animationRule","getElementById","gaugesCollection","BaseGauge","className","name","destroy","set","_this3","fromValue","_value","animate","defaultGaugeOptions","Gauge","_BaseGauge","isNaN","getPrototypeOf","clearRect","commit","drawImage","initialize","defaultLinearGaugeOptions","LinearGauge","_BaseGauge2","orientation","drawBox","concat"],"mappings":"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","file":"gauge.min.js","sourcesContent":["(function() {'use strict';\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @external {Object.assign} https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n */\n/* istanbul ignore next */\nif (!Object.assign) {\n    Object.defineProperty(Object, 'assign', {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function value(target, firstSource) {\n            'use strict';\n\n            if (target === undefined || target === null) {\n                throw new TypeError('Cannot convert first argument to object');\n            }\n\n            var to = Object(target);\n            var i = 1;\n\n            for (; i < arguments.length; i++) {\n                var nextSource = arguments[i];\n\n                if (nextSource === undefined || nextSource === null) {\n                    continue;\n                }\n\n                var keysArray = Object.keys(Object(nextSource));\n                var nextIndex = 0,\n                    len = keysArray.length;\n\n                for (; nextIndex < len; nextIndex++) {\n                    var nextKey = keysArray[nextIndex];\n                    var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n\n                    if (desc !== undefined && desc.enumerable) {\n                        to[nextKey] = nextSource[nextKey];\n                    }\n                }\n            }\n\n            return to;\n        }\n    });\n}\n\n/**\n * @external {Array.indexOf} https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf\n */\n/* istanbul ignore next */\nif (!Array.prototype.indexOf) {\n    Array.prototype.indexOf = function (searchElement, fromIndex) {\n        var k;\n\n        if (this == null) {\n            throw new TypeError('\"this\" is null or not defined');\n        }\n\n        var O = Object(this);\n        var len = O.length >>> 0;\n\n        if (len === 0) {\n            return -1;\n        }\n\n        var n = +fromIndex || 0;\n\n        if (Math.abs(n) === Infinity) {\n            n = 0;\n        }\n\n        if (n >= len) {\n            return -1;\n        }\n\n        k = Math.max(n >= 0 ? n : len - Math.abs(n), 0);\n\n        while (k < len) {\n            if (k in O && O[k] === searchElement) {\n                return k;\n            }\n\n            k++;\n        }\n\n        return -1;\n    };\n}\n\n/*!\n * @license\n * Minimalistic HTML5 Canvas Gauge implementation\n *\n * This code is subject to MIT license.\n *\n * Copyright (c) 2012 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n/**\n * Look-ups for a proper vendor-specific property and returns its value\n *\n * @example\n * var requestAnimationFrame = vendorize('requestAnimationFrame');\n * // it will refer properly to:\n * //  - window.requestAnimationFrame by default or to\n * //  - window.webkitRequestAnimationFrame or to\n * //  - window.mozRequestAnimationFrame or to\n * //  - window.msRequestAnimationFrame or to\n * //  - window.oRequestAnimationFrame\n * // depending on the current browser vendor\n *\n * @author Mykhailo Stadnyk <mikhus@gmail.com>\n * @param {string} prop\n * @param {HTMLElement|Window|object} [from] - default is window\n * @returns {*}\n */\nfunction vendorize(prop, from) {\n    /* istanbul ignore else: no reason to cover */\n    if (!from) {\n        from = typeof window === 'undefined' ? global : window;\n    }\n\n    if (typeof from[prop] !== 'undefined') {\n        return from[prop];\n    }\n\n    var vendors = ['webkit', 'moz', 'ms', 'o'];\n    var i = 0;\n    var s = vendors.length;\n    var capitalized = prop.charAt(0).toUpperCase() + prop.substr(1);\n\n    for (; i < s; i++) {\n        var vendorProp = from[vendors[i] + capitalized];\n\n        /* istanbul ignore if: requires very complex environment to test (specific browser version) */\n        if (typeof vendorProp !== 'undefined') {\n            return vendorProp;\n        }\n    }\n\n    return null;\n}\n\n/*!\n * @license\n * Minimalistic HTML5 Canvas Gauge implementation\n *\n * This code is subject to MIT license.\n *\n * Copyright (c) 2012 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/* istanbul ignore next */\n/**\n * @type {function(callback: function(time: number): number, element?: HTMLElement)}\n * @access private\n */\nvar requestAnimationFrame = vendorize('requestAnimationFrame') || function (callback) {\n    return setTimeout(function () {\n        return callback(new Date().getTime());\n    }, 1000 / 60);\n};\n\n/**\n * Generic AnimationRule function interface\n *\n * @typedef {function(percent: number): number} AnimationRule\n */\n\n/**\n * Callback for animation step draw event.\n * It will be called each time animation step is executed, bypassing\n * as first argument a percent of animation completeness. It is expected\n * that this callback will do an actual work of animating an elements or\n * whatever, as far as animation engine is just calculating and executing\n * animation steps without any knowledge about things under animation.\n *\n * @typedef {function(percent: number): *} DrawEventCallback\n */\n\n/**\n * Callback for animation complete event.\n * It is called once each animation is complete.\n *\n * @typedef {function(): *} EndEventCallback\n */\n\n/**\n * Predefined known animation rules.\n * It's a simple collection of math for some most used animations.\n *\n * @typedef {{linear: AnimationRule, quad: AnimationRule, dequad: AnimationRule, quint: AnimationRule, dequint: AnimationRule, cycle: AnimationRule, decycle: AnimationRule, bounce: AnimationRule, debounce: AnimationRule, elastic: AnimationRule, delastic: AnimationRule}} AnimationRules\n */\n\n/* istanbul ignore next: no reason covering this */\nvar rules = {\n    linear: function linear(p) {\n        return p;\n    },\n    quad: function quad(p) {\n        return Math.pow(p, 2);\n    },\n    dequad: function dequad(p) {\n        return 1 - rules.quad(1 - p);\n    },\n    quint: function quint(p) {\n        return Math.pow(p, 5);\n    },\n    dequint: function dequint(p) {\n        return 1 - Math.pow(1 - p, 5);\n    },\n    cycle: function cycle(p) {\n        return 1 - Math.sin(Math.acos(p));\n    },\n    decycle: function decycle(p) {\n        return Math.sin(Math.acos(1 - p));\n    },\n    bounce: function bounce(p) {\n        return 1 - rules.debounce(1 - p);\n    },\n    debounce: function debounce(p) {\n        var a = 0,\n            b = 1;\n        for (; 1; a += b, b /= 2) {\n            if (p >= (7 - 4 * a) / 11) {\n                return -Math.pow((11 - 6 * a - 11 * p) / 4, 2) + Math.pow(b, 2);\n            }\n        }\n    },\n    elastic: function elastic(p) {\n        return 1 - rules.delastic(1 - p);\n    },\n    delastic: function delastic(p) {\n        var x = 1.5;\n        return Math.pow(2, 10 * (p - 1)) * Math.cos(20 * Math.PI * x / 3 * p);\n    }\n};\n\n/* istanbul ignore next: private, not testable */\n/**\n * Evaluates animation step and decides if the next step required or\n * stops animation calling a proper events.\n *\n * @access private\n * @param {number} time\n * @param {DrawEventCallback} draw\n * @param {number} start\n * @param {AnimationRule} rule\n * @param {number} duration\n * @param {EndEventCallback} end\n * @param {Animation} anim\n */\nfunction step(time, draw, start, rule, duration, end, anim) {\n    if (typeof rule !== 'function') {\n        throw new TypeError('Invalid animation rule:', rule);\n    }\n\n    var progress = time - start;\n    var percent = progress / duration;\n\n    if (percent > 1) {\n        percent = 1;\n    }\n\n    draw && draw(percent === 1 ? percent : rule(percent));\n\n    if (progress < duration) {\n        anim.frame = requestAnimationFrame(function (time) {\n            return step(time, draw, start, rule, duration, end, anim);\n        });\n    } else {\n        end && end();\n    }\n}\n\n/**\n * Animation engine API for JavaScript-based animations.\n * This is simply an animation core framework which simplifies creation\n * of various animations for generic purposes.\n *\n * @example\n * // create 'linear' animation engine, 500ms duration\n * let linear = new Animation('linear', 500);\n *\n * // create 'elastic' animation engine\n * let elastic = new Animation('elastic');\n *\n * // define animation behavior\n * let bounced = new Animation('bounce', 500, percent => {\n *     let value = parseInt(percent * 100, 10);\n *\n *     $('div.bounced').css({\n *         width: value + '%',\n *         height: value + '%'\n *     });\n * });\n *\n * // execute animation\n * bounced.animate();\n *\n * // execute animation and handle when its finished\n * bounced.animate(null, () => {\n *    console.log('Animation finished!');\n * });\n */\n\nvar Animation = function () {\n\n    /**\n     * @constructor\n     * @param {string|AnimationRule} rule\n     * @param {number} duration\n     * @param {DrawEventCallback} [draw]\n     * @param {EndEventCallback} [end]\n     */\n    function Animation() {\n        var rule = arguments.length <= 0 || arguments[0] === undefined ? 'linear' : arguments[0];\n        var duration = arguments.length <= 1 || arguments[1] === undefined ? 250 : arguments[1];\n        var draw = arguments.length <= 2 || arguments[2] === undefined ? function () {} : arguments[2];\n        var end = arguments.length <= 3 || arguments[3] === undefined ? function () {} : arguments[3];\n\n        _classCallCheck(this, Animation);\n\n        /**\n         * Overall animation duration in milliseconds.\n         * By default is equal to 250 ms.\n         *\n         * @type {number}\n         */\n        this.duration = duration;\n\n        /**\n         * Animation rule. By default is linear animation.\n         * Animation rule is a subject to animation rules, which are\n         * a simple object containing math-based methods for calculating\n         * animation steps.\n         *\n         * @type {string|AnimationRule}\n         */\n        this.rule = rule;\n\n        /**\n         * Callback function for the animation step draw event.\n         *\n         * @type {DrawEventCallback}\n         */\n        this.draw = draw;\n\n        /**\n         * Callback for the animation complete event.\n         *\n         * @type {EndEventCallback}\n         */\n        this.end = end;\n\n        if (typeof this.draw !== 'function') {\n            throw new TypeError('Invalid animation draw callback:', draw);\n        }\n\n        if (typeof this.end !== 'function') {\n            throw new TypeError('Invalid animation end callback:', end);\n        }\n    }\n\n    /* istanbul ignore next: non-testable */\n    /**\n     * Performs animation calling each animation step draw callback and\n     * end callback at the end of animation. Callbacks are optional to this\n     * method call. If them are not bypassed will be used that ones which\n     * was pre-set on constructing an Animation object or pre-set after\n     * construction.\n     *\n     * @example\n     * function draw(percent) {\n     *     $('.my-animated-divs').css({\n     *         width: parseInt(percent * 100, 10) + '%'\n     *     });\n     * }\n     * function done() {\n     *     console.log('Animation complete!');\n     * }\n     *\n     * // Define 'draw' and 'end' callbacks on construction\n     * var animation = new Animation('cycle', 500, draw, done);\n     * animation.animate();\n     *\n     * // Define 'draw' and 'end' callbacks after construction\n     * var animation = new Animation('cycle', 500);\n     * animation.draw = draw;\n     * animation.end = done;\n     * animation.animate();\n     *\n     * // Define 'draw' and 'end' callbacks at animation\n     * var animation = new Animation('cycle', 500);\n     * animation.animate(draw, done);\n     *\n     * @param {DrawEventCallback} [draw]\n     * @param {EndEventCallback} [end]\n     */\n\n\n    _createClass(Animation, [{\n        key: 'animate',\n        value: function animate(draw, end) {\n            var _this = this;\n\n            //noinspection JSUnresolvedVariable\n            var start = vendorize('animationStartTime') || window.performance && window.performance.now ? window.performance.now() : Date.now();\n\n            draw = draw || this.draw;\n            end = end || this.end;\n\n            /**\n             * Current requested animation frame identifier\n             *\n             * @type {number}\n             */\n            this.frame = requestAnimationFrame(function (time) {\n                return step(time, draw, start, rules[_this.rule] || _this.rule, _this.duration, end, _this);\n            });\n        }\n\n        /**\n         * Destroys this object properly\n         */\n\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            if (this.frame) {\n                var cancelAnimationFrame = vendorize('cancelAnimationFrame') ||\n                /* istanbul ignore next */\n                function (id) {};\n\n                cancelAnimationFrame(this.frame);\n                this.frame = null;\n            }\n\n            this.draw = null;\n            this.end = null;\n        }\n    }]);\n\n    return Animation;\n}();\n\n/**\n * Animation rules bound statically to Animation constructor.\n *\n * @type {AnimationRules}\n * @static\n */\n\n\nAnimation.rules = rules;\n\n/*!\n * @license\n * Minimalistic HTML5 Canvas Gauge implementation\n *\n * This code is subject to MIT license.\n *\n * Copyright (c) 2012 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n/**\n * @typedef {{ constructor: function(options: object): GaugeInterface, draw: function(): GaugeInterface }} GaugeInterface\n */\n/**\n * @typedef {{parse: function, stringify: function}} JSON\n * @external {JSON} https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/JSON\n */\n\n/**\n * DOM Observer.\n * It will observe DOM document for a configured element types and\n * instantiate associated Types for an existing or newly added DOM elements\n *\n * @example\n * class ProgressBar {\n *     constructor(options) {}\n *     draw() {}\n * }\n *\n * // It will observe DOM document for elements <div>\n * // having attribute 'data-type=\"progress\"'\n * // and instantiate for each new instance of ProgressBar\n *\n * new DomParser({color: 'red'}, 'div', 'progress', ProgressBar);\n *\n * // assume we could have HTML like this\n * // <div data-type=\"progress\" color=\"blue\"></div>\n * // in this case all matching attributes names for a given options will be\n * // parsed and bypassed to an instance from HTML attributes\n */\n\nvar DomObserver = function () {\n\n    /**\n     * @constructor\n     * @param {object} options\n     * @param {string} element\n     * @param {string} Type\n     */\n    function DomObserver(options, element, Type) {\n        var _this2 = this;\n\n        _classCallCheck(this, DomObserver);\n\n        //noinspection JSUnresolvedVariable\n        /**\n         * Default instantiation options for the given Type\n         *\n         * @type {Object}\n         */\n        this.options = options;\n\n        /**\n         * Name of an element to lookup/observe\n         *\n         * @type {string}\n         */\n        this.element = element.toLowerCase();\n\n        /**\n         * data-type attribute value to lookup\n         *\n         * @type {string}\n         */\n        this.type = DomObserver.toDashed(Type);\n\n        /**\n         * Actual type constructor to instantiate for each found element\n         *\n         * @type {Function}\n         */\n        this.Type = window[Type];\n\n        /* istanbul ignore next: this should be tested with end-to-end tests */\n        DomObserver.domReady(function () {\n            //noinspection JSUnresolvedVariable\n            if (!window.GAUGE_DEFERRED) _this2.traverse();else {\n                (function () {\n                    var interval = setInterval(function () {\n                        //noinspection JSUnresolvedVariable\n                        if (!window.GAUGE_DEFERRED) {\n                            _this2.traverse();\n                            clearInterval(interval);\n                        }\n                    });\n                })();\n            }\n        });\n\n        /**\n         * Signals if mutations observer for this type or not\n         *\n         * @type {boolean}\n         */\n        this.mutationsObserved = false;\n    }\n\n    /**\n     * Checks if given node is valid node to process\n     *\n     * @param {Node|HTMLElement} node\n     * @returns {boolean}\n     */\n\n\n    _createClass(DomObserver, [{\n        key: 'isValidNode',\n        value: function isValidNode(node) {\n            return !!(node.tagName && node.tagName.toLowerCase() === this.element && node.getAttribute('data-type') === this.type);\n        }\n\n        /**\n         * Traverse entire current DOM tree and process matching nodes.\n         * Usually it should be called only once on document initialization.\n         */\n\n    }, {\n        key: 'traverse',\n        value: function traverse() {\n            var elements = document.getElementsByTagName(this.element);\n            var i = 0,\n                s = elements.length;\n\n            /* istanbul ignore next: this should be tested with end-to-end tests */\n            for (; i < s; i++) {\n                this.process(elements[i]);\n            }\n\n            if (window.MutationObserver && !this.mutationsObserved) {\n                //noinspection JSCheckFunctionSignatures\n                new MutationObserver(this.observe.bind(this)).observe(document.body, {\n                    childList: true,\n                    subtree: true,\n                    attributes: true,\n                    characterData: true,\n                    attributeOldValue: true,\n                    characterDataOldValue: true\n                });\n\n                this.mutationsObserved = true;\n            }\n        }\n\n        /**\n         * Observes given mutation records for an elements to process\n         *\n         * @param {MutationRecord[]} records\n         */\n\n    }, {\n        key: 'observe',\n        value: function observe(records) {\n            var i = 0;\n            var s = records.length;\n\n            /* istanbul ignore next: this should be tested with end-to-end tests */\n            for (; i < s; i++) {\n                var record = records[i];\n\n                if (record.type === 'attributes' && record.attributeName === 'data-type' && this.isValidNode(record.target) && record.oldValue !== this.type) // skip false-positive mutations\n                    {\n                        this.process(record.target);\n                    } else if (record.addedNodes && record.addedNodes.length) {\n                    var ii = 0;\n                    var ss = record.addedNodes.length;\n\n                    for (; ii < ss; ii++) {\n                        this.process(record.addedNodes[ii]);\n                    }\n                }\n            }\n        }\n\n        /**\n         * Parses given attribute value to a proper JavaScript value.\n         * For example it will parse some stringified value to a proper type\n         * value, e.g. 'true' => true, 'null' => null, '{\"prop\": 20}' => {prop: 20}\n         *\n         * @param {*} value\n         * @return {*}\n         */\n\n    }, {\n        key: 'process',\n\n\n        /**\n         * Processes a given node, instantiating a proper type constructor for it\n         *\n         * @param {Node|HTMLElement} node\n         * @returns {GaugeInterface|null}\n         */\n        value: function process(node) {\n            if (!this.isValidNode(node)) return null;\n\n            var prop = void 0;\n            var options = JSON.parse(JSON.stringify(this.options));\n\n            for (prop in options) {\n                /* istanbul ignore else: non-testable in most cases */\n                if (options.hasOwnProperty(prop)) {\n                    var attributeName = DomObserver.toAttributeName(prop);\n                    var attributeValue = DomObserver.parse(node.getAttribute(attributeName));\n\n                    if (attributeValue !== null && attributeValue !== undefined) {\n                        options[prop] = attributeValue;\n                    }\n                }\n            }\n\n            options.renderTo = node;\n\n            return new this.Type(options).draw();\n        }\n\n        /**\n         * Transforms camelCase string to dashed string\n         *\n         * @static\n         * @param {string} camelCase\n         * @return {string}\n         */\n\n    }], [{\n        key: 'parse',\n        value: function parse(value) {\n            // parse boolean\n            if (value === 'true') return true;\n            if (value === 'false') return false;\n\n            // parse undefined\n            if (value === 'undefined') return undefined;\n\n            // parse null\n            if (value === 'null') return null;\n\n            // Comma-separated strings to array parsing.\n            // It won't match strings which contains non alphanumeric characters to\n            // prevent strings like 'rgba(0,0,0,0)' or JSON-like from being parsed.\n            // Typically it simply allows easily declare arrays as comma-separated\n            // numbers or plain strings. If something more complicated is\n            // required it can be declared using JSON format syntax\n            if (/^[\\w\\d\\s]+(?:,[\\w\\d\\s]+)+$/.test(value)) {\n                return value.split(',');\n            }\n\n            // parse JSON\n            try {\n                return JSON.parse(value);\n            } catch (e) {}\n\n            // plain value - no need to parse\n            return value;\n        }\n    }, {\n        key: 'toDashed',\n        value: function toDashed(camelCase) {\n            var arr = camelCase.split(/(?=[A-Z])/);\n            var i = 1;\n            var s = arr.length;\n            var str = arr[0].toLowerCase();\n\n            for (; i < s; i++) {\n                str += '-' + arr[i].toLowerCase();\n            }\n\n            return str;\n        }\n\n        /**\n         * Transforms camel case property name to dash separated attribute name\n         *\n         * @static\n         * @param {string} str\n         * @returns {string}\n         */\n\n    }, {\n        key: 'toAttributeName',\n        value: function toAttributeName(str) {\n            return 'data-' + DomObserver.toDashed(str);\n        }\n\n        /**\n         * Cross-browser DOM ready handler\n         *\n         * @static\n         * @param {Function} handler\n         */\n\n    }, {\n        key: 'domReady',\n        value: function domReady(handler) {\n            if (window.addEventListener) {\n                window.addEventListener('DOMContentLoaded', handler, false);\n            } else {\n                window.attachEvent('onload', handler);\n            }\n        }\n    }]);\n\n    return DomObserver;\n}();\n\n/*!\n * @license\n * Minimalistic HTML5 Canvas Gauge implementation\n *\n * This code is subject to MIT license.\n *\n * Copyright (c) 2012 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n/**\n * Drawings on canvas using hidden canvas as a cache for better\n * performance drawings during canvas animations. SmartCanvas also\n * adopts a canvas to\n */\n\n\nvar SmartCanvas = function () {\n\n    /**\n     * @constructor\n     * @param {HTMLCanvasElement} canvas\n     * @param {number} width\n     * @param {number} height\n     */\n    function SmartCanvas(canvas, width, height) {\n        _classCallCheck(this, SmartCanvas);\n\n        SmartCanvas.collection.push(this);\n\n        /**\n         * Canvas base width\n         *\n         * @type {number}\n         */\n        this.width = width || 0;\n\n        /**\n         * Canvas base height\n         *\n         * @type {number}\n         */\n        this.height = height || 0;\n\n        /**\n         * Target drawings canvas element\n         *\n         * @type {HTMLCanvasElement}\n         */\n        this.element = canvas;\n\n        this.init();\n    }\n\n    /**\n     * Initializes canvases and contexts\n     */\n\n\n    _createClass(SmartCanvas, [{\n        key: 'init',\n        value: function init() {\n            var pixelRatio = SmartCanvas.pixelRatio;\n\n            this.element.width = this.width * pixelRatio;\n            this.element.height = this.height * pixelRatio;\n\n            this.element.style.width = this.width + 'px';\n            this.element.style.height = this.height + 'px';\n\n            /**\n             * Canvas caching element\n             *\n             * @type {HTMLCanvasElement|Node}\n             */\n            this.elementClone = this.element.cloneNode(true);\n\n            //noinspection JSUnresolvedVariable\n            /**\n             * Target drawings canvas element 2D context\n             *\n             * @type {CanvasRenderingContext2D}\n             */\n            this.context = this.element.getContext('2d');\n\n            /**\n             * Canvas caching element 2D context\n             *\n             * @type {CanvasRenderingContext2D}\n             */\n            this.contextClone = this.elementClone.getContext('2d');\n\n            /**\n             * Actual drawings width\n             *\n             * @type {number}\n             */\n            this.drawWidth = this.element.width;\n\n            /**\n             * Actual drawings height\n             *\n             * @type {number}\n             */\n            this.drawHeight = this.element.height;\n\n            /**\n             * X-coordinate of drawings zero point\n             *\n             * @type {number}\n             */\n            this.drawX = this.drawWidth / 2;\n\n            /**\n             * Y-coordinate of drawings zero point\n             *\n             * @type {number}\n             */\n            this.drawY = this.drawHeight / 2;\n\n            /**\n             * Minimal side length in pixels of the drawing\n             *\n             * @type {number}\n             */\n            this.minSide = this.drawX < this.drawY ? this.drawX : this.drawY;\n\n            this.elementClone.initialized = false;\n\n            this.contextClone.translate(this.drawX, this.drawY);\n            this.contextClone.save();\n\n            this.context.translate(this.drawX, this.drawY);\n            this.context.save();\n\n            this.context.max = this.contextClone.max = this.minSide;\n            this.context.maxRadius = this.contextClone.maxRadius = null;\n        }\n\n        /**\n         * Destroys this object, removing the references from memory\n         */\n\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            var index = SmartCanvas.collection.indexOf(this);\n\n            /* istanbul ignore else */\n            if (~index) {\n                SmartCanvas.collection.splice(index, 1);\n            }\n\n            // dereference all created elements\n            this.context.max = null;\n            delete this.context.max;\n\n            this.context.maxRadius = null;\n            delete this.context.maxRadius;\n\n            this.context = null;\n            this.contextClone = null;\n            this.elementClone = null;\n            this.element = null;\n\n            /**\n             * On canvas redraw event callback\n             *\n             * @type {function|null|undefined}\n             */\n            this.onRedraw = null;\n        }\n\n        /**\n         * Commits the drawings\n         */\n\n    }, {\n        key: 'commit',\n        value: function commit() {\n            var scale = SmartCanvas.pixelRatio;\n\n            if (scale !== 1) {\n                this.contextClone.scale(scale, scale);\n                this.contextClone.save();\n            }\n\n            return this;\n        }\n\n        /**\n         * Redraw this object\n         */\n\n    }, {\n        key: 'redraw',\n        value: function redraw() {\n            this.init();\n\n            /**\n             * On canvas redraw event callback\n             *\n             * @type {function(): *}\n             */\n            this.onRedraw && this.onRedraw();\n\n            return this;\n        }\n\n        /**\n         * Returns current device pixel ratio\n         *\n         * @returns {number}\n         */\n\n    }], [{\n        key: 'redraw',\n\n\n        /**\n         * Forces redraw all canvas in the current collection\n         */\n        value: function redraw() {\n            var i = 0;\n            var s = SmartCanvas.collection.length;\n\n            for (; i < s; i++) {\n                SmartCanvas.collection[i].redraw();\n            }\n        }\n    }, {\n        key: 'pixelRatio',\n        get: function get() {\n            /* istanbul ignore next */\n            //noinspection JSUnresolvedVariable\n            return window.devicePixelRatio || 1;\n        }\n    }]);\n\n    return SmartCanvas;\n}();\n\nSmartCanvas.collection = [];\n\n/* istanbul ignore next: very browser-specific testing required to cover */\n//noinspection JSUnresolvedVariable\nif (window.matchMedia) {\n    //noinspection JSUnresolvedFunction\n    window.matchMedia('screen and (min-resolution: 2dppx)').addListener(SmartCanvas.redraw);\n}\n\n/*!\n * @license\n * Minimalistic HTML5 Canvas Gauge implementation\n *\n * This code is subject to MIT license.\n *\n * Copyright (c) 2012 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/**\n * Describes rendering target element. Can be either string identifier of\n * the element or the element itself.\n *\n * @typedef {HTMLElement|string} RenderTarget\n */\n\n/**\n * Highlight area definition.\n * It describes highlight area starting from value to value using\n * color. Color can be describes with hex, rgb or rgba value.\n *\n * @typedef {{ from: number, to: number, color: string}} Highlight\n */\n\n/**\n *\n * @type {{renderTo: RenderTarget, width: number, height: number, minValue: number, maxValue: number, value: number, units: string|boolean, majorTicks: number[]|string[], minorTicks: number, strokeTicks: boolean, updateValueOnAnimation: boolean, glow: boolean, title: string|boolean, borders: boolean, valueInt: number, valueDec: number, majorTicksInt: number, majorTicksDec: number, animation: boolean, animationDuration: number, animationRule: string|AnimationRule, colorPlate: string, colorMajorTicks: string, colorMinorTicks: string, colorTitle: string, colorUnits: string, colorNumbers: string, colorNeedleStart: string, colorNeedleEnd: string, colorValueText: string, colorValueTextShadow: string, colorBorderShadow: string, colorBorderOuterStart: string, colorBorderOuterEnd: string, colorBorderMiddleStart: string, colorBorderMiddleEnd: string, colorBorderInnerStart: string, colorBorderInnerEnd: string, needle: boolean, needleShadow: boolean, needleType: string, needleStart: number, needleEnd: number, needleWidth: number, borderOuterWidth: number, borderMiddleWidth: number, borderInnerWidth: number, borderShadowWidth: number, valueBox: boolean, valueText: string|boolean, highlights: Highlight[], fontNumbers: string, fontTitle: string, fontUnits: string, fontValue: string}} GenericOptions\n */\nvar GenericOptions = {\n    // basic options\n    renderTo: null,\n    width: 200,\n    height: 200,\n    minValue: 0,\n    maxValue: 100,\n    value: 0,\n    units: false,\n    majorTicks: [0, 20, 40, 60, 80, 100],\n    minorTicks: 10,\n    strokeTicks: true,\n    updateValueOnAnimation: false,\n    glow: true,\n    title: false,\n    borders: true,\n\n    // number formats\n    valueInt: 3,\n    valueDec: 2,\n    majorTicksInt: 1,\n    majorTicksDec: 0,\n\n    // animations\n    animation: true,\n    animationDuration: 250,\n    animationRule: 'cycle',\n\n    // colors\n    colorPlate: '#fff',\n    colorMajorTicks: '#444',\n    colorMinorTicks: '#666',\n    colorTitle: '#888',\n    colorUnits: '#888',\n    colorNumbers: '#444',\n    colorNeedleStart: 'rgba(240,128,128,1)',\n    colorNeedleEnd: 'rgba(255,160,122,.9)',\n    colorValueText: '#444',\n    colorValueTextShadow: 'rgba(0,0,0,0.3)',\n    colorBorderShadow: 'rgba(0,0,0,0.5)',\n    colorBorderOuterStart: '#ddd',\n    colorBorderOuterEnd: '#aaa',\n    colorBorderMiddleStart: '#eee',\n    colorBorderMiddleEnd: '#f0f0f0',\n    colorBorderInnerStart: '#fafafa',\n    colorBorderInnerEnd: '#ccc',\n\n    fontNumbers: 'Arial',\n    fontTitle: 'Arial',\n    fontUnits: 'Arial',\n    fontValue: 'Arial',\n\n    // needle\n    needle: true,\n    needleShadow: true,\n    needleType: 'arrow',\n    needleStart: 5,\n    needleEnd: 85,\n    needleWidth: 4,\n\n    // borders\n    borderOuterWidth: 3,\n    borderMiddleWidth: 3,\n    borderInnerWidth: 3,\n    borderShadowWidth: 3,\n\n    // value and highlights\n    valueBox: true,\n    valueText: true,\n    highlights: [{ from: 20, to: 60, color: '#eee' }, { from: 60, to: 80, color: '#ccc' }, { from: 80, to: 100, color: '#999' }]\n};\n\nGenericOptions;\n\n/*!\n * @license\n * Minimalistic HTML5 Canvas Gauge implementation\n *\n * This code is subject to MIT license.\n *\n * Copyright (c) 2012 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/**\n * Gauge collections type.\n *\n * It is used ES5 declaration here, because babel\n * transpiles inheritance incorrectly in this case.\n *\n * @class Collection\n * @constructor\n */\nfunction Collection() {\n    Array.prototype.constructor.apply(this, arguments);\n}\n\nCollection.prototype = Object.create(Array.prototype);\nCollection.prototype.constructor = Collection;\n\n/**\n * Returns gauge object by its identifier or index in the collection\n *\n * @param {string|number} id\n * @return {*}\n */\nCollection.prototype.get = function (id) {\n    if (typeof id === 'string') {\n        var i = 0;\n        var s = this.length;\n\n        for (; i < s; i++) {\n            var canvas = this[i].options.renderTo.tagName ? this[i].options.renderTo :\n            /* istanbul ignore next: should be tested with e2e tests */\n            document.getElementById(this[i].options.renderTo || '');\n\n            if (canvas.getAttribute('id') === id) {\n                return this[i];\n            }\n        }\n    } else if (typeof id === 'number') {\n        return this[id];\n    }\n\n    return null;\n};\n\nvar gaugesCollection = new Collection();\n\n/**\n * Basic abstract BaseGauge class implementing common functionality\n * for different type of gauges.\n *\n * It should not be instantiated directly but must be extended by a final\n * gauge implementation.\n *\n * @abstract\n * @example\n *\n * class MyCoolGauge extends BaseGauge {\n *\n *     // theses methods below MUST be implemented:\n *\n *     constructor(options) {\n *        // ... do something with options\n *        super(options);\n *        // ... implement anything else\n *     }\n *\n *     draw() {\n *         // ... some implementation here\n *         return this;\n *     }\n * }\n */\n\nvar BaseGauge = function () {\n\n    /**\n     * @constructor\n     * @abstract\n     * @param {GenericOptions} options\n     */\n    function BaseGauge(options) {\n        _classCallCheck(this, BaseGauge);\n\n        var className = this.constructor.name;\n\n        if (className === 'BaseGauge') {\n            throw new TypeError('Attempt to instantiate abstract class!');\n        }\n\n        gaugesCollection.push(this);\n\n        /**\n         * Gauge type class\n         *\n         * @type {BaseGauge} type\n         */\n        this.type = window[className];\n\n        options.minValue = parseFloat(options.minValue);\n        options.maxValue = parseFloat(options.maxValue);\n\n        if (!options.borders) {\n            options.borderInnerWidth = options.borderMiddleWidth = options.borderOuterWidth = 0;\n        }\n\n        /**\n         * Gauge options\n         *\n         * @type {GenericOptions} options\n         */\n        this.options = options || {};\n\n        if (!options.renderTo) {\n            throw TypeError('Canvas element was not specified when creating ' + 'the Gauge object!');\n        }\n\n        var canvas = options.renderTo.tagName ? options.renderTo :\n        /* istanbul ignore next: to be tested with e2e tests */\n        document.getElementById(options.renderTo);\n\n        /**\n         * @type {SmartCanvas} canvas\n         */\n        this.canvas = new SmartCanvas(canvas, options.width, options.height);\n        this.canvas.onRedraw = this.draw.bind(this);\n\n        /**\n         * @type {Animation} animation\n         */\n        this.animation = new Animation(options.animationRule, options.animationDuration);\n    }\n\n    /**\n     * Sets new value for this gauge.\n     * If gauge is animated by configuration it will trigger a proper animation.\n     * Upsetting a value triggers gauge redraw.\n     *\n     * @param {number} value\n     */\n\n\n    _createClass(BaseGauge, [{\n        key: 'update',\n\n\n        /**\n         * Updates gauge configuration options at runtime and redraws the gauge\n         *\n         * @param {GaugeOptions} options\n         * @returns {BaseGauge}\n         */\n        value: function update(options) {\n            Object.assign(this.options, options || {});\n\n            this.canvas.width = this.options.width;\n            this.canvas.height = this.options.height;\n\n            this.animation.rule = this.options.animationRule;\n            this.animation.duration = this.options.animationDuration;\n\n            this.canvas.redraw();\n\n            return this;\n        }\n\n        /**\n         * Performs destruction of this object properly\n         */\n\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            var index = gaugesCollection.indexOf(this);\n\n            /* istanbul ignore else */\n            if (~index) {\n                //noinspection JSUnresolvedFunction\n                gaugesCollection.splice(index, 1);\n            }\n\n            this.canvas.destroy();\n            this.canvas = null;\n\n            this.animation.destroy();\n            this.animation = null;\n        }\n\n        /**\n         * Triggering gauge render on a canvas.\n         *\n         * @abstract\n         * @returns {BaseGauge}\n         */\n\n    }, {\n        key: 'draw',\n        value: function draw() {\n            throw new TypeError('draw() must be implemented by a child class!');\n        }\n\n        /**\n         * Collection of the gauges on a page.\n         * The collection is singleton collection of the gauges spread\n         * across all gauge types.\n         *\n         * @return {Collection}\n         */\n\n    }, {\n        key: 'value',\n        set: function set(value) {\n            var _this3 = this;\n\n            if (value === this.options.value) return;\n\n            if (this.options.animation) {\n                (function () {\n                    var fromValue = _this3.options.value;\n\n                    /**\n                     * @type {number}\n                     * @access private\n                     */\n                    _this3._value = value;\n\n                    _this3.animation.animate(function (percent) {\n                        _this3.options.value = fromValue + (value - fromValue) * percent;\n\n                        _this3.draw();\n                    }, function () {\n                        _this3.options.value = value;\n                        delete _this3._value;\n                        _this3.draw();\n                    });\n                })();\n            } else {\n                this.options.value = value;\n                this.draw();\n            }\n        }\n\n        /**\n         * Returns current value of the gauge\n         *\n         * @return {number}\n         */\n        ,\n        get: function get() {\n            return typeof this._value === 'undefined' ? this.options.value : this._value;\n        }\n    }], [{\n        key: 'initialize',\n\n\n        /**\n         * Inject given gauge object into DOM\n         *\n         * @param {string} Type\n         * @param {GenericOptions} options\n         */\n        value: function initialize(Type, options) {\n            new DomObserver(options, 'canvas', Type);\n        }\n    }, {\n        key: 'collection',\n        get: function get() {\n            return gaugesCollection;\n        }\n    }]);\n\n    return BaseGauge;\n}();\n\nwindow['BaseGauge'] = BaseGauge;\n\n/*!\n * @license\n * Minimalistic HTML5 Canvas Gauge implementation\n *\n * This code is subject to MIT license.\n *\n * Copyright (c) 2012 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/**\n * @access private\n * @typedef {CanvasRenderingContext2D|{max: number, maxRadius: number, barDimensions: object}} Canvas2DContext\n */\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws rounded corners rectangle\n *\n * @param {Canvas2DContext} context\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {number} r\n */\nfunction roundRect(context, x, y, w, h, r) {\n    context.beginPath();\n\n    context.moveTo(x + r, y);\n    context.lineTo(x + w - r, y);\n\n    context.quadraticCurveTo(x + w, y, x + w, y + r);\n    context.lineTo(x + w, y + h - r);\n\n    context.quadraticCurveTo(x + w, y + h, x + w - r, y + h);\n    context.lineTo(x + r, y + h);\n\n    context.quadraticCurveTo(x, y + h, x, y + h - r);\n    context.lineTo(x, y + r);\n\n    context.quadraticCurveTo(x, y, x + r, y);\n\n    context.closePath();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Pads a given value with leading zeros using the given options\n *\n * @param {number} val\n * @param {GaugeOptions|{valueInt: number, valueDec: number}} options\n * @returns {string}\n */\nfunction padValue(val, options) {\n    var dec = options.valueDec;\n    var int = options.valueInt;\n    var i = 0;\n    var s = void 0,\n        strVal = void 0,\n        n = void 0;\n\n    val = parseFloat(val);\n    n = val < 0;\n    val = Math.abs(val);\n\n    if (dec > 0) {\n        strVal = val.toFixed(dec).toString().split('.');\n        s = int - strVal[0].length;\n\n        for (; i < s; ++i) {\n            strVal[0] = '0' + strVal[0];\n        }\n\n        strVal = (n ? '-' : '') + strVal[0] + '.' + strVal[1];\n    } else {\n        strVal = Math.round(val).toString();\n        s = int - strVal.length;\n\n        for (; i < s; ++i) {\n            strVal = '0' + strVal;\n        }\n\n        strVal = (n ? '-' : '') + strVal;\n    }\n\n    return strVal;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Formats a number for display on the dial's plate using the majorTicksFormat\n * config option.\n *\n * @param {number} num number to format\n * @param {object} options\n * @returns {string} formatted number\n */\nfunction formatMajorTickNumber(num, options) {\n    var right = void 0,\n        hasDec = false;\n\n    // First, force the correct number of digits right of the decimal.\n    if (options.majorTicksDec === 0) {\n        right = Math.round(num).toString();\n    } else {\n        right = num.toFixed(options.majorTicksDec);\n    }\n\n    // Second, force the correct number of digits left of the decimal.\n    if (options.majorTicksInt > 1) {\n        // Does this number have a decimal?\n        hasDec = ~right.indexOf('.');\n\n        // Is this number a negative number?\n        if (~right.indexOf('-')) {\n            return '-' + [options.majorTicksInt + options.majorTicksDec + 2 + (hasDec ? 1 : 0) - right.length].join('0') + right.replace('-', '');\n        } else {\n            return [options.majorTicksInt + options.majorTicksDec + 1 + (hasDec ? 1 : 0) - right.length].join('0') + right;\n        }\n    }\n\n    return right;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Transforms degrees to radians\n *\n * @param {number} degrees\n * @returns {number}\n */\nfunction radians(degrees) {\n    return degrees * Math.PI / 180;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Calculates and returns radial point coordinates\n *\n * @param {number} radius\n * @param {number} angle\n * @returns {{x: number, y: number}}\n */\nfunction radialPoint(radius, angle) {\n    return { x: -radius * Math.sin(angle), y: radius * Math.cos(angle) };\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Creates and returns linear gradient canvas object\n *\n * @param {Canvas2DContext} context\n * @param {string} colorFrom\n * @param {string} colorTo\n * @param {number} length\n * @returns {CanvasGradient}\n */\nfunction linearGradient(context, colorFrom, colorTo, length) {\n    var grad = context.createLinearGradient(0, 0, 0, length);\n\n    grad.addColorStop(0, colorFrom);\n    grad.addColorStop(1, colorTo);\n\n    return grad;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge needle shadow\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {GaugeOptions} options\n */\nfunction drawNeedleShadow(context, options) {\n    if (!options.needleShadow) return;\n\n    context.shadowOffsetX = 2;\n    context.shadowOffsetY = 2;\n    context.shadowBlur = 10;\n    context.shadowColor = options.colorNeedleShadowDown;\n}\n\nvar drawings = {\n    roundRect: roundRect,\n    padValue: padValue,\n    formatMajorTickNumber: formatMajorTickNumber,\n    radians: radians,\n    radialPoint: radialPoint,\n    linearGradient: linearGradient,\n    drawNeedleShadow: drawNeedleShadow\n};\n\ndrawings;\n\n/*!\n * @license\n * Minimalistic HTML5 Canvas Gauge implementation\n *\n * This code is subject to MIT license.\n *\n * Copyright (c) 2012 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar PI = Math.PI;\nvar HPI = PI / 2;\n\n/**\n * Gauge configuration options\n *\n * @typedef {GenericOptions|{ticksAngle: number, startAngle: number, colorNeedleCircleOuterStart: string, colorNeedleCircleOuterEnd: string, colorNeedleCircleInnerStart: string, colorNeedleCircleInnerEnd: string, colorNeedleShadowUp: string, colorNeedleShadowDown: string, colorValueBoxRectStart: string, colorValueBoxRectEnd: string, colorValueBoxBackground: string, colorValueBoxShadow: string, needleStart: number, needleEnd: number, needleWidth: number, needleCircleSize: number, needleCircleInner: boolean, needleCircleOuter: boolean}} GaugeOptions\n */\n\n/**\n * Default gauge configuration options\n *\n * @access private\n * @type {GaugeOptions}\n */\nvar defaultGaugeOptions = Object.assign({}, GenericOptions, {\n    // basic options\n    ticksAngle: 270,\n    startAngle: 45,\n\n    // colors\n    colorNeedleCircleOuterStart: '#f0f0f0',\n    colorNeedleCircleOuterEnd: '#ccc',\n    colorNeedleCircleInnerStart: '#e8e8e8',\n    colorNeedleCircleInnerEnd: '#f5f5f5',\n    colorNeedleShadowUp: 'rgba(2,255,255,0.2)',\n    colorNeedleShadowDown: 'rgba(188,143,143,0.45)',\n    colorValueBoxRectStart: '#888',\n    colorValueBoxRectEnd: '#666',\n    colorValueBoxBackground: '#babab2',\n    colorValueBoxShadow: 'rgba(0,0,0,1)',\n\n    // needle\n    needleCircleSize: 10,\n    needleCircleInner: true,\n    needleCircleOuter: true\n});\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gradient-filled circle on a canvas\n *\n * @access private\n * @param {number} radius\n * @param {Canvas2DContext} context\n * @param {string} start gradient start color\n * @param {string} end gradient end color\n */\nfunction drawCircle(radius, context, start, end) {\n    context.beginPath();\n    context.arc(0, 0, radius, 0, PI * 2, true);\n    context.fillStyle = drawings.linearGradient(context, start, end, radius);\n    context.fill();\n    context.closePath();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Returns max radius without borders for the gauge\n *\n * @param {Canvas2DContext} context\n * @param {GaugeOptions} options\n * @return {number}\n */\nfunction maxRadius(context, options) {\n    if (!context.maxRadius) {\n        context.maxRadius = context.max - options.borderShadowWidth - options.borderOuterWidth - options.borderMiddleWidth - options.borderInnerWidth;\n    }\n\n    return context.maxRadius;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge plate on the canvas\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {GaugeOptions} options\n */\nfunction drawPlate(context, options) {\n    var d0 = options.borderShadowWidth;\n    var r0 = context.max - options.borderShadowWidth;\n    var r1 = r0 - options.borderOuterWidth;\n    var r2 = r1 - options.borderMiddleWidth;\n    var r3 = maxRadius(context, options);\n\n    context.save();\n\n    if (options.glow) {\n        context.shadowBlur = d0;\n        context.shadowColor = options.colorBorderShadow;\n    }\n\n    if (options.borderOuterWidth) {\n        drawCircle(r0, context, options.colorBorderOuterStart, options.colorBorderOuterEnd);\n    }\n\n    if (options.borderMiddleWidth) {\n        drawCircle(r1, context, options.colorBorderMiddleStart, options.colorBorderMiddleEnd);\n    }\n\n    if (options.borderInnerWidth) {\n        drawCircle(r2, context, options.colorBorderInnerStart, options.colorBorderInnerEnd);\n    }\n\n    context.restore();\n\n    context.beginPath();\n    context.arc(0, 0, r3, 0, PI * 2, true);\n    context.fillStyle = options.colorPlate;\n    context.fill();\n    context.closePath();\n\n    context.save();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge highlight areas on a canvas\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {GaugeOptions} options\n */\nfunction drawHighlights(context, options) {\n    context.save();\n\n    var r1 = ticksRadius(context, options);\n    var r2 = r1 - context.max * .15;\n    var i = 0,\n        s = options.highlights.length;\n\n    for (; i < s; i++) {\n        var hlt = options.highlights[i];\n        var vd = (options.maxValue - options.minValue) / options.ticksAngle;\n        var sa = drawings.radians(options.startAngle + (hlt.from - options.minValue) / vd);\n        var ea = drawings.radians(options.startAngle + (hlt.to - options.minValue) / vd);\n        var ps = drawings.radialPoint(r2, sa);\n        var pe = drawings.radialPoint(r1, sa);\n        var ps1 = drawings.radialPoint(r1, ea);\n        var pe1 = drawings.radialPoint(r2, ea);\n\n        context.beginPath();\n        context.rotate(HPI);\n        context.arc(0, 0, r1, sa, ea, false);\n        context.restore();\n        context.save();\n        context.moveTo(ps.x, ps.y);\n        context.lineTo(pe.x, pe.y);\n        context.lineTo(ps1.x, ps1.y);\n        context.lineTo(pe1.x, pe1.y);\n        context.lineTo(ps.x, ps.y);\n        context.closePath();\n\n        context.fillStyle = hlt.color;\n        context.fill();\n\n        context.beginPath();\n        context.rotate(HPI);\n        context.arc(0, 0, r2, sa - 0.2, ea + 0.2, false);\n        context.restore();\n        context.closePath();\n\n        context.fillStyle = options.colorPlate;\n        context.fill();\n        context.save();\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws minor ticks bar on a canvas\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {GaugeOptions} options\n */\nfunction drawMinorTicks(context, options) {\n    var radius = ticksRadius(context, options);\n\n    context.lineWidth = SmartCanvas.pixelRatio;\n    context.strokeStyle = options.colorMinorTicks;\n\n    context.save();\n\n    var s = options.minorTicks * (options.majorTicks.length - 1);\n    var i = 0;\n\n    for (; i < s; ++i) {\n        var angle = options.startAngle + i * (options.ticksAngle / s);\n\n        context.rotate(drawings.radians(angle));\n\n        context.beginPath();\n        context.moveTo(0, radius);\n        context.lineTo(0, radius - context.max * .075);\n        closeStrokedPath(context);\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Returns ticks radius\n *\n * @access private\n * @param context\n * @param options\n * @return {number}\n */\nfunction ticksRadius(context, options) {\n    return maxRadius(context, options) - context.max * .05;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge major ticks bar on a canvas\n *\n * @param {Canvas2DContext} context\n * @param {GaugeOptions} options\n */\nfunction drawMajorTicks(context, options) {\n    var r = ticksRadius(context, options);\n    var i = void 0;\n    var s = options.majorTicks.length;\n    var pixelRatio = SmartCanvas.pixelRatio;\n\n    context.lineWidth = 2 * pixelRatio;\n    context.strokeStyle = options.colorMajorTicks;\n    context.save();\n\n    if (s === 0) {\n        options.majorTicks.push(drawings.formatMajorTickNumber(options.minValue, options));\n        options.majorTicks.push(drawings.formatMajorTickNumber(options.maxValue, options));\n        s = 2;\n    }\n\n    i = 0;\n    for (; i < s; ++i) {\n        context.rotate(drawings.radians(nextAngle(options, i, s)));\n\n        context.beginPath();\n        context.moveTo(0, r);\n        context.lineTo(0, r - context.max * .15);\n        closeStrokedPath(context);\n    }\n\n    if (options.strokeTicks) {\n        context.rotate(HPI);\n\n        context.beginPath();\n        context.arc(0, 0, r, drawings.radians(options.startAngle), drawings.radians(options.startAngle + options.ticksAngle), false);\n        closeStrokedPath(context);\n    }\n}\n\n/* istanbul ignore next: private, not testable */\nfunction nextAngle(options, i, s) {\n    return options.startAngle + i * (options.ticksAngle / (s - 1));\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Strokes, closes path and restores previous context state\n *\n * @param {Canvas2DContext} context\n */\nfunction closeStrokedPath(context) {\n    context.stroke();\n    context.restore();\n    context.closePath();\n    context.save();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge bar numbers\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {GaugeOptions} options\n */\nfunction drawNumbers(context, options) {\n    var radius = maxRadius(context, options) - context.max * .35;\n    var points = {};\n    var i = 0;\n    var s = options.majorTicks.length;\n\n    for (; i < s; ++i) {\n        var angle = nextAngle(options, i, s);\n        var point = drawings.radialPoint(radius, drawings.radians(angle));\n\n        if (angle === 360) angle = 0;\n\n        if (points[angle]) {\n            continue; //already drawn at this place, skipping\n        }\n\n        points[angle] = true;\n\n        context.font = 20 * (context.max / 200) + 'px ' + options.fontNumbers;\n        context.fillStyle = options.colorNumbers;\n        context.lineWidth = 0;\n        context.textAlign = 'center';\n        context.fillText(options.majorTicks[i], point.x, point.y + 3);\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge title\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {GaugeOptions} options\n */\nfunction drawTitle(context, options) {\n    if (!options.title) return;\n\n    context.save();\n    context.font = 24 * (context.max / 200) + 'px ' + options.fontTitle;\n    context.fillStyle = options.colorTitle;\n    context.textAlign = 'center';\n    context.fillText(options.title, 0, -context.max / 4.25, context.max * .8);\n    context.restore();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws units name on the gauge\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {GaugeOptions} options\n */\nfunction drawUnits(context, options) {\n    if (!options.units) return;\n\n    context.save();\n    context.font = 22 * (context.max / 200) + 'px ' + options.fontUnits;\n    context.fillStyle = options.colorUnits;\n    context.textAlign = 'center';\n    context.fillText(options.units, 0, context.max / 3.25, context.max * .8);\n    context.restore();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge needle\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {GaugeOptions} options\n */\nfunction drawNeedle(context, options) {\n    if (!options.needle) return;\n\n    var value = options.value;\n    var max = maxRadius(context, options);\n    var r1 = max / 100 * options.needleCircleSize;\n    var r2 = max / 100 * options.needleCircleSize * 0.75;\n    var rIn = max / 100 * options.needleEnd;\n    var rStart = options.needleStart ? max / 100 * options.needleStart : 0,\n        rOut = max * .2;\n    var pad1 = max / 100 * options.needleWidth;\n    var pad2 = max / 100 * options.needleWidth / 2;\n    var pixelRatio = SmartCanvas.pixelRatio;\n\n    drawings.drawNeedleShadow(context, options);\n\n    context.save();\n\n    context.rotate(drawings.radians(options.startAngle + (value - options.minValue) / (options.maxValue - options.minValue) * options.ticksAngle));\n\n    context.fillStyle = drawings.linearGradient(context, options.colorNeedleStart, options.colorNeedleEnd, rIn - rOut);\n\n    if (options.needleType === 'arrow') {\n        context.beginPath();\n        context.moveTo(-pad2, -rOut);\n        context.lineTo(-pad1, 0);\n        context.lineTo(-1 * pixelRatio, rIn);\n        context.lineTo(pixelRatio, rIn);\n        context.lineTo(pad1, 0);\n        context.lineTo(pad2, -rOut);\n        context.closePath();\n        context.fill();\n\n        context.beginPath();\n        context.lineTo(-0.5 * pixelRatio, rIn);\n        context.lineTo(-1 * pixelRatio, rIn);\n        context.lineTo(-pad1, 0);\n        context.lineTo(-pad2, -rOut);\n        context.lineTo(pad2 / 2 * pixelRatio - 2 * pixelRatio, -rOut);\n        context.closePath();\n        context.fillStyle = options.colorNeedleShadowUp;\n        context.fill();\n    } else {\n        // simple line needle\n        context.beginPath();\n        context.moveTo(-pad2, rIn);\n        context.lineTo(-pad2, rStart);\n        context.lineTo(pad2, rStart);\n        context.lineTo(pad2, rIn);\n        context.closePath();\n        context.fill();\n    }\n\n    context.restore();\n\n    if (options.needleCircleSize) {\n        drawings.drawNeedleShadow(context, options);\n\n        if (options.needleCircleOuter) {\n            context.beginPath();\n            context.arc(0, 0, r1, 0, PI * 2, true);\n            context.fillStyle = drawings.linearGradient(context, options.colorNeedleCircleOuterStart, options.colorNeedleCircleOuterEnd, r1);\n            context.fill();\n            context.restore();\n            context.closePath();\n        }\n\n        if (options.needleCircleInner) {\n            context.beginPath();\n            context.arc(0, 0, r2, 0, PI * 2, true);\n            context.fillStyle = drawings.linearGradient(context, options.colorNeedleCircleInnerStart, options.colorNeedleCircleInnerEnd, r2);\n            context.fill();\n            context.closePath();\n        }\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge value box\n *\n * @param {Canvas2DContext} context\n * @param {GaugeOptions} options\n * @param {number} value\n */\nfunction drawValueBox(context, options, value) {\n    if (!options.valueText) return;\n\n    var max = context.max;\n    var text = drawings.padValue(value, options);\n    var y = max - max * .33;\n    var x = 0;\n\n    context.save();\n    context.font = 40 * (max / 200) + 'px ' + options.fontValue;\n    context.save();\n\n    if (options.valueBox) {\n        var th = 0.12 * max;\n        var tw = context.measureText('-' + drawings.padValue(0, options)).width;\n\n        drawings.roundRect(context, -tw / 2 - 0.025 * max, y - th - 0.04 * max, tw + 0.05 * max, th + 0.07 * max, 0.025 * max);\n    }\n\n    var gy = y - 0.12 * max - 0.025 * max + (0.12 * max + 0.045 * max) / 2;\n    var grd = context.createRadialGradient(x, gy, max / 10, x, gy, max / 5);\n\n    grd.addColorStop(0, options.colorValueBoxRectStart);\n    grd.addColorStop(1, options.colorValueBoxRectEnd);\n\n    context.strokeStyle = grd;\n    context.lineWidth = 0.05 * max;\n    context.stroke();\n\n    context.shadowBlur = 0.012 * max;\n    context.shadowColor = options.colorValueBoxShadow;\n\n    context.fillStyle = options.colorValueBoxBackground;\n    context.fill();\n\n    context.restore();\n\n    context.shadowOffsetX = 0.004 * max;\n    context.shadowOffsetY = 0.004 * max;\n    context.shadowBlur = 0.012 * max;\n    context.shadowColor = options.colorValueTextShadow;\n\n    context.fillStyle = options.colorValueText;\n    context.textAlign = 'center';\n    context.fillText(text, -x, y);\n\n    context.restore();\n}\n\n/**\n * Minimalistic HTML5 Canvas Gauge\n * @example\n *  var gauge = new Gauge({\n *     renderTo: 'gauge-id', // identifier of HTML canvas element or element itself\n *     width: 400,\n *     height: 400,\n *     units: 'Km/h',\n *     title: false,\n *     value: 0,\n *     minValue: 0,\n *     maxValue: 220,\n *     majorTicks: [\n *         '0','20','40','60','80','100','120','140','160','180','200','220'\n *     ],\n *     minorTicks: 2,\n *     strokeTicks: false,\n *     highlights: [\n *         { from: 0, to: 50, color: 'rgba(0,255,0,.15)' },\n *         { from: 50, to: 100, color: 'rgba(255,255,0,.15)' },\n *         { from: 100, to: 150, color: 'rgba(255,30,0,.25)' },\n *         { from: 150, to: 200, color: 'rgba(255,0,225,.25)' },\n *         { from: 200, to: 220, color: 'rgba(0,0,255,.25)' }\n *     ],\n *     colorPlate: '#222',\n *     colorMajorTicks: '#f5f5f5',\n *     colorMinorTicks: '#ddd',\n *     colorTitle: '#fff',\n *     colorUnits: '#ccc',\n *     colorNumbers: '#eee',\n *     colorNeedleStart: 'rgba(240, 128, 128, 1)',\n *     colorNeedleEnd: 'rgba(255, 160, 122, .9)',\n *     valueBox: true,\n *     animationRule: 'bounce'\n * });\n * // draw initially\n * gauge.draw();\n * // animate\n * setInterval(() => {\n *    gauge.value = Math.random() * -220 + 220;\n * }, 1000);\n */\n\nvar Gauge = function (_BaseGauge) {\n    _inherits(Gauge, _BaseGauge);\n\n    /**\n     * @constructor\n     * @param {GaugeOptions} options\n     */\n    function Gauge(options) {\n        _classCallCheck(this, Gauge);\n\n        options = Object.assign({}, defaultGaugeOptions, options || {});\n\n        /* istanbul ignore if */\n        if (isNaN(options.startAngle)) options.startAngle = 45;\n        /* istanbul ignore if */\n        if (isNaN(options.ticksAngle)) options.ticksAngle = 270;\n\n        /* istanbul ignore if */\n        if (options.ticksAngle > 360) options.ticksAngle = 360;\n        /* istanbul ignore if */\n        if (options.ticksAngle < 0) options.ticksAngle = 0;\n\n        /* istanbul ignore if */\n        if (options.startAngle < 0) options.startAngle = 0;\n        /* istanbul ignore if */\n        if (options.startAngle > 360) options.startAngle = 360;\n\n        return _possibleConstructorReturn(this, Object.getPrototypeOf(Gauge).call(this, options));\n    }\n\n    /*  */\n    /**\n     * Triggering gauge render on a canvas.\n     *\n     * @returns {Gauge}\n     */\n\n\n    _createClass(Gauge, [{\n        key: 'draw',\n        value: function draw() {\n            var canvas = this.canvas;\n            var x = -canvas.drawX;\n            var y = -canvas.drawY;\n            var w = canvas.drawWidth;\n            var h = canvas.drawHeight;\n\n            var options = this.options;\n\n            if (!canvas.elementClone.initialized) {\n                var context = canvas.contextClone;\n\n                // clear the cache\n                context.clearRect(x, y, w, h);\n                context.save();\n\n                drawPlate(context, options);\n                drawHighlights(context, options);\n                drawMinorTicks(context, options);\n                drawMajorTicks(context, options);\n                drawNumbers(context, options);\n                drawTitle(context, options);\n                drawUnits(context, options);\n\n                canvas.elementClone.initialized = true;\n            }\n\n            this.canvas.commit();\n\n            // clear the canvas\n            canvas.context.clearRect(x, y, w, h);\n            canvas.context.save();\n\n            canvas.context.drawImage(canvas.elementClone, x, y, w, h);\n            canvas.context.save();\n\n            drawValueBox(canvas.context, options, this.value);\n            drawNeedle(canvas.context, options);\n\n            return this;\n        }\n    }]);\n\n    return Gauge;\n}(BaseGauge);\n\nwindow['Gauge'] = Gauge;\n\nBaseGauge.initialize('Gauge', defaultGaugeOptions);\n\n/*!\n * @license\n * Minimalistic HTML5 Canvas Gauge implementation\n *\n * This code is subject to MIT license.\n *\n * Copyright (c) 2012 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/**\n * Linear gauge configuration options\n *\n * @typedef {GenericOptions|{orientation: string, borderRadius: number, barBeginCircle: number, barWidth: number, barStrokeWidth: number, barProgress: boolean, colorBar: string, colorBarEnd: string, colorBarStroke: string, colorBarProgress: string, colorBarProgressEnd: string, tickSide: string, needleSide: string, numberSide: string}} LinearGaugeOptions\n */\n\nvar round = Math.round;\nvar abs = Math.abs;\n\n/**\n * Default linear gauge configuration options\n *\n * @type {LinearGaugeOptions}\n */\nvar defaultLinearGaugeOptions = Object.assign({}, GenericOptions, {\n    // basic options\n    borderRadius: 0,\n    width: 150,\n    height: 400,\n\n    // bar\n    barBeginCircle: 30, // percents\n    barWidth: 20, // percents\n    barStrokeWidth: 0, // pixels\n    barProgress: true,\n\n    colorBarStroke: '#222',\n    colorBar: '#ccc',\n    colorBarEnd: '',\n    colorBarProgress: '#888',\n    colorBarProgressEnd: '',\n\n    needleWidth: 6,\n\n    tickSide: 'both', // available: 'left', 'right', 'both'\n    needleSide: 'both', // available: 'left', 'right', 'both'\n\n    numberSide: 'both' // available: 'left', 'right', 'both'\n});\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws rectangle on a canvas\n *\n * @param {Canvas2DContext} context\n * @param {number} r radius for founded corner rectangle if 0 or less won't be drawn\n * @param {number} x x-coordinate of the top-left corner\n * @param {number} y y-coordinate of the top-left corner\n * @param {number} w width of the rectangle\n * @param {number} h height of the rectangle\n * @param {string} colorStart base fill color of the rectangle\n * @param {string} [colorEnd] gradient color of the rectangle\n */\nfunction drawRectangle(context, r, x, y, w, h, colorStart, colorEnd) {\n    context.beginPath();\n    context.fillStyle = colorEnd ? drawings.linearGradient(context, colorStart, colorEnd, w > h ? w : h) : colorStart;\n\n    r > 0 ? drawings.roundRect(context, x, y, w, h, r) : context.rect(x, y, w, h);\n\n    context.fill();\n    context.closePath();\n    context.save();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Calculates and returns linear gauge base bar dimensions.\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions|{barStrokeWidth: number, barBeginCircle: number, barWidth: number}} options\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @return {{isVertical: boolean, width: number, length: number, barWidth: number, barLength: number, strokeWidth: number, barMargin: number, radius: number, x0: number, y0: number, barOffset: number, titleMargin: number, unitsMargin: number, X: number, Y: number}}\n */\nfunction barDimensions(context, options, x, y, w, h) {\n    var pixelRatio = SmartCanvas.pixelRatio;\n    var isVertical = h >= w;\n    var width = isVertical ? w * .85 : h;\n    var length = isVertical ? h : w;\n\n    x = isVertical ? round(x + (w - width) / 2) : x;\n\n    var hasTitle = !!options.title;\n    var hasUnits = !!options.units;\n\n    var titleMargin = void 0;\n    var unitsMargin = void 0;\n\n    if (isVertical) {\n        unitsMargin = titleMargin = round(length * .1);\n\n        if (hasTitle) {\n            length -= titleMargin;\n            y += titleMargin;\n        }\n\n        if (hasUnits) length -= unitsMargin;\n    } else {\n        unitsMargin = titleMargin = round(width * .15);\n\n        if (hasTitle) {\n            width -= titleMargin;\n            y += titleMargin;\n        }\n\n        if (hasUnits) width -= unitsMargin;\n    }\n\n    var strokeWidth = options.barStrokeWidth * 2;\n    var radius = options.barBeginCircle ? round(width * options.barBeginCircle / 200 - strokeWidth / 2) : 0;\n\n    var barWidth = round(width * options.barWidth / 100 - strokeWidth);\n    var barLength = round(length * .85 - strokeWidth);\n    var barMargin = round((length - barLength) / 2);\n\n    // coordinates for arc of the bar if configured\n    var x0 = round(x + (isVertical ? width / 2 : barMargin + radius));\n    var y0 = round(y + (isVertical ? length - barMargin - radius + strokeWidth / 2 : width / 2));\n\n    //noinspection JSUndefinedPropertyAssignment\n    context.barDimensions = {\n        isVertical: isVertical,\n        width: width,\n        length: length,\n        barWidth: barWidth,\n        barLength: barLength,\n        strokeWidth: strokeWidth,\n        barMargin: barMargin,\n        radius: radius,\n        pixelRatio: pixelRatio,\n        barOffset: null,\n        titleMargin: hasTitle ? titleMargin : 0,\n        unitsMargin: hasUnits ? unitsMargin : 0,\n        get ticksLength() {\n            return this.barLength - this.barOffset - this.strokeWidth;\n        },\n        X: x,\n        Y: y,\n        x0: x0,\n        y0: y0\n    };\n\n    return context.barDimensions;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws bar shape from the given options on a given canvas context\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {number} barOpWidth\n * @param {number} barStrokeWidth\n * @param {string} strokeColor\n * @param {number} circleRadius\n * @param {string} colorStart\n * @param {string} colorEnd\n * @param {number|boolean} toValue\n * @param {number} minValue\n * @param {number} maxValue\n * @param {string} title\n * @param {string} units\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n */\nfunction drawLinearBarShape(context, barOpWidth, barStrokeWidth, strokeColor, circleRadius, colorStart, colorEnd, toValue, minValue, maxValue, title, units, x, y, w, h) {\n    var _barDimensions = barDimensions(context, {\n        barStrokeWidth: barStrokeWidth,\n        barBeginCircle: circleRadius,\n        barWidth: barOpWidth,\n        title: title,\n        units: units\n    }, x, y, w, h);\n\n    var isVertical = _barDimensions.isVertical;\n    var width = _barDimensions.width;\n    var barWidth = _barDimensions.barWidth;\n    var barLength = _barDimensions.barLength;\n    var strokeWidth = _barDimensions.strokeWidth;\n    var barMargin = _barDimensions.barMargin;\n    var radius = _barDimensions.radius;\n    var x0 = _barDimensions.x0;\n    var y0 = _barDimensions.y0;\n    var X = _barDimensions.X;\n    var Y = _barDimensions.Y;\n\n\n    context.save();\n    context.beginPath();\n\n    if (circleRadius) {\n        var direction = drawings.radians(isVertical ? 270 : 0);\n        var alpha = Math.asin(barWidth / 2 / radius);\n        var cosAlpha = Math.cos(alpha);\n        var sinAlpha = Math.sin(alpha);\n\n        var x1 = x0 + (isVertical ? radius * sinAlpha : radius * cosAlpha - strokeWidth / 2);\n        var y1 = isVertical ? y0 - radius * cosAlpha : y0 + radius * sinAlpha;\n        var cutRadius = isVertical ? abs(y1 - y0) : abs(x1 - x0);\n        // let radiusOffset = round(radius - cutRadius);\n        //\n        // if (isVertical) {\n        //     y0 -= radiusOffset;\n        //     y1 -= radiusOffset;\n        // }\n        //\n        // else {\n        //     x0 -= radiusOffset;\n        //     x1 -= radiusOffset;\n        // }\n        // barLength -= radiusOffset;\n\n        context.barDimensions.barOffset = round(cutRadius + radius);\n\n        // bottom point\n        var x2 = isVertical ? round(x0 - radius * sinAlpha) : x1;\n        var y2 = isVertical ? y1 : round(y0 - radius * sinAlpha);\n\n        if (toValue !== false) {\n            barLength = context.barDimensions.barOffset + (barLength - context.barDimensions.barOffset) * (toValue / (maxValue - minValue));\n        }\n\n        // bar ends at\n        var x3 = round(x1 + barLength - context.barDimensions.barOffset + strokeWidth / 2); // h\n        var y3 = round(y1 - barLength + context.barDimensions.barOffset - strokeWidth / 2); // v\n\n        context.arc(x0, y0, radius, direction + alpha, direction - alpha);\n\n        if (isVertical) {\n            context.moveTo(x1, y2);\n            context.lineTo(x1, y3);\n            context.lineTo(x2, y3);\n            context.lineTo(x2, y2);\n        } else {\n            context.moveTo(x1, y2);\n            context.lineTo(x3, y2);\n            context.lineTo(x3, y1);\n            context.lineTo(x1, y1);\n        }\n    } else {\n        // simply rectangle\n        var rx = round(isVertical ? X + (width - barWidth) / 2 : X + barMargin);\n        var ry = round(isVertical ? Y + barLength + barMargin : Y + (width - barWidth) / 2);\n\n        if (toValue !== false) {\n            barLength *= toValue / (maxValue - minValue);\n        }\n\n        if (isVertical) context.rect(rx, ry, barWidth, -barLength);else context.rect(rx, ry, barLength, barWidth);\n    }\n\n    if (barStrokeWidth) {\n        context.lineWidth = strokeWidth;\n        context.strokeStyle = strokeColor;\n        //context.lineJoin = 'round';\n        context.stroke();\n    }\n\n    if (colorStart) {\n        context.fillStyle = colorEnd ? drawings.linearGradient(context, colorStart, colorEnd, barLength) : colorStart;\n        context.fill();\n    }\n\n    context.closePath();\n\n    // fix dimensions for further usage\n    if (circleRadius) context.barDimensions.radius += strokeWidth;\n\n    context.barDimensions.barWidth += strokeWidth;\n    context.barDimensions.barLength += strokeWidth;\n}\n\n/**\n * Draws gauge bar\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n * @param {number} x x-coordinate of the top-left corner of the gauge\n * @param {number} y y-coordinate of the top-left corner of the gauge\n * @param {number} w width of the gauge\n * @param {number} h height of the gauge\n */\nfunction drawLinearBar(context, options, x, y, w, h) {\n    drawLinearBarShape(context, options.barWidth, options.barStrokeWidth, options.colorBarStroke, options.barBeginCircle, options.colorBar, options.colorBarEnd, false, options.minValue, options.maxValue, options.title, options.units, x, y, w, h);\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge bar progress\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n * @param {number} x x-coordinate of the top-left corner of the gauge\n * @param {number} y y-coordinate of the top-left corner of the gauge\n * @param {number} w width of the gauge\n * @param {number} h height of the gauge\n */\nfunction drawLinearBarProgress(context, options, x, y, w, h) {\n    options.barProgress && drawLinearBarShape(context, options.barWidth, options.barStrokeWidth, 'rgba(0,0,0,0)', options.barBeginCircle, options.colorBarProgress, options.colorBarProgressEnd, options.value, options.minValue, options.maxValue, options.title, options.units, x, y, w, h);\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge bar highlighted areas\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n */\nfunction drawLinearBarHighlights(context, options) {\n    var _context$barDimension = context.barDimensions;\n    var isVertical = _context$barDimension.isVertical;\n    var width = _context$barDimension.width;\n    var length = _context$barDimension.length;\n    var barWidth = _context$barDimension.barWidth;\n    var barOffset = _context$barDimension.barOffset;\n    var barMargin = _context$barDimension.barMargin;\n    var X = _context$barDimension.X;\n    var Y = _context$barDimension.Y;\n    var ticksLength = _context$barDimension.ticksLength;\n\n\n    if (!options.highlights) return;\n\n    var hasLeft = options.tickSide !== 'right';\n    var hasRight = options.tickSide !== 'left';\n    var i = 0;\n    var s = options.highlights.length;\n    var tickOffset = (width - barWidth) / 2;\n    var interval = options.maxValue - options.minValue;\n    var eX = round(isVertical ? X + tickOffset : X + barMargin + barOffset);\n    var eH = .1 * width;\n    var eY = isVertical ? Y + length - barMargin - barOffset : Y + tickOffset;\n    var hLeft = round(.15 * width);\n    var hRight = round(barWidth + .05 * width);\n\n    context.save();\n\n    for (; i < s; i++) {\n        var entry = options.highlights[i];\n        var eW = ticksLength * abs((entry.to - entry.from) / interval);\n\n        context.beginPath();\n        context.fillStyle = entry.color;\n\n        if (isVertical) {\n            if (hasLeft) context.rect(eX - hLeft, eY, eH, -eW);\n\n            if (hasRight) context.rect(eX + hRight, eY, eH, -eW);\n\n            eY -= eW;\n        } else {\n            if (hasLeft) context.rect(eX, eY - hLeft, eW, eH);\n\n            if (hasRight) context.rect(eX, eY + hRight, eW, eH);\n\n            eX += eW;\n        }\n\n        context.fill();\n        context.closePath();\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws a tick line on a linear gauge\n *\n * @param {Canvas2DContext} context\n * @param x1\n * @param y1\n * @param x2\n * @param y2\n */\nfunction drawLinearTick(context, x1, y1, x2, y2) {\n    context.beginPath();\n\n    context.moveTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.stroke();\n\n    context.closePath();\n    context.save();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws ticks\n *\n * @param {Canvas2DContext} context\n * @param {string} color\n * @param {number} ticksSize\n * @param {number} deltaLen\n * @param {boolean} hasLeft\n * @param {boolean} hasRight\n * @param {number} lineWidth\n * @param {number} lineLength\n */\nfunction drawLinearTicks(context, color, ticksSize, deltaLen, hasLeft, hasRight, lineWidth, lineLength) {\n    var _context$barDimension2 = context.barDimensions;\n    var isVertical = _context$barDimension2.isVertical;\n    var length = _context$barDimension2.length;\n    var barWidth = _context$barDimension2.barWidth;\n    var barOffset = _context$barDimension2.barOffset;\n    var barMargin = _context$barDimension2.barMargin;\n    var pixelRatio = _context$barDimension2.pixelRatio;\n    var width = _context$barDimension2.width;\n    var X = _context$barDimension2.X;\n    var Y = _context$barDimension2.Y;\n    var ticksLength = _context$barDimension2.ticksLength;\n\n    var tickOffset = (width - barWidth) / 2;\n    var tickX = void 0,\n        tickY = void 0;\n    var i = 0;\n    var tickLen = lineLength * width;\n    var tickLeft = tickOffset - .05 * width;\n    var tickRight = tickOffset + barWidth + tickLen + .05 * width;\n    var tickSpace = ticksLength / (ticksSize - deltaLen);\n\n    context.lineWidth = lineWidth * pixelRatio;\n    context.strokeStyle = color;\n    context.save();\n\n    for (; i < ticksSize; i++) {\n        if (isVertical) {\n            tickY = Y + length - barMargin - barOffset - i * tickSpace;\n\n            if (hasLeft) {\n                tickX = X + tickLeft;\n                drawLinearTick(context, tickX, tickY, round(tickX - tickLen), tickY);\n            }\n\n            if (hasRight) {\n                tickX = X + tickRight;\n                drawLinearTick(context, tickX, tickY, round(tickX - tickLen), tickY);\n            }\n        } else {\n            tickX = X + barMargin + barOffset + i * tickSpace;\n\n            if (hasLeft) {\n                tickY = Y + tickLeft;\n                drawLinearTick(context, tickX, tickY, tickX, round(tickY - tickLen));\n            }\n\n            if (hasRight) {\n                tickY = Y + tickRight;\n                drawLinearTick(context, tickX, round(tickY), tickX, tickY - tickLen);\n            }\n        }\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Prepares major ticks data\n *\n * @access private\n * @param {LinearGaugeOptions} options\n * @return {[boolean, boolean]}\n */\nfunction prepareTicks(options) {\n    if (!options.majorTicks.length) {\n        options.majorTicks.push(drawings.formatMajorTickNumber(options.minValue, options));\n        options.majorTicks.push(drawings.formatMajorTickNumber(options.maxValue, options));\n    }\n\n    return [options.tickSide !== 'right', options.tickSide !== 'left'];\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws major ticks\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n */\nfunction drawLinearMajorTicks(context, options) {\n    var _prepareTicks = prepareTicks(options);\n\n    var _prepareTicks2 = _slicedToArray(_prepareTicks, 2);\n\n    var hasLeft = _prepareTicks2[0];\n    var hasRight = _prepareTicks2[1];\n\n    var lineWidth = 2;\n\n    drawLinearTicks(context, options.colorMajorTicks, options.majorTicks.length, 1, hasLeft, hasRight, lineWidth, .1);\n\n    if (options.strokeTicks) {\n        var _context$barDimension3 = context.barDimensions;\n        var isVertical = _context$barDimension3.isVertical;\n        var length = _context$barDimension3.length;\n        var _width = _context$barDimension3.width;\n        var barWidth = _context$barDimension3.barWidth;\n        var barMargin = _context$barDimension3.barMargin;\n        var barOffset = _context$barDimension3.barOffset;\n        var X = _context$barDimension3.X;\n        var Y = _context$barDimension3.Y;\n        var ticksLength = _context$barDimension3.ticksLength;\n        var pixelRatio = _context$barDimension3.pixelRatio;\n\n        var rightTicks = (_width - barWidth) / 2 + barWidth + .05 * _width;\n        var leftTicks = (_width - barWidth) / 2 - .05 * _width;\n        var sX = void 0,\n            sY = void 0,\n            eX = void 0,\n            eY = void 0;\n\n        lineWidth *= pixelRatio;\n\n        if (isVertical) {\n            sY = Y + length - barMargin - barOffset + lineWidth / 2;\n            eY = sY - ticksLength - lineWidth;\n\n            if (hasLeft) {\n                eX = sX = round(X + leftTicks);\n                drawLinearTickStroke(context, sX, sY, eX, eY);\n            }\n\n            if (hasRight) {\n                eX = sX = round(X + rightTicks);\n                drawLinearTickStroke(context, sX, sY, eX, eY);\n            }\n        } else {\n            sX = X + barMargin + barOffset - lineWidth / 2;\n            eX = sX + ticksLength + lineWidth;\n\n            if (hasLeft) {\n                eY = sY = round(Y + leftTicks);\n                drawLinearTickStroke(context, sX, sY, eX, eY);\n            }\n\n            if (hasRight) {\n                eY = sY = round(Y + rightTicks);\n                drawLinearTickStroke(context, sX, sY, eX, eY);\n            }\n        }\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws ticks stroke\n *\n * @param {Canvas2DContext} context\n * @param {number} sX\n * @param {number} sY\n * @param {number} eX\n * @param {number} eY\n */\nfunction drawLinearTickStroke(context, sX, sY, eX, eY) {\n    context.beginPath();\n    context.moveTo(sX, sY);\n    context.lineTo(eX, eY);\n    context.stroke();\n    context.closePath();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws minor ticks\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n */\nfunction drawLinearMinorTicks(context, options) {\n    var _prepareTicks3 = prepareTicks(options);\n\n    var _prepareTicks4 = _slicedToArray(_prepareTicks3, 2);\n\n    var hasLeft = _prepareTicks4[0];\n    var hasRight = _prepareTicks4[1];\n\n\n    drawLinearTicks(context, options.colorMajorTicks, options.minorTicks * (options.majorTicks.length - 1), 0, hasLeft, hasRight, 1, .05);\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws major tick numbers\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n */\nfunction drawLinearMajorTicksNumbers(context, options) {\n    var _context$barDimension4 = context.barDimensions;\n    var isVertical = _context$barDimension4.isVertical;\n    var length = _context$barDimension4.length;\n    var width = _context$barDimension4.width;\n    var barWidth = _context$barDimension4.barWidth;\n    var barMargin = _context$barDimension4.barMargin;\n    var barOffset = _context$barDimension4.barOffset;\n    var X = _context$barDimension4.X;\n    var Y = _context$barDimension4.Y;\n    var ticksLength = _context$barDimension4.ticksLength;\n\n    var ticks = options.majorTicks.length;\n    var hasLeft = options.numberSide !== 'right';\n    var hasRight = options.numberSide !== 'left';\n    var textHeight = 20 * width / 200;\n    var i = 0;\n    var numLeft = (width - barWidth) / 2 - .2 * width;\n    var numRight = (width - barWidth) / 2 + barWidth + .2 * width;\n    var textX = void 0,\n        textY = void 0,\n        textWidth = void 0,\n        numberOffset = void 0,\n        tick = void 0;\n\n    context.font = textHeight + 'px ' + options.fontNumbers;\n    context.fillStyle = options.colorNumbers;\n    context.lineWidth = 0;\n    context.textAlign = 'center';\n\n    for (; i < ticks; i++) {\n        tick = options.majorTicks[i];\n        numberOffset = i * ticksLength / (ticks - 1);\n\n        if (isVertical) {\n            textY = Y + length - barMargin - barOffset - numberOffset + textHeight / 3;\n\n            if (hasLeft) {\n                context.textAlign = 'right';\n                context.fillText(tick, X + numLeft, textY);\n            }\n\n            if (hasRight) {\n                context.textAlign = 'left';\n                context.fillText(tick, X + numRight, textY);\n            }\n        } else {\n            textWidth = context.measureText(tick).width;\n            textX = X + barMargin + barOffset + numberOffset;\n\n            if (hasLeft) {\n                context.fillText(tick, textX, Y + numLeft);\n            }\n\n            if (hasRight) {\n                context.fillText(tick, textX, Y + numRight + textHeight);\n            }\n        }\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws linear gauge title\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n */\nfunction drawLinearTitle(context, options) {\n    if (!options.title) return;\n\n    var _context$barDimension5 = context.barDimensions;\n    var isVertical = _context$barDimension5.isVertical;\n    var width = _context$barDimension5.width;\n    var length = _context$barDimension5.length;\n    var X = _context$barDimension5.X;\n    var Y = _context$barDimension5.Y;\n    var titleMargin = _context$barDimension5.titleMargin;\n\n    var textHeight = .125 * width;\n    var textX = round(X + (isVertical ? width : length) / 2);\n    var textY = round(Y + titleMargin / 2 - (isVertical ? textHeight : textHeight / 2) - .025 * (isVertical ? length : width));\n\n    context.save();\n    context.textAlign = 'center';\n    context.fillStyle = options.colorTitle;\n    context.font = textHeight + 'px ' + options.fontTitle;\n    context.lineWidth = 0;\n    context.fillText(options.title, textX, textY, isVertical ? width : length);\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws linear gauge units\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n */\nfunction drawLinearUnits(context, options) {\n    if (!options.units) return;\n\n    var _context$barDimension6 = context.barDimensions;\n    var isVertical = _context$barDimension6.isVertical;\n    var width = _context$barDimension6.width;\n    var length = _context$barDimension6.length;\n    var X = _context$barDimension6.X;\n    var Y = _context$barDimension6.Y;\n    var unitsMargin = _context$barDimension6.unitsMargin;\n\n    var textHeight = .125 * width;\n    var textX = round(X + (isVertical ? width : length) / 2);\n    var textY = round(Y + (isVertical ? length : width) + unitsMargin / 2 - textHeight / 2 - .025 * (isVertical ? length : width));\n\n    context.save();\n    context.textAlign = 'center';\n    context.fillStyle = options.colorTitle;\n    context.font = textHeight + 'px ' + options.fontUnits;\n    context.lineWidth = 0;\n    context.fillText(options.units, textX, textY, isVertical ? width : length);\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws linear gauge needles\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n */\nfunction drawLinearBarNeedle(context, options) {\n    if (!options.needle) return;\n\n    var _context$barDimension7 = context.barDimensions;\n    var isVertical = _context$barDimension7.isVertical;\n    var width = _context$barDimension7.width;\n    var length = _context$barDimension7.length;\n    var barWidth = _context$barDimension7.barWidth;\n    var barOffset = _context$barDimension7.barOffset;\n    var barMargin = _context$barDimension7.barMargin;\n    var ticksLength = _context$barDimension7.ticksLength;\n    var X = _context$barDimension7.X;\n    var Y = _context$barDimension7.Y;\n\n    var hasLeft = options.needleSide !== 'right';\n    var hasRight = options.needleSide !== 'left';\n    var position = ticksLength * options.value / (options.maxValue - options.minValue);\n    var tickWidth = .15 * width;\n    var baseLength = barWidth / 2 + tickWidth;\n    var needleLength = baseLength * (options.needleEnd / 100);\n    var sX = void 0,\n        eX = void 0,\n        sY = void 0,\n        eY = void 0;\n    var draw = options.needleType.toLowerCase() === 'arrow' ? drawLinearArrowNeedle : drawLinearLineNeedle;\n    var barStart = (width - barWidth) / 2;\n    var needleStart = baseLength * (options.needleStart / 100);\n    var nLeft = barStart - tickWidth - needleStart;\n    var nRight = barStart + barWidth + tickWidth + needleStart;\n\n    drawings.drawNeedleShadow(context, options);\n\n    context.save();\n\n    if (isVertical) {\n        sY = round(Y + length - barMargin - barOffset - position);\n\n        if (hasLeft) {\n            sX = round(X + nLeft);\n            eX = sX + needleLength;\n            draw(context, options, sX, sY, eX, sY, needleLength);\n        }\n\n        if (hasRight) {\n            sX = round(X + nRight);\n            eX = sX - needleLength;\n            draw(context, options, sX, sY, eX, sY, needleLength);\n        }\n    } else {\n        sX = round(X + barMargin + barOffset + position);\n\n        if (hasLeft) {\n            sY = round(Y + nLeft);\n            eY = sY + needleLength;\n            draw(context, options, sX, sY, sX, eY, needleLength);\n        }\n\n        if (hasRight) {\n            sY = round(Y + nRight);\n            eY = sY - needleLength;\n            draw(context, options, sX, sY, sX, eY, needleLength);\n        }\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws line needle shape\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n * @param {number} sX\n * @param {number} sY\n * @param {number} eX\n * @param {number} eY\n * @param {number} length\n */\nfunction drawLinearLineNeedle(context, options, sX, sY, eX, eY, length) {\n    context.lineWidth = width;\n    context.strokeStyle = options.colorNeedleEnd ? drawings.linearGradient(context, options.colorNeedleStart, options.colorNeedleEnd, length) : options.colorNeedleStart;\n\n    context.beginPath();\n    context.moveTo(sX, sY);\n    context.lineTo(eX, eY);\n    context.stroke();\n    context.closePath();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws arrow needle shape\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n * @param {number} sX\n * @param {number} sY\n * @param {number} eX\n * @param {number} eY\n * @param {number} length\n */\nfunction drawLinearArrowNeedle(context, options, sX, sY, eX, eY, length) {\n    var peakLength = round(length * .4);\n    var bodyLength = length - peakLength;\n    var isVertical = sX === eX;\n    var halfWidth = options.needleWidth / 2;\n\n    context.fillStyle = options.colorNeedleEnd ? drawings.linearGradient(context, options.colorNeedleStart, options.colorNeedleEnd, length) : options.colorNeedleStart;\n\n    context.beginPath();\n\n    if (isVertical) {\n        if (sY > eY) bodyLength *= -1;\n\n        context.moveTo(sX - halfWidth, sY);\n        context.lineTo(sX + halfWidth, sY);\n        context.lineTo(sX + halfWidth, sY + bodyLength);\n        context.lineTo(sX, eY);\n        context.lineTo(sX - halfWidth, sY + bodyLength);\n        context.lineTo(sX - halfWidth, sY);\n    } else {\n        if (sX > eX) bodyLength *= -1;\n\n        context.moveTo(sX, sY - halfWidth);\n        context.lineTo(sX, sY + halfWidth);\n        context.lineTo(sX + bodyLength, sY + halfWidth);\n        context.lineTo(eX, sY);\n        context.lineTo(sX + bodyLength, sY - halfWidth);\n        context.lineTo(sX, sY - halfWidth);\n    }\n\n    context.fill();\n    context.closePath();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws value box for linear gauge\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n */\nfunction drawLinearValueBox(context, options, x, y, w, h) {}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws linear gauge plate\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n */\nfunction drawLinearPlate(context, options, x, y, w, h) {\n    context.save();\n\n    var r = options.borderRadius;\n\n    var w1 = w - options.borderShadowWidth;\n    var w2 = w1 - options.borderOuterWidth * 2;\n    var w3 = w2 - options.borderMiddleWidth * 2;\n    var w4 = w3 - options.borderInnerWidth * 2;\n\n    var h1 = h - options.borderShadowWidth * 2;\n    var h2 = h1 - options.borderOuterWidth * 2;\n    var h3 = h2 - options.borderMiddleWidth * 2;\n    var h4 = h3 - options.borderInnerWidth * 2;\n\n    var x2 = x - (w2 - w1) / 2;\n    var x3 = x2 - (w3 - w2) / 2;\n    var x4 = x3 - (w4 - w3) / 2;\n\n    var y2 = y - (h2 - h1) / 2;\n    var y3 = y2 - (h3 - h2) / 2;\n    var y4 = y3 - (h4 - h3) / 2;\n\n    if (options.glow) {\n        context.shadowBlur = options.borderShadowWidth;\n        context.shadowColor = options.colorBorderShadow;\n    }\n\n    if (options.borderOuterWidth) {\n        drawRectangle(context, r, x, y, w1, h1, options.colorBorderOuterStart, options.colorBorderOuterEnd);\n    }\n\n    context.shadowBlur = null;\n    //noinspection JSValidateTypes\n    context.shadowColor = null;\n\n    if (options.borderMiddleWidth) {\n        drawRectangle(context, --r, x2, y2, w2, h2, options.colorBorderMiddleStart, options.colorBorderMiddleEnd);\n    }\n\n    if (options.borderInnerWidth) {\n        drawRectangle(context, --r, x3, y3, w3, h3, options.colorBorderInnerStart, options.colorBorderInnerEnd);\n    }\n\n    drawRectangle(context, r, x4, y4, w4, h4, options.colorPlate);\n\n    return [x4, y4, w4, h4];\n}\n\n/**\n * Minimalistic HTML5 Canvas Linear Gauge\n */\n\nvar LinearGauge = function (_BaseGauge2) {\n    _inherits(LinearGauge, _BaseGauge2);\n\n    /**\n     * @constructor\n     * @param {LinearGaugeOptions} options\n     */\n    function LinearGauge(options) {\n        _classCallCheck(this, LinearGauge);\n\n        /* istanbul ignore else */\n        if (!options.width) options.width = defaultLinearGaugeOptions.width;\n        /* istanbul ignore else */\n        if (!options.height) options.height = defaultLinearGaugeOptions.height;\n\n        /* istanbul ignore else */\n        if (!options.orientation) {\n            options.orientation = options.width > options.height ? 'horizontal' : 'vertical';\n        }\n\n        options = Object.assign({}, defaultLinearGaugeOptions, options || {});\n\n        /* istanbul ignore else */\n        if (options.barStrokeWidth >= options.barWidth) {\n            options.barStrokeWidth = round(options.barWidth / 2);\n        }\n\n        return _possibleConstructorReturn(this, Object.getPrototypeOf(LinearGauge).call(this, options));\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Triggering linear gauge render on a canvas.\n     *\n     * @returns {LinearGauge}\n     */\n\n\n    _createClass(LinearGauge, [{\n        key: 'draw',\n        value: function draw() {\n            var canvas = this.canvas;\n            var x = -canvas.drawX;\n            var y = -canvas.drawY;\n            var w = canvas.drawWidth;\n            var h = canvas.drawHeight;\n\n            var options = this.options;\n\n            if (!canvas.elementClone.initialized) {\n                var context = canvas.contextClone;\n\n                // clear the cache\n                context.clearRect(x, y, w, h);\n                context.save();\n\n                this.drawBox = drawLinearPlate(context, options, x, y, w, h);\n\n                drawLinearBar.apply(undefined, [context, options].concat(_toConsumableArray(this.drawBox)));\n\n                canvas.context.barDimensions = context.barDimensions;\n\n                drawLinearBarHighlights(context, options);\n                drawLinearMinorTicks(context, options);\n                drawLinearMajorTicks(context, options);\n                drawLinearMajorTicksNumbers(context, options);\n                drawLinearTitle(context, options);\n                drawLinearUnits(context, options);\n\n                canvas.elementClone.initialized = true;\n            }\n\n            this.canvas.commit();\n\n            // clear the canvas\n            canvas.context.clearRect(x, y, w, h);\n            canvas.context.save();\n\n            canvas.context.drawImage(canvas.elementClone, x, y, w, h);\n            canvas.context.save();\n\n            drawLinearBarProgress.apply(undefined, [canvas.context, options].concat(_toConsumableArray(this.drawBox)));\n            drawLinearBarNeedle(canvas.context, options);\n            drawLinearValueBox.apply(undefined, [canvas.context, options].concat(_toConsumableArray(this.drawBox)));\n\n            return this;\n        }\n    }]);\n\n    return LinearGauge;\n}(BaseGauge);\n\nwindow['LinearGauge'] = LinearGauge;\n\nBaseGauge.initialize('LinearGauge', defaultLinearGaugeOptions);}());"],"sourceRoot":"/source/"}