{"version":3,"sources":["gauge.min.js"],"names":["_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","TypeError","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_classCallCheck","instance","Constructor","vendorize","prop","from","window","global","vendors","i","s","length","capitalized","charAt","toUpperCase","substr","vendorProp","step","time","draw","start","rule","duration","end","anim","progress","percent","frame","requestAnimationFrame","Collection","Array","apply","this","arguments","formatMajorTickNumber","num","options","right","hasDec","majorTicksDec","Math","round","toString","toFixed","majorTicksInt","indexOf","join","replace","radians","degrees","PI","radialPoint","radius","angle","x","sin","y","cos","linearGradient","context","colorFrom","colorTo","grad","createLinearGradient","addColorStop","padValue","val","dec","valueDec","int","valueInt","strVal","n","parseFloat","abs","split","drawCircle","beginPath","arc","fillStyle","fill","closePath","maxRadius","max","borderShadowWidth","borderOuterWidth","borderMiddleWidth","borderInnerWidth","drawPlate","d0","r0","r1","r2","r3","save","glow","shadowBlur","shadowColor","colorBorderShadow","colorBorderOuterStart","colorBorderOuterEnd","colorBorderMiddleStart","colorBorderMiddleEnd","colorBorderInnerStart","colorBorderInnerEnd","restore","colorPlate","drawHighlights","highlights","hlt","vd","maxValue","minValue","ticksAngle","sa","startAngle","ea","to","ps","pe","ps1","pe1","rotate","moveTo","lineTo","color","drawMinorTicks","lineWidth","SmartCanvas","pixelRatio","strokeStyle","colorMinorTicks","minorTicks","majorTicks","stroke","drawMajorTicks","r","colorMajorTicks","numberOfDefaultTicks","tickSize","push","a","strokeTicks","drawNumbers","points","point","font","colorNumbers","textAlign","fillText","drawTitle","title","colorTitle","drawUnits","units","colorUnits","drawNeedleShadow","needleShadow","shadowOffsetX","shadowOffsetY","colorNeedleShadowDown","drawNeedle","needle","needleCircleSize","rIn","needleEnd","rStart","needleStart","rOut","pad1","needleWidth","pad2","needleType","colorNeedleStart","colorNeedleEnd","colorNeedleShadowUp","needleCircleOuter","colorNeedleCircleOuterStart","colorNeedleCircleOuterEnd","needleCircleInner","colorNeedleCircleInnerStart","colorNeedleCircleInnerEnd","roundRect","w","h","quadraticCurveTo","drawValueBox","valueText","text","valueBox","th","tw","measureText","width","grd","createRadialGradient","colorValueBoxRectStart","colorValueBoxRectEnd","colorValueBoxShadow","colorValueBoxBackground","colorValueTextShadow","colorValueText","_createClass","defineProperties","target","props","descriptor","defineProperty","key","protoProps","staticProps","assign","firstSource","undefined","nextSource","keysArray","keys","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","searchElement","fromIndex","k","O","Infinity","callback","setTimeout","Date","getTime","rules","linear","p","quad","pow","dequad","quint","dequint","cycle","acos","decycle","bounce","debounce","b","elastic","delastic","Animation","_this","performance","now","cancelAnimationFrame","id","DomObserver","element","Type","_this2","toLowerCase","type","toDashed","domReady","traverse","MutationObserver","observe","bind","document","body","childList","subtree","attributes","characterData","attributeOldValue","characterDataOldValue","node","tagName","getAttribute","elements","getElementsByTagName","isValidNode","process","records","record","attributeName","oldValue","addedNodes","ii","ss","JSON","parse","stringify","hasOwnProperty","toAttributeName","attributeValue","renderTo","test","e","camelCase","arr","str","handler","addEventListener","attachEvent","canvas","height","collection","init","style","elementClone","cloneNode","getContext","contextClone","drawWidth","drawHeight","drawX","drawY","minSide","initialized","translate","index","splice","onRedraw","scale","redraw","get","devicePixelRatio","matchMedia","addListener","GenericOptions","updateValueOnAnimation","animation","animationDuration","animationRule","getElementById","gaugesCollection","BaseGauge","className","name","typeName","destroy","set","_this3","fromValue","_value","animate","defaultGaugeOptions","Gauge","_BaseGauge","isNaN","getPrototypeOf","clearRect","commit","drawImage","initialize","defaultLinearGaugeOptions","orientation","LinearGauge","_BaseGauge2"],"mappings":"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","file":"gauge.min.js","sourcesContent":["(function() {'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @external {Object.assign} https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n */\n/* istanbul ignore next */\nif (!Object.assign) {\n    Object.defineProperty(Object, 'assign', {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function value(target, firstSource) {\n            'use strict';\n\n            if (target === undefined || target === null) {\n                throw new TypeError('Cannot convert first argument to object');\n            }\n\n            var to = Object(target);\n            var i = 1;\n\n            for (; i < arguments.length; i++) {\n                var nextSource = arguments[i];\n\n                if (nextSource === undefined || nextSource === null) {\n                    continue;\n                }\n\n                var keysArray = Object.keys(Object(nextSource));\n                var nextIndex = 0,\n                    len = keysArray.length;\n\n                for (; nextIndex < len; nextIndex++) {\n                    var nextKey = keysArray[nextIndex];\n                    var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n\n                    if (desc !== undefined && desc.enumerable) {\n                        to[nextKey] = nextSource[nextKey];\n                    }\n                }\n            }\n\n            return to;\n        }\n    });\n}\n\n/**\n * @external {Array.indexOf} https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf\n */\n/* istanbul ignore next */\nif (!Array.prototype.indexOf) {\n    Array.prototype.indexOf = function (searchElement, fromIndex) {\n        var k;\n\n        if (this == null) {\n            throw new TypeError('\"this\" is null or not defined');\n        }\n\n        var O = Object(this);\n        var len = O.length >>> 0;\n\n        if (len === 0) {\n            return -1;\n        }\n\n        var n = +fromIndex || 0;\n\n        if (Math.abs(n) === Infinity) {\n            n = 0;\n        }\n\n        if (n >= len) {\n            return -1;\n        }\n\n        k = Math.max(n >= 0 ? n : len - Math.abs(n), 0);\n\n        while (k < len) {\n            if (k in O && O[k] === searchElement) {\n                return k;\n            }\n\n            k++;\n        }\n\n        return -1;\n    };\n}\n\n/*!\n * @license\n * Minimalistic HTML5 Canvas Gauge implementation\n *\n * This code is subject to MIT license.\n *\n * Copyright (c) 2012 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n/**\n * Look-ups for a proper vendor-specific property and returns its value\n *\n * @example\n * var requestAnimationFrame = vendorize('requestAnimationFrame');\n * // it will refer properly to:\n * //  - window.requestAnimationFrame by default or to\n * //  - window.webkitRequestAnimationFrame or to\n * //  - window.mozRequestAnimationFrame or to\n * //  - window.msRequestAnimationFrame or to\n * //  - window.oRequestAnimationFrame\n * // depending on the current browser vendor\n *\n * @author Mykhailo Stadnyk <mikhus@gmail.com>\n * @param {string} prop\n * @param {HTMLElement|Window|object} [from] - default is window\n * @returns {*}\n */\nfunction vendorize(prop, from) {\n    /* istanbul ignore else: no reason to cover */\n    if (!from) {\n        from = typeof window === 'undefined' ? global : window;\n    }\n\n    if (typeof from[prop] !== 'undefined') {\n        return from[prop];\n    }\n\n    var vendors = ['webkit', 'moz', 'ms', 'o'];\n    var i = 0;\n    var s = vendors.length;\n    var capitalized = prop.charAt(0).toUpperCase() + prop.substr(1);\n\n    for (; i < s; i++) {\n        var vendorProp = from[vendors[i] + capitalized];\n\n        /* istanbul ignore if: requires very complex environment to test (specific browser version) */\n        if (typeof vendorProp !== 'undefined') {\n            return vendorProp;\n        }\n    }\n\n    return null;\n}\n\n/*!\n * @license\n * Minimalistic HTML5 Canvas Gauge implementation\n *\n * This code is subject to MIT license.\n *\n * Copyright (c) 2012 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/* istanbul ignore next */\n/**\n * @type {function(callback: function(time: number): number, element?: HTMLElement)}\n * @access private\n */\nvar requestAnimationFrame = vendorize('requestAnimationFrame') || function (callback) {\n    return setTimeout(function () {\n        return callback(new Date().getTime());\n    }, 1000 / 60);\n};\n\n/**\n * Generic AnimationRule function interface\n *\n * @typedef {function(percent: number): number} AnimationRule\n */\n\n/**\n * Callback for animation step draw event.\n * It will be called each time animation step is executed, bypassing\n * as first argument a percent of animation completeness. It is expected\n * that this callback will do an actual work of animating an elements or\n * whatever, as far as animation engine is just calculating and executing\n * animation steps without any knowledge about things under animation.\n *\n * @typedef {function(percent: number): *} DrawEventCallback\n */\n\n/**\n * Callback for animation complete event.\n * It is called once each animation is complete.\n *\n * @typedef {function(): *} EndEventCallback\n */\n\n/**\n * Predefined known animation rules.\n * It's a simple collection of math for some most used animations.\n *\n * @typedef {{linear: AnimationRule, quad: AnimationRule, dequad: AnimationRule, quint: AnimationRule, dequint: AnimationRule, cycle: AnimationRule, decycle: AnimationRule, bounce: AnimationRule, debounce: AnimationRule, elastic: AnimationRule, delastic: AnimationRule}} AnimationRules\n */\n\n/* istanbul ignore next: no reason covering this */\nvar rules = {\n    linear: function linear(p) {\n        return p;\n    },\n    quad: function quad(p) {\n        return Math.pow(p, 2);\n    },\n    dequad: function dequad(p) {\n        return 1 - rules.quad(1 - p);\n    },\n    quint: function quint(p) {\n        return Math.pow(p, 5);\n    },\n    dequint: function dequint(p) {\n        return 1 - Math.pow(1 - p, 5);\n    },\n    cycle: function cycle(p) {\n        return 1 - Math.sin(Math.acos(p));\n    },\n    decycle: function decycle(p) {\n        return Math.sin(Math.acos(1 - p));\n    },\n    bounce: function bounce(p) {\n        return 1 - rules.debounce(1 - p);\n    },\n    debounce: function debounce(p) {\n        var a = 0,\n            b = 1;\n        for (; 1; a += b, b /= 2) {\n            if (p >= (7 - 4 * a) / 11) {\n                return -Math.pow((11 - 6 * a - 11 * p) / 4, 2) + Math.pow(b, 2);\n            }\n        }\n    },\n    elastic: function elastic(p) {\n        return 1 - rules.delastic(1 - p);\n    },\n    delastic: function delastic(p) {\n        var x = 1.5;\n        return Math.pow(2, 10 * (p - 1)) * Math.cos(20 * Math.PI * x / 3 * p);\n    }\n};\n\n/* istanbul ignore next: private, not testable */\n/**\n * Evaluates animation step and decides if the next step required or\n * stops animation calling a proper events.\n *\n * @access private\n * @param {number} time\n * @param {DrawEventCallback} draw\n * @param {number} start\n * @param {AnimationRule} rule\n * @param {number} duration\n * @param {EndEventCallback} end\n * @param {Animation} anim\n */\nfunction step(time, draw, start, rule, duration, end, anim) {\n    if (typeof rule !== 'function') {\n        throw new TypeError('Invalid animation rule:', rule);\n    }\n\n    var progress = time - start;\n    var percent = progress / duration;\n\n    if (percent > 1) {\n        percent = 1;\n    }\n\n    draw && draw(percent === 1 ? percent : rule(percent));\n\n    if (progress < duration) {\n        anim.frame = requestAnimationFrame(function (time) {\n            return step(time, draw, start, rule, duration, end, anim);\n        });\n    } else {\n        end && end();\n    }\n}\n\n/**\n * Animation engine API for JavaScript-based animations.\n * This is simply an animation core framework which simplifies creation\n * of various animations for generic purposes.\n *\n * @example\n * // create 'linear' animation engine, 500ms duration\n * let linear = new Animation('linear', 500);\n *\n * // create 'elastic' animation engine\n * let elastic = new Animation('elastic');\n *\n * // define animation behavior\n * let bounced = new Animation('bounce', 500, percent => {\n *     let value = parseInt(percent * 100, 10);\n *\n *     $('div.bounced').css({\n *         width: value + '%',\n *         height: value + '%'\n *     });\n * });\n *\n * // execute animation\n * bounced.animate();\n *\n * // execute animation and handle when its finished\n * bounced.animate(null, () => {\n *    console.log('Animation finished!');\n * });\n */\n\nvar Animation = function () {\n\n    /**\n     * @constructor\n     * @param {string|AnimationRule} rule\n     * @param {number} duration\n     * @param {DrawEventCallback} [draw]\n     * @param {EndEventCallback} [end]\n     */\n    function Animation() {\n        var rule = arguments.length <= 0 || arguments[0] === undefined ? 'linear' : arguments[0];\n        var duration = arguments.length <= 1 || arguments[1] === undefined ? 250 : arguments[1];\n        var draw = arguments.length <= 2 || arguments[2] === undefined ? function () {} : arguments[2];\n        var end = arguments.length <= 3 || arguments[3] === undefined ? function () {} : arguments[3];\n\n        _classCallCheck(this, Animation);\n\n        /**\n         * Overall animation duration in milliseconds.\n         * By default is equal to 250 ms.\n         *\n         * @type {number}\n         */\n        this.duration = duration;\n\n        /**\n         * Animation rule. By default is linear animation.\n         * Animation rule is a subject to animation rules, which are\n         * a simple object containing math-based methods for calculating\n         * animation steps.\n         *\n         * @type {string|AnimationRule}\n         */\n        this.rule = rule;\n\n        /**\n         * Callback function for the animation step draw event.\n         *\n         * @type {DrawEventCallback}\n         */\n        this.draw = draw;\n\n        /**\n         * Callback for the animation complete event.\n         *\n         * @type {EndEventCallback}\n         */\n        this.end = end;\n\n        if (typeof this.draw !== 'function') {\n            throw new TypeError('Invalid animation draw callback:', draw);\n        }\n\n        if (typeof this.end !== 'function') {\n            throw new TypeError('Invalid animation end callback:', end);\n        }\n    }\n\n    /* istanbul ignore next: non-testable */\n    /**\n     * Performs animation calling each animation step draw callback and\n     * end callback at the end of animation. Callbacks are optional to this\n     * method call. If them are not bypassed will be used that ones which\n     * was pre-set on constructing an Animation object or pre-set after\n     * construction.\n     *\n     * @example\n     * function draw(percent) {\n     *     $('.my-animated-divs').css({\n     *         width: parseInt(percent * 100, 10) + '%'\n     *     });\n     * }\n     * function done() {\n     *     console.log('Animation complete!');\n     * }\n     *\n     * // Define 'draw' and 'end' callbacks on construction\n     * var animation = new Animation('cycle', 500, draw, done);\n     * animation.animate();\n     *\n     * // Define 'draw' and 'end' callbacks after construction\n     * var animation = new Animation('cycle', 500);\n     * animation.draw = draw;\n     * animation.end = done;\n     * animation.animate();\n     *\n     * // Define 'draw' and 'end' callbacks at animation\n     * var animation = new Animation('cycle', 500);\n     * animation.animate(draw, done);\n     *\n     * @param {DrawEventCallback} [draw]\n     * @param {EndEventCallback} [end]\n     */\n\n\n    _createClass(Animation, [{\n        key: 'animate',\n        value: function animate(draw, end) {\n            var _this = this;\n\n            //noinspection JSUnresolvedVariable\n            var start = vendorize('animationStartTime') || window.performance && window.performance.now ? window.performance.now() : Date.now();\n\n            draw = draw || this.draw;\n            end = end || this.end;\n\n            /**\n             * Current requested animation frame identifier\n             *\n             * @type {number}\n             */\n            this.frame = requestAnimationFrame(function (time) {\n                return step(time, draw, start, rules[_this.rule] || _this.rule, _this.duration, end, _this);\n            });\n        }\n\n        /**\n         * Destroys this object properly\n         */\n\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            if (this.frame) {\n                var cancelAnimationFrame = vendorize('cancelAnimationFrame') ||\n                /* istanbul ignore next */\n                function (id) {};\n\n                cancelAnimationFrame(this.frame);\n                this.frame = null;\n            }\n\n            this.draw = null;\n            this.end = null;\n        }\n    }]);\n\n    return Animation;\n}();\n\n/**\n * Animation rules bound statically to Animation constructor.\n *\n * @type {AnimationRules}\n * @static\n */\n\n\nAnimation.rules = rules;\n\n/*!\n * @license\n * Minimalistic HTML5 Canvas Gauge implementation\n *\n * This code is subject to MIT license.\n *\n * Copyright (c) 2012 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n/**\n * @typedef {{ constructor: function(options: object): GaugeInterface, draw: function(): GaugeInterface }} GaugeInterface\n */\n\n/**\n * DOM Observer.\n * It will observe DOM document for a configured element types and\n * instantiate associated Types for an existing or newly added DOM elements\n *\n * @example\n * class ProgressBar {\n *     constructor(options) {}\n *     draw() {}\n * }\n *\n * // It will observe DOM document for elements <div>\n * // having attribute 'data-type=\"progress\"'\n * // and instantiate for each new instance of ProgressBar\n *\n * new DomParser({color: 'red'}, 'div', 'progress', ProgressBar);\n *\n * // assume we could have HTML like this\n * // <div data-type=\"progress\" color=\"blue\"></div>\n * // in this case all matching attributes names for a given options will be\n * // parsed and bypassed to an instance from HTML attributes\n */\n\nvar DomObserver = function () {\n\n    /**\n     * @constructor\n     * @param {object} options\n     * @param {string} element\n     * @param {string} Type\n     */\n    function DomObserver(options, element, Type) {\n        var _this2 = this;\n\n        _classCallCheck(this, DomObserver);\n\n        //noinspection JSUnresolvedVariable\n        /**\n         * Default instantiation options for the given Type\n         *\n         * @type {Object}\n         */\n        this.options = options;\n\n        /**\n         * Name of an element to lookup/observe\n         *\n         * @type {string}\n         */\n        this.element = element.toLowerCase();\n\n        /**\n         * data-type attribute value to lookup\n         *\n         * @type {string}\n         */\n        this.type = DomObserver.toDashed(Type);\n\n        /**\n         * Actual type constructor to instantiate for each found element\n         *\n         * @type {Function}\n         */\n        this.Type = window[Type];\n\n        /* istanbul ignore next: this should be tested with end-to-end tests */\n        DomObserver.domReady(function () {\n            _this2.traverse();\n\n            if (window.MutationObserver) {\n                //noinspection JSCheckFunctionSignatures\n                new MutationObserver(_this2.observe.bind(_this2)).observe(document.body, {\n                    childList: true,\n                    subtree: true,\n                    attributes: true,\n                    characterData: true,\n                    attributeOldValue: true,\n                    characterDataOldValue: true\n                });\n            }\n        });\n    }\n\n    /**\n     * Checks if given node is valid node to process\n     *\n     * @param {Node|HTMLElement} node\n     * @returns {boolean}\n     */\n\n\n    _createClass(DomObserver, [{\n        key: 'isValidNode',\n        value: function isValidNode(node) {\n            return !!(node.tagName && node.tagName.toLowerCase() === this.element && node.getAttribute('data-type') === this.type);\n        }\n\n        /**\n         * Traverse entire current DOM tree and process matching nodes.\n         * Usually it should be called only once on document initialization.\n         */\n\n    }, {\n        key: 'traverse',\n        value: function traverse() {\n            var elements = document.getElementsByTagName(this.element);\n            var i = 0,\n                s = elements.length;\n\n            /* istanbul ignore next: this should be tested with end-to-end tests */\n            for (; i < s; i++) {\n                var node = elements[i];\n\n                if (this.isValidNode(node)) {\n                    this.process(node);\n                }\n            }\n        }\n\n        /**\n         * Observes given mutation records for an elements to process\n         *\n         * @param {MutationRecord[]} records\n         */\n\n    }, {\n        key: 'observe',\n        value: function observe(records) {\n            var i = 0;\n            var s = records.length;\n\n            /* istanbul ignore next: this should be tested with end-to-end tests */\n            for (; i < s; i++) {\n                var record = records[i];\n\n                if (record.type === 'attributes' && record.attributeName === 'data-type' && this.isValidNode(record.target) && record.oldValue !== this.type) // skip false-positive mutations\n                    {\n                        this.process(record.target);\n                    } else if (record.addedNodes && record.addedNodes.length) {\n                    var ii = 0;\n                    var ss = record.addedNodes.length;\n\n                    for (; ii < ss; ii++) {\n                        var node = record.addedNodes[ii];\n\n                        if (this.isValidNode(node)) {\n                            this.process(node);\n                        }\n                    }\n                }\n            }\n        }\n\n        /**\n         * Parses given attribute value to a proper JavaScript value.\n         * For example it will parse some stringified value to a proper type\n         * value, e.g. 'true' => true, 'null' => null, '{\"prop\": 20}' => {prop: 20}\n         *\n         * @param {*} value\n         * @return {*}\n         */\n\n    }, {\n        key: 'process',\n\n\n        /**\n         * Processes a given node, instantiating a proper type constructor for it\n         *\n         * @param {Node|HTMLElement} node\n         * @returns {GaugeInterface}\n         */\n        value: function process(node) {\n            var prop = void 0;\n            var options = JSON.parse(JSON.stringify(this.options));\n\n            for (prop in options) {\n                /* istanbul ignore else: non-testable in most cases */\n                if (options.hasOwnProperty(prop)) {\n                    var attributeName = DomObserver.toAttributeName(prop);\n                    var attributeValue = DomObserver.parse(node.getAttribute(attributeName));\n\n                    if (attributeValue !== null && attributeValue !== undefined) {\n                        options[prop] = attributeValue;\n                    }\n                }\n            }\n\n            options.renderTo = node;\n\n            return new this.Type(options).draw();\n        }\n\n        /**\n         * Transforms camelCase string to dashed string\n         *\n         * @static\n         * @param {string} camelCase\n         * @return {string}\n         */\n\n    }], [{\n        key: 'parse',\n        value: function parse(value) {\n            // parse boolean\n            if (value === 'true') return true;\n            if (value === 'false') return false;\n\n            // parse undefined\n            if (value === 'undefined') return undefined;\n\n            // parse null\n            if (value === 'null') return null;\n\n            // Comma-separated strings to array parsing.\n            // It won't match strings which contains non alphanum characters to\n            // prevent strings like 'rgba(0,0,0,0)' or JSON-like from being parsed.\n            // Typically it simply allows easily declare arrays as comma-separated\n            // numbers or plain strings. If something more complicated is\n            // required it can be declared using JSON format syntax\n            if (/^[\\w\\d\\s]+(?:,[\\w\\d\\s]+)+$/.test(value)) {\n                return value.split(',');\n            }\n\n            // parse JSON\n            try {\n                return JSON.parse(value);\n            } catch (e) {}\n\n            // plain value - no need to parse\n            return value;\n        }\n    }, {\n        key: 'toDashed',\n        value: function toDashed(camelCase) {\n            var arr = camelCase.split(/(?=[A-Z])/);\n            var i = 1;\n            var s = arr.length;\n            var str = arr[0].toLowerCase();\n\n            for (; i < s; i++) {\n                str += '-' + arr[i].toLowerCase();\n            }\n\n            return str;\n        }\n\n        /**\n         * Transforms camel case property name to dash separated attribute name\n         *\n         * @static\n         * @param {string} str\n         * @returns {string}\n         */\n\n    }, {\n        key: 'toAttributeName',\n        value: function toAttributeName(str) {\n            return 'data-' + DomObserver.toDashed(str);\n        }\n\n        /**\n         * Cross-browser DOM ready handler\n         *\n         * @static\n         * @param {Function} handler\n         */\n\n    }, {\n        key: 'domReady',\n        value: function domReady(handler) {\n            if (window.addEventListener) {\n                window.addEventListener('DOMContentLoaded', handler, false);\n            } else {\n                window.attachEvent('onload', handler);\n            }\n        }\n    }]);\n\n    return DomObserver;\n}();\n\n/*!\n * @license\n * Minimalistic HTML5 Canvas Gauge implementation\n *\n * This code is subject to MIT license.\n *\n * Copyright (c) 2012 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n/**\n * Drawings on canvas using hidden canvas as a cache for better\n * performance drawings during canvas animations. SmartCanvas also\n * adopts a canvas to\n */\n\n\nvar SmartCanvas = function () {\n\n    /**\n     * @constructor\n     * @param {HTMLCanvasElement} canvas\n     * @param {number} width\n     * @param {number} height\n     */\n    function SmartCanvas(canvas, width, height) {\n        _classCallCheck(this, SmartCanvas);\n\n        SmartCanvas.collection.push(this);\n\n        /**\n         * Canvas base width\n         *\n         * @type {number}\n         */\n        this.width = width || 0;\n\n        /**\n         * Canvas base height\n         *\n         * @type {number}\n         */\n        this.height = height || 0;\n\n        /**\n         * Target drawings canvas element\n         *\n         * @type {HTMLCanvasElement}\n         */\n        this.element = canvas;\n\n        this.init();\n    }\n\n    /**\n     * Initializes canvases and contexts\n     */\n\n\n    _createClass(SmartCanvas, [{\n        key: 'init',\n        value: function init() {\n            var pixelRatio = SmartCanvas.pixelRatio;\n\n            this.element.width = this.width * pixelRatio;\n            this.element.height = this.height * pixelRatio;\n\n            this.element.style.width = this.width + 'px';\n            this.element.style.height = this.height + 'px';\n\n            /**\n             * Canvas caching element\n             *\n             * @type {HTMLCanvasElement|Node}\n             */\n            this.elementClone = this.element.cloneNode(true);\n\n            //noinspection JSUnresolvedVariable\n            /**\n             * Target drawings canvas element 2D context\n             *\n             * @type {CanvasRenderingContext2D}\n             */\n            this.context = this.element.getContext('2d');\n\n            /**\n             * Canvas caching element 2D context\n             *\n             * @type {CanvasRenderingContext2D}\n             */\n            this.contextClone = this.elementClone.getContext('2d');\n\n            /**\n             * Actual drawings width\n             *\n             * @type {number}\n             */\n            this.drawWidth = this.element.width;\n\n            /**\n             * Actual drawings height\n             *\n             * @type {number}\n             */\n            this.drawHeight = this.element.height;\n\n            /**\n             * X-coordinate of drawings zero point\n             *\n             * @type {number}\n             */\n            this.drawX = this.drawWidth / 2;\n\n            /**\n             * Y-coordinate of drawings zero point\n             *\n             * @type {number}\n             */\n            this.drawY = this.drawHeight / 2;\n\n            /**\n             * Minimal side length in pixels of the drawing\n             *\n             * @type {number}\n             */\n            this.minSide = this.drawX < this.drawY ? this.drawX : this.drawY;\n\n            this.elementClone.initialized = false;\n\n            this.contextClone.translate(this.drawX, this.drawY);\n            this.contextClone.save();\n\n            this.context.translate(this.drawX, this.drawY);\n            this.context.save();\n\n            this.context.max = this.contextClone.max = this.minSide;\n            this.context.maxRadius = this.contextClone.maxRadius = null;\n        }\n\n        /**\n         * Destroys this object, removing the references from memory\n         */\n\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            var index = SmartCanvas.collection.indexOf(this);\n\n            /* istanbul ignore else */\n            if (~index) {\n                SmartCanvas.collection.splice(index, 1);\n            }\n\n            // derefecence all created elements\n            this.context.max = null;\n            delete this.context.max;\n\n            this.context.maxRadius = null;\n            delete this.context.maxRadius;\n\n            this.context = null;\n            this.contextClone = null;\n            this.elementClone = null;\n            this.element = null;\n\n            /**\n             * On canvas redraw event callback\n             *\n             * @type {function|null|undefined}\n             */\n            this.onRedraw = null;\n        }\n\n        /**\n         * Commits the drawings\n         */\n\n    }, {\n        key: 'commit',\n        value: function commit() {\n            var scale = SmartCanvas.pixelRatio;\n\n            if (scale !== 1) {\n                this.contextClone.scale(scale, scale);\n                this.contextClone.save();\n            }\n\n            return this;\n        }\n\n        /**\n         * Redraw this object\n         */\n\n    }, {\n        key: 'redraw',\n        value: function redraw() {\n            this.init();\n\n            /**\n             * On canvas redraw event callback\n             *\n             * @type {function(): *}\n             */\n            this.onRedraw && this.onRedraw();\n\n            return this;\n        }\n\n        /**\n         * Returns current device pixel ratio\n         *\n         * @returns {number}\n         */\n\n    }], [{\n        key: 'redraw',\n\n\n        /**\n         * Forces redraw all canvas in the current collection\n         */\n        value: function redraw() {\n            var i = 0;\n            var s = SmartCanvas.collection.length;\n\n            for (; i < s; i++) {\n                SmartCanvas.collection[i].redraw();\n            }\n        }\n    }, {\n        key: 'pixelRatio',\n        get: function get() {\n            /* istanbul ignore next */\n            //noinspection JSUnresolvedVariable\n            return window.devicePixelRatio || 1;\n        }\n    }]);\n\n    return SmartCanvas;\n}();\n\nSmartCanvas.collection = [];\n\n/* istanbul ignore next: very browser-specific testing required to cover */\n//noinspection JSUnresolvedVariable\nif (window.matchMedia) {\n    //noinspection JSUnresolvedFunction\n    window.matchMedia('screen and (min-resolution: 2dppx)').addListener(SmartCanvas.redraw);\n}\n\n/*!\n * @license\n * Minimalistic HTML5 Canvas Gauge implementation\n *\n * This code is subject to MIT license.\n *\n * Copyright (c) 2012 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/**\n * Describes rendering target element. Can be either string identifier of\n * the element or the element itself.\n *\n * @typedef {HTMLElement|string} RenderTarget\n */\n\n/**\n * Highlight area definition.\n * It describes highlight area starting from value to value using\n * color. Color can be describes with hex, rgb or rgba value.\n *\n * @typedef {{ from: number, to: number, color: string}} Highlight\n */\n\n/**\n *\n * @type {{renderTo: RenderTarget, width: number, height: number, minValue: number, maxValue: number, value: number, units: string|boolean, majorTicks: number[]|string[], minorTicks: number, strokeTicks: boolean, updateValueOnAnimation: boolean, glow: boolean, title: string|boolean, valueInt: number, valueDec: number, majorTicksInt: number, majorTicksDec: number, animation: boolean, animationDuration: number, animationRule: string|AnimationRule, colorPlate: string, colorMajorTicks: string, colorMinorTicks: string, colorTitle: string, colorUnits: string, colorNumbers: string, colorNeedleStart: string, colorNeedleEnd: string, colorValueText: string, colorValueTextShadow: string, colorBorderShadow: string, colorBorderOuterStart: string, colorBorderOuterEnd: string, colorBorderMiddleStart: string, colorBorderMiddleEnd: string, colorBorderInnerStart: string, colorBorderInnerEnd: string, needle: boolean, needleShadow: boolean, needleType: string, borderOuterWidth: number, borderMiddleWidth: number, borderInnerWidth: number, borderShadowWidth: number, valueBox: boolean, valueText: string|boolean, highlights: Highlight[]}} GenericOptions\n */\nvar GenericOptions = {\n    // basic options\n    renderTo: null,\n    width: 200,\n    height: 200,\n    minValue: 0,\n    maxValue: 100,\n    value: 0,\n    units: false,\n    majorTicks: [0, 20, 40, 60, 80, 100],\n    minorTicks: 10,\n    strokeTicks: true,\n    updateValueOnAnimation: false,\n    glow: true,\n    title: false,\n\n    // number formats\n    valueInt: 3,\n    valueDec: 2,\n    majorTicksInt: 1,\n    majorTicksDec: 0,\n\n    // animations\n    animation: true,\n    animationDuration: 250,\n    animationRule: 'cycle',\n\n    // colors\n    colorPlate: '#fff',\n    colorMajorTicks: '#444',\n    colorMinorTicks: '#666',\n    colorTitle: '#888',\n    colorUnits: '#888',\n    colorNumbers: '#444',\n    colorNeedleStart: 'rgba(240,128,128,1)',\n    colorNeedleEnd: 'rgba(255,160,122,.9)',\n    colorValueText: '#444',\n    colorValueTextShadow: 'rgba(0,0,0,0.3)',\n    colorBorderShadow: 'rgba(0,0,0,0.5)',\n    colorBorderOuterStart: '#ddd',\n    colorBorderOuterEnd: '#aaa',\n    colorBorderMiddleStart: '#eee',\n    colorBorderMiddleEnd: '#f0f0f0',\n    colorBorderInnerStart: '#fafafa',\n    colorBorderInnerEnd: '#ccc',\n\n    // needle\n    needle: true,\n    needleShadow: true,\n    needleType: 'arrow',\n\n    // borders\n    borderOuterWidth: 3,\n    borderMiddleWidth: 3,\n    borderInnerWidth: 3,\n    borderShadowWidth: 3,\n\n    // value and highlights\n    valueBox: true,\n    valueText: true,\n    highlights: [{ from: 20, to: 60, color: '#eee' }, { from: 60, to: 80, color: '#ccc' }, { from: 80, to: 100, color: '#999' }]\n};\n\nGenericOptions;\n\n/*!\n * @license\n * Minimalistic HTML5 Canvas Gauge implementation\n *\n * This code is subject to MIT license.\n *\n * Copyright (c) 2012 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/**\n * Gauge collections type.\n *\n * It is used ES5 declaration here, because babel\n * transpiles inheritance incorrectly in this case.\n *\n * @class Collection\n * @constructor\n */\nfunction Collection() {\n    Array.prototype.constructor.apply(this, arguments);\n}\n\nCollection.prototype = Object.create(Array.prototype);\nCollection.prototype.constructor = Collection;\n\n/**\n * Returns gauge object by its identifier or index in the collection\n *\n * @param {string|number} id\n * @return {*}\n */\nCollection.prototype.get = function (id) {\n    if (typeof id === 'string') {\n        var i = 0;\n        var s = this.length;\n\n        for (; i < s; i++) {\n            var canvas = this[i].options.renderTo.tagName ? this[i].options.renderTo :\n            /* istanbul ignore next: should be tested with e2e tests */\n            document.getElementById(this[i].options.renderTo || '');\n\n            if (canvas.getAttribute('id') === id) {\n                return this[i];\n            }\n        }\n    } else if (typeof id === 'number') {\n        return this[id];\n    }\n\n    return null;\n};\n\nvar gaugesCollection = new Collection();\n\n/**\n * Basic abstract BaseGauge class implementing common functionality\n * for different type of gauges.\n *\n * It should not be instantiated directly but must be extended by a final\n * gauge implementation.\n *\n * @abstract\n * @example\n *\n * class MyCoolGauge extends BaseGauge {\n *\n *     // theses methods below MUST be implemented:\n *\n *     constructor(options) {\n *        // ... do something with options\n *        super(options);\n *        // ... implement anything else\n *     }\n *\n *     draw() {\n *         // ... some implementation here\n *         return this;\n *     }\n * }\n */\n\nvar BaseGauge = function () {\n\n    /**\n     * @constructor\n     * @abstract\n     * @param {GenericOptions} options\n     */\n    function BaseGauge(options) {\n        _classCallCheck(this, BaseGauge);\n\n        var className = this.constructor.name;\n\n        if (className === 'BaseGauge') {\n            throw new TypeError('Attempt to instantiate abstract class!');\n        }\n\n        gaugesCollection.push(this);\n\n        /**\n         * Gauge type name\n         *\n         * @type {string} typeName\n         */\n        this.typeName = className;\n\n        /**\n         * Gauge type class\n         *\n         * @type {BaseGauge} type\n         */\n        this.type = window[className];\n\n        options.minValue = parseFloat(options.minValue);\n        options.maxValue = parseFloat(options.maxValue);\n\n        /**\n         * Gauge options\n         *\n         * @type {GenericOptions} options\n         */\n        this.options = options || {};\n\n        if (!options.renderTo) {\n            throw TypeError('Canvas element was not specified when creating ' + 'the Gauge object!');\n        }\n\n        var canvas = options.renderTo.tagName ? options.renderTo :\n        /* istanbul ignore next: to be tested with e2e tests */\n        document.getElementById(options.renderTo);\n\n        /**\n         * @type {SmartCanvas} canvas\n         */\n        this.canvas = new SmartCanvas(canvas, options.width, options.height);\n        this.canvas.onRedraw = this.draw.bind(this);\n\n        /**\n         * @type {Animation} animation\n         */\n        this.animation = new Animation(options.animationRule, options.animationDuration);\n    }\n\n    /**\n     * Sets new value for this gauge.\n     * If gauge is animated by configuration it will trigger a proper animation.\n     * Upsetting a value triggers gauge redraw.\n     *\n     * @param {number} value\n     */\n\n\n    _createClass(BaseGauge, [{\n        key: 'update',\n\n\n        /**\n         * Updates gauge configuration options at runtime and redraws the gauge\n         *\n         * @param {GaugeOptions} options\n         * @returns {BaseGauge}\n         */\n        value: function update(options) {\n            Object.assign(this.options, options || {});\n\n            this.canvas.width = this.options.width;\n            this.canvas.height = this.options.height;\n\n            this.animation.rule = this.options.animationRule;\n            this.animation.duration = this.options.animationDuration;\n\n            this.canvas.redraw();\n\n            return this;\n        }\n\n        /**\n         * Performs destruction of this object properly\n         */\n\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            var index = gaugesCollection.indexOf(this);\n\n            /* istanbul ignore else */\n            if (~index) {\n                //noinspection JSUnresolvedFunction\n                gaugesCollection.splice(index, 1);\n            }\n\n            this.canvas.destroy();\n            this.canvas = null;\n\n            this.animation.destroy();\n            this.animation = null;\n        }\n\n        /**\n         * Triggering gauge render on a canvas.\n         *\n         * @abstract\n         * @returns {BaseGauge}\n         */\n\n    }, {\n        key: 'draw',\n        value: function draw() {\n            throw new TypeError('draw() must be implemented by a child class!');\n        }\n\n        /**\n         * Collection of the gauges on a page.\n         * The collection is singleton collection of the gauges spread\n         * across all gauge types.\n         *\n         * @return {Collection}\n         */\n\n    }, {\n        key: 'value',\n        set: function set(value) {\n            var _this3 = this;\n\n            if (value === this.options.value) return;\n\n            if (this.options.animation) {\n                (function () {\n                    var fromValue = _this3.options.value;\n\n                    /**\n                     * @type {number}\n                     * @access private\n                     */\n                    _this3._value = value;\n\n                    _this3.animation.animate(function (percent) {\n                        _this3.options.value = fromValue + (value - fromValue) * percent;\n\n                        _this3.draw();\n                    }, function () {\n                        _this3.options.value = value;\n                        delete _this3._value;\n                        _this3.draw();\n                    });\n                })();\n            } else {\n                this.options.value = value;\n                this.draw();\n            }\n        }\n\n        /**\n         * Returns current value of the gauge\n         *\n         * @return {number}\n         */\n        ,\n        get: function get() {\n            return typeof this._value === 'undefined' ? this.options.value : this._value;\n        }\n    }], [{\n        key: 'initialize',\n\n\n        /**\n         * Inject given gauge object into DOM\n         *\n         * @param {string} Type\n         * @param {GenericOptions} options\n         */\n        value: function initialize(Type, options) {\n            new DomObserver(options, 'canvas', Type);\n        }\n    }, {\n        key: 'collection',\n        get: function get() {\n            return gaugesCollection;\n        }\n    }]);\n\n    return BaseGauge;\n}();\n\nwindow['BaseGauge'] = BaseGauge;\n\n/*!\n * @license\n * Minimalistic HTML5 Canvas Gauge implementation\n *\n * This code is subject to MIT license.\n *\n * Copyright (c) 2012 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n// todo: customizable fonts\n// todo: readme and documentation update\n// todo: github pages\n// todo: wiki\n// todo: LinearGauge implementation\n// todo: online configurator\n// todo: online packager\n// todo: e2e tests\n// todo: angular 2 integration\n// todo: react integrations\n// todo: typescript definitions\n\n/**\n * Gauge configuration options\n *\n * @typedef {GenericOptions|{ticksAngle: number, startAngle: number, colorNeedleCircleOuterStart: string, colorNeedleCircleOuterEnd: string, colorNeedleCircleInnerStart: string, colorNeedleCircleInnerEnd: string, colorNeedleShadowUp: string, colorNeedleShadowDown: string, colorValueBoxRectStart: string, colorValueBoxRectEnd: string, colorValueBoxBackground: string, colorValueBoxShadow: string, needleStart: number, needleEnd: number, needleWidth: number, needleCircleSize: number, needleCircleInner: boolean, needleCircleOuter: boolean}} GaugeOptions\n */\n\n/**\n * @access private\n * @typedef {CanvasRenderingContext2D|{max: number, maxRadius: number}} Canvas2DContext\n */\n\n/**\n * Default gauge configuration options\n *\n * @access private\n * @type {GaugeOptions}\n */\nvar defaultGaugeOptions = Object.assign({}, GenericOptions, {\n    // basic options\n    ticksAngle: 270,\n    startAngle: 45,\n\n    // colors\n    colorNeedleCircleOuterStart: '#f0f0f0',\n    colorNeedleCircleOuterEnd: '#ccc',\n    colorNeedleCircleInnerStart: '#e8e8e8',\n    colorNeedleCircleInnerEnd: '#f5f5f5',\n    colorNeedleShadowUp: 'rgba(2,255,255,0.2)',\n    colorNeedleShadowDown: 'rgba(188,143,143,0.45)',\n    colorValueBoxRectStart: '#888',\n    colorValueBoxRectEnd: '#666',\n    colorValueBoxBackground: '#babab2',\n    colorValueBoxShadow: 'rgba(0,0,0,1)',\n\n    // needle\n    needleStart: 0,\n    needleEnd: 85,\n    needleWidth: 4,\n    needleCircleSize: 10,\n    needleCircleInner: true,\n    needleCircleOuter: true\n});\n\n/* istanbul ignore next: private, not testable */\n/**\n * Formats a number for display on the dial's plate using the majorTicksFormat\n * config option.\n *\n * @access private\n * @param {number} num number to format\n * @param {object} options\n * @returns {string} formatted number\n */\nfunction formatMajorTickNumber(num, options) {\n    var right = void 0,\n        hasDec = false;\n\n    // First, force the correct number of digits right of the decimal.\n    if (options.majorTicksDec === 0) {\n        right = Math.round(num).toString();\n    } else {\n        right = num.toFixed(options.majorTicksDec);\n    }\n\n    // Second, force the correct number of digits left of the decimal.\n    if (options.majorTicksInt > 1) {\n        // Does this number have a decimal?\n        hasDec = ~right.indexOf('.');\n\n        // Is this number a negative number?\n        if (~right.indexOf('-')) {\n            return '-' + [options.majorTicksInt + options.majorTicksDec + 2 + (hasDec ? 1 : 0) - right.length].join('0') + right.replace('-', '');\n        } else {\n            return [options.majorTicksInt + options.majorTicksDec + 1 + (hasDec ? 1 : 0) - right.length].join('0') + right;\n        }\n    }\n\n    return right;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Transforms degrees to radians\n *\n * @param {number} degrees\n * @returns {number}\n */\nfunction radians(degrees) {\n    return degrees * Math.PI / 180;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Calculates and returns radial point coordinates\n *\n * @access private\n * @param {number} radius\n * @param {number} angle\n * @returns {{x: number, y: number}}\n */\nfunction radialPoint(radius, angle) {\n    return { x: -radius * Math.sin(angle), y: radius * Math.cos(angle) };\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Creates and returns linear gradient canvas object\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {string} colorFrom\n * @param {string} colorTo\n * @param {number} length\n * @returns {CanvasGradient}\n */\nfunction linearGradient(context, colorFrom, colorTo, length) {\n    var grad = context.createLinearGradient(0, 0, 0, length);\n\n    grad.addColorStop(0, colorFrom);\n    grad.addColorStop(1, colorTo);\n\n    return grad;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Pads a given value with leading zeros using the given options\n *\n * @access private\n * @param {number} val\n * @param {GaugeOptions|{valueInt: number, valueDec: number}} options\n * @returns {string}\n */\nfunction padValue(val, options) {\n    var dec = options.valueDec;\n    var int = options.valueInt;\n    var i = 0;\n    var s = void 0,\n        strVal = void 0,\n        n = void 0;\n\n    val = parseFloat(val);\n    n = val < 0;\n    val = Math.abs(val);\n\n    if (dec > 0) {\n        strVal = val.toFixed(dec).toString().split('.');\n        s = int - strVal[0].length;\n\n        for (; i < s; ++i) {\n            strVal[0] = '0' + strVal[0];\n        }\n\n        strVal = (n ? '-' : '') + strVal[0] + '.' + strVal[1];\n    } else {\n        strVal = Math.round(val).toString();\n        s = int - strVal.length;\n\n        for (; i < s; ++i) {\n            strVal = '0' + strVal;\n        }\n\n        strVal = (n ? '-' : '') + strVal;\n    }\n\n    return strVal;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gradient-filled circle on a canvas\n *\n * @access private\n * @param {number} radius\n * @param {Canvas2DContext} context\n * @param {string} start gradient start color\n * @param {string} end gradient end color\n */\nfunction drawCircle(radius, context, start, end) {\n    context.beginPath();\n    context.arc(0, 0, radius, 0, Math.PI * 2, true);\n    context.fillStyle = linearGradient(context, start, end, radius);\n    context.fill();\n    context.closePath();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Returns max radius without borders for the gauge\n *\n * @param {Canvas2DContext} context\n * @param {GaugeOptions} options\n * @return {number}\n */\nfunction maxRadius(context, options) {\n    if (!context.maxRadius) {\n        context.maxRadius = context.max - options.borderShadowWidth - options.borderOuterWidth - options.borderMiddleWidth - options.borderInnerWidth;\n    }\n\n    return context.maxRadius;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge plate on the canvas\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {GaugeOptions} options\n */\nfunction drawPlate(context, options) {\n    var d0 = options.borderShadowWidth;\n    var r0 = context.max - options.borderShadowWidth;\n    var r1 = r0 - options.borderOuterWidth;\n    var r2 = r1 - options.borderMiddleWidth;\n    var r3 = maxRadius(context, options);\n\n    context.save();\n\n    if (options.glow) {\n        context.shadowBlur = d0;\n        context.shadowColor = options.colorBorderShadow;\n    }\n\n    if (options.borderOuterWidth) {\n        drawCircle(r0, context, options.colorBorderOuterStart, options.colorBorderOuterEnd);\n    }\n\n    if (options.borderMiddleWidth) {\n        drawCircle(r1, context, options.colorBorderMiddleStart, options.colorBorderMiddleEnd);\n    }\n\n    if (options.borderInnerWidth) {\n        drawCircle(r2, context, options.colorBorderInnerStart, options.colorBorderInnerEnd);\n    }\n\n    context.restore();\n\n    context.beginPath();\n    context.arc(0, 0, r3, 0, Math.PI * 2, true);\n    context.fillStyle = options.colorPlate;\n    context.fill();\n    context.closePath();\n\n    context.save();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge highlight areas on a canvas\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {GaugeOptions} options\n */\nfunction drawHighlights(context, options) {\n    context.save();\n\n    var r1 = maxRadius(context, options) - context.max * .05;\n    var r2 = r1 - context.max * .15;\n    var i = 0,\n        s = options.highlights.length;\n\n    for (; i < s; i++) {\n        var hlt = options.highlights[i];\n        var vd = (options.maxValue - options.minValue) / options.ticksAngle;\n        var sa = radians(options.startAngle + (hlt.from - options.minValue) / vd);\n        var ea = radians(options.startAngle + (hlt.to - options.minValue) / vd);\n        var ps = radialPoint(r2, sa);\n        var pe = radialPoint(r1, sa);\n        var ps1 = radialPoint(r1, ea);\n        var pe1 = radialPoint(r2, ea);\n\n        context.beginPath();\n        context.rotate(radians(90));\n        context.arc(0, 0, r1, sa, ea, false);\n        context.restore();\n        context.save();\n        context.moveTo(ps.x, ps.y);\n        context.lineTo(pe.x, pe.y);\n        context.lineTo(ps1.x, ps1.y);\n        context.lineTo(pe1.x, pe1.y);\n        context.lineTo(ps.x, ps.y);\n        context.closePath();\n\n        context.fillStyle = hlt.color;\n        context.fill();\n\n        context.beginPath();\n        context.rotate(radians(90));\n        context.arc(0, 0, r2, sa - 0.2, ea + 0.2, false);\n        context.restore();\n        context.closePath();\n\n        context.fillStyle = options.colorPlate;\n        context.fill();\n        context.save();\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws minor ticks bar on a canvas\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {GaugeOptions} options\n */\nfunction drawMinorTicks(context, options) {\n    var radius = maxRadius(context, options) - context.max * .05;\n\n    context.lineWidth = SmartCanvas.pixelRatio;\n    context.strokeStyle = options.colorMinorTicks;\n\n    context.save();\n\n    var s = options.minorTicks * (options.majorTicks.length - 1);\n    var i = 0;\n\n    for (; i < s; ++i) {\n        var angle = options.startAngle + i * (options.ticksAngle / s);\n\n        context.rotate(radians(angle));\n\n        context.beginPath();\n        context.moveTo(0, radius);\n        context.lineTo(0, radius - context.max * .075);\n        context.stroke();\n        context.restore();\n        context.closePath();\n\n        context.save();\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge major ticks bar on a canvas\n *\n * @param {Canvas2DContext} context\n * @param {GaugeOptions} options\n */\nfunction drawMajorTicks(context, options) {\n    var r = maxRadius(context, options) - context.max * .05;\n    var i = 0;\n    var s = options.majorTicks.length;\n    var pixelRatio = SmartCanvas.pixelRatio;\n\n    context.lineWidth = 2 * pixelRatio;\n    context.strokeStyle = options.colorMajorTicks;\n    context.save();\n\n    if (s === 0) {\n        var numberOfDefaultTicks = 5;\n        var tickSize = (options.maxValue - options.minValue) / numberOfDefaultTicks;\n\n        for (; i < numberOfDefaultTicks; i++) {\n            options.majorTicks.push(formatMajorTickNumber(options.minValue + tickSize * i, options));\n        }\n        options.majorTicks.push(formatMajorTickNumber(options.maxValue, options));\n    }\n\n    i = 0;\n    for (; i < s; ++i) {\n        var a = options.startAngle + i * (options.ticksAngle / (s - 1));\n        context.rotate(radians(a));\n\n        context.beginPath();\n        context.moveTo(0, r);\n        context.lineTo(0, r - context.max * .15);\n        context.stroke();\n\n        context.restore();\n        context.closePath();\n        context.save();\n    }\n\n    if (options.strokeTicks) {\n        context.rotate(radians(90));\n\n        context.beginPath();\n        context.arc(0, 0, r, radians(options.startAngle), radians(options.startAngle + options.ticksAngle), false);\n        context.stroke();\n        context.restore();\n        context.closePath();\n\n        context.save();\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge bar numbers\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {GaugeOptions} options\n */\nfunction drawNumbers(context, options) {\n    var radius = maxRadius(context, options) - context.max * .35;\n    var points = {};\n    var i = 0;\n    var s = options.majorTicks.length;\n\n    for (; i < s; ++i) {\n        var angle = options.startAngle + i * (options.ticksAngle / (s - 1));\n        var point = radialPoint(radius, radians(angle));\n\n        if (angle === 360) angle = 0;\n\n        if (points[angle]) {\n            continue; //already drawn at this place, skipping\n        }\n\n        points[angle] = true;\n\n        context.font = 20 * (context.max / 200) + 'px Arial';\n        context.fillStyle = options.colorNumbers;\n        context.lineWidth = 0;\n        context.textAlign = 'center';\n        context.fillText(options.majorTicks[i], point.x, point.y + 3);\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge title\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {GaugeOptions} options\n */\nfunction drawTitle(context, options) {\n    if (!options.title) return;\n\n    context.save();\n    context.font = 24 * (context.max / 200) + 'px Arial';\n    context.fillStyle = options.colorTitle;\n    context.textAlign = 'center';\n    context.fillText(options.title, 0, -context.max / 4.25, context.max * .8);\n    context.restore();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws units name on the gauge\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {GaugeOptions} options\n */\nfunction drawUnits(context, options) {\n    if (!options.units) return;\n\n    context.save();\n    context.font = 22 * (context.max / 200) + 'px Arial';\n    context.fillStyle = options.colorUnits;\n    context.textAlign = 'center';\n    context.fillText(options.units, 0, context.max / 3.25, context.max * .8);\n    context.restore();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge needle shadow\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {GaugeOptions} options\n */\nfunction drawNeedleShadow(context, options) {\n    if (!options.needleShadow) return;\n\n    context.shadowOffsetX = 2;\n    context.shadowOffsetY = 2;\n    context.shadowBlur = 10;\n    context.shadowColor = options.colorNeedleShadowDown;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge needle\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {GaugeOptions} options\n */\nfunction drawNeedle(context, options) {\n    if (!options.needle) return;\n\n    var value = options.value;\n    var max = maxRadius(context, options);\n    var r1 = max / 100 * options.needleCircleSize;\n    var r2 = max / 100 * options.needleCircleSize * 0.75;\n    var rIn = max / 100 * options.needleEnd;\n    var rStart = options.needleStart ? max / 100 * options.needleStart : 0,\n        rOut = max * .2;\n    var pad1 = max / 100 * options.needleWidth;\n    var pad2 = max / 100 * options.needleWidth / 2;\n    var pixelRatio = SmartCanvas.pixelRatio;\n\n    drawNeedleShadow(context, options);\n\n    context.save();\n\n    context.rotate(radians(options.startAngle + (value - options.minValue) / (options.maxValue - options.minValue) * options.ticksAngle));\n\n    if (options.needleType === 'arrow') {\n        context.beginPath();\n        context.moveTo(-pad2, -rOut);\n        context.lineTo(-pad1, 0);\n        context.lineTo(-1 * pixelRatio, rIn);\n        context.lineTo(pixelRatio, rIn);\n        context.lineTo(pad1, 0);\n        context.lineTo(pad2, -rOut);\n        context.closePath();\n\n        context.fillStyle = linearGradient(context, options.colorNeedleStart, options.colorNeedleEnd, rIn - rOut);\n        context.fill();\n\n        context.beginPath();\n        context.lineTo(-0.5 * pixelRatio, rIn);\n        context.lineTo(-1 * pixelRatio, rIn);\n        context.lineTo(-pad1, 0);\n        context.lineTo(-pad2, -rOut);\n        context.lineTo(pad2 / 2 * pixelRatio - 2 * pixelRatio, -rOut);\n        context.closePath();\n        context.fillStyle = options.colorNeedleShadowUp;\n        context.fill();\n    } else {\n        // simple line needle\n        context.beginPath();\n        context.moveTo(-pad2, rIn);\n        context.lineTo(-pad2, rStart);\n        context.lineTo(pad2, rStart);\n        context.lineTo(pad2, rIn);\n        context.closePath();\n\n        context.fillStyle = linearGradient(context, options.colorNeedleStart, options.colorNeedleEnd, rIn - rOut);\n        context.fill();\n    }\n\n    context.restore();\n\n    if (options.needleCircleSize) {\n        drawNeedleShadow(context, options);\n\n        if (options.needleCircleOuter) {\n            context.beginPath();\n            context.arc(0, 0, r1, 0, Math.PI * 2, true);\n            context.fillStyle = linearGradient(context, options.colorNeedleCircleOuterStart, options.colorNeedleCircleOuterEnd, r1);\n            context.fill();\n            context.restore();\n            context.closePath();\n        }\n\n        if (options.needleCircleInner) {\n            context.beginPath();\n            context.arc(0, 0, r2, 0, Math.PI * 2, true);\n            context.fillStyle = linearGradient(context, options.colorNeedleCircleInnerStart, options.colorNeedleCircleInnerEnd, r2);\n            context.fill();\n            context.closePath();\n        }\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws rounded corners rectangle\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {number} r\n */\nfunction roundRect(context, x, y, w, h, r) {\n    context.beginPath();\n\n    context.moveTo(x + r, y);\n    context.lineTo(x + w - r, y);\n\n    context.quadraticCurveTo(x + w, y, x + w, y + r);\n    context.lineTo(x + w, y + h - r);\n\n    context.quadraticCurveTo(x + w, y + h, x + w - r, y + h);\n    context.lineTo(x + r, y + h);\n\n    context.quadraticCurveTo(x, y + h, x, y + h - r);\n    context.lineTo(x, y + r);\n\n    context.quadraticCurveTo(x, y, x + r, y);\n\n    context.closePath();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge value box\n *\n * @param {Canvas2DContext} context\n * @param {GaugeOptions} options\n * @param {number} value\n */\nfunction drawValueBox(context, options, value) {\n    if (!options.valueText) return;\n\n    var max = context.max;\n    var text = padValue(value, options);\n    var y = max - max * .33;\n    var x = 0;\n\n    context.save();\n    context.font = 40 * (max / 200) + 'px Led';\n    context.save();\n\n    if (options.valueBox) {\n        var th = 0.12 * max;\n        var tw = context.measureText('-' + padValue(0, options)).width;\n\n        roundRect(context, -tw / 2 - 0.025 * max, y - th - 0.04 * max, tw + 0.05 * max, th + 0.07 * max, 0.025 * max);\n    }\n\n    var grd = context.createRadialGradient(x, y - 0.12 * max - 0.025 * max + (0.12 * max + 0.045 * max) / 2, max / 10, x, y - 0.12 * max - 0.025 * max + (0.12 * max + 0.045 * max) / 2, max / 5);\n\n    grd.addColorStop(0, options.colorValueBoxRectStart);\n    grd.addColorStop(1, options.colorValueBoxRectEnd);\n\n    context.strokeStyle = grd;\n    context.lineWidth = 0.05 * max;\n    context.stroke();\n\n    context.shadowBlur = 0.012 * max;\n    context.shadowColor = options.colorValueBoxShadow;\n\n    context.fillStyle = options.colorValueBoxBackground;\n    context.fill();\n\n    context.restore();\n\n    context.shadowOffsetX = 0.004 * max;\n    context.shadowOffsetY = 0.004 * max;\n    context.shadowBlur = 0.012 * max;\n    context.shadowColor = options.colorValueTextShadow;\n\n    context.fillStyle = options.colorValueText;\n    context.textAlign = 'center';\n    context.fillText(text, -x, y);\n\n    context.restore();\n}\n\n/**\n * Minimalistic HTML5 Canvas Gauge\n * @example\n *  var gauge = new Gauge({\n *     renderTo: 'gauge-id', // identifier of HTML canvas element or element itself\n *     width: 400,\n *     height: 400,\n *     units: 'Km/h',\n *     title: false,\n *     value: 0,\n *     minValue: 0,\n *     maxValue: 220,\n *     majorTicks: [\n *         '0','20','40','60','80','100','120','140','160','180','200','220'\n *     ],\n *     minorTicks: 2,\n *     strokeTicks: false,\n *     highlights: [\n *         { from: 0, to: 50, color: 'rgba(0,255,0,.15)' },\n *         { from: 50, to: 100, color: 'rgba(255,255,0,.15)' },\n *         { from: 100, to: 150, color: 'rgba(255,30,0,.25)' },\n *         { from: 150, to: 200, color: 'rgba(255,0,225,.25)' },\n *         { from: 200, to: 220, color: 'rgba(0,0,255,.25)' }\n *     ],\n *     colorPlate: '#222',\n *     colorMajorTicks: '#f5f5f5',\n *     colorMinorTicks: '#ddd',\n *     colorTitle: '#fff',\n *     colorUnits: '#ccc',\n *     colorNumbers: '#eee',\n *     colorNeedleStart: 'rgba(240, 128, 128, 1)',\n *     colorNeedleEnd: 'rgba(255, 160, 122, .9)',\n *     valueBox: true,\n *     animationRule: 'bounce'\n * });\n * // draw initially\n * gauge.draw();\n * // animate\n * setInterval(() => {\n *    gauge.value = Math.random() * -220 + 220;\n * }, 1000);\n */\n\nvar Gauge = function (_BaseGauge) {\n    _inherits(Gauge, _BaseGauge);\n\n    /**\n     * @constructor\n     * @param {GaugeOptions} options\n     */\n    function Gauge(options) {\n        _classCallCheck(this, Gauge);\n\n        options = Object.assign({}, defaultGaugeOptions, options || {});\n\n        /* istanbul ignore if */\n        if (isNaN(options.startAngle)) options.startAngle = 45;\n        /* istanbul ignore if */\n        if (isNaN(options.ticksAngle)) options.ticksAngle = 270;\n\n        /* istanbul ignore if */\n        if (options.ticksAngle > 360) options.ticksAngle = 360;\n        /* istanbul ignore if */\n        if (options.ticksAngle < 0) options.ticksAngle = 0;\n\n        /* istanbul ignore if */\n        if (options.startAngle < 0) options.startAngle = 0;\n        /* istanbul ignore if */\n        if (options.startAngle > 360) options.startAngle = 360;\n\n        return _possibleConstructorReturn(this, Object.getPrototypeOf(Gauge).call(this, options));\n    }\n\n    /**\n     * Triggering gauge render on a canvas.\n     *\n     * @returns {Gauge}\n     */\n\n\n    _createClass(Gauge, [{\n        key: 'draw',\n        value: function draw() {\n            var canvas = this.canvas;\n            var x = -canvas.drawX;\n            var y = -canvas.drawY;\n            var w = canvas.drawWidth;\n            var h = canvas.drawHeight;\n\n            var options = this.options;\n\n            if (!canvas.elementClone.initialized) {\n                var context = canvas.contextClone;\n\n                // clear the cache\n                context.clearRect(x, y, w, h);\n                context.save();\n\n                drawPlate(context, options);\n                drawHighlights(context, options);\n                drawMinorTicks(context, options);\n                drawMajorTicks(context, options);\n                drawNumbers(context, options);\n                drawTitle(context, options);\n                drawUnits(context, options);\n\n                canvas.elementClone.initialized = true;\n            }\n\n            this.canvas.commit();\n\n            // clear the canvas\n            canvas.context.clearRect(x, y, w, h);\n            canvas.context.save();\n\n            canvas.context.drawImage(canvas.elementClone, x, y, w, h);\n            canvas.context.save();\n\n            drawValueBox(canvas.context, options, this.value);\n            drawNeedle(canvas.context, options);\n\n            return this;\n        }\n    }]);\n\n    return Gauge;\n}(BaseGauge);\n\nwindow['Gauge'] = Gauge;\n\nBaseGauge.initialize('Gauge', defaultGaugeOptions);\n\n/*!\n * @license\n * Minimalistic HTML5 Canvas Gauge implementation\n *\n * This code is subject to MIT license.\n *\n * Copyright (c) 2012 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/**\n * Linear gauge configuration options\n *\n * @typedef {GenericOptions|{orientation: string}} LinearGaugeOptions\n */\n\n/**\n * Default linear gauge configuration options\n *\n * @type {LinearGaugeOptions}\n */\nvar defaultLinearGaugeOptions = Object.assign({}, GenericOptions, {\n    // basic options\n    orientation: 'vertical'\n});\n\n/**\n * Minimalistic HTML5 Canvas Linear Gauge\n */\n\nvar LinearGauge = function (_BaseGauge2) {\n    _inherits(LinearGauge, _BaseGauge2);\n\n    /**\n     * @constructor\n     * @param {LinearGaugeOptions} options\n     */\n    function LinearGauge(options) {\n        _classCallCheck(this, LinearGauge);\n\n        options = Object.assign({}, defaultLinearGaugeOptions, options || {});\n\n        return _possibleConstructorReturn(this, Object.getPrototypeOf(LinearGauge).call(this, options));\n    }\n\n    /**\n     * Triggering linear gauge render on a canvas.\n     *\n     * @returns {LinearGauge}\n     */\n\n\n    _createClass(LinearGauge, [{\n        key: 'draw',\n        value: function draw() {\n            return this;\n        }\n    }]);\n\n    return LinearGauge;\n}(BaseGauge);\n\nwindow['LinearGauge'] = LinearGauge;\n\nBaseGauge.initialize('LinearGauge', defaultLinearGaugeOptions);}());"],"sourceRoot":"/source/"}