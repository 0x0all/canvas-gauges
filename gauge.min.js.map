{"version":3,"sources":["gauge.min.js"],"names":["_toConsumableArray","arr","Array","isArray","i","arr2","length","from","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","TypeError","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_classCallCheck","instance","Constructor","vendorize","prop","window","global","vendors","s","capitalized","charAt","toUpperCase","substr","vendorProp","step","time","draw","start","rule","duration","end","anim","progress","percent","frame","requestAnimationFrame","Collection","apply","this","arguments","roundRect","context","x","y","w","h","r","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","padValue","val","options","dec","valueDec","int","valueInt","strVal","n","parseFloat","Math","abs","toFixed","toString","split","round","formatMajorTickNumber","num","right","hasDec","majorTicksDec","majorTicksInt","indexOf","join","replace","radians","degrees","PI","radialPoint","radius","angle","sin","cos","linearGradient","colorFrom","colorTo","grad","createLinearGradient","addColorStop","drawNeedleShadow","needleShadow","shadowOffsetX","shadowOffsetY","shadowBlur","shadowColor","colorNeedleShadowDown","drawCircle","arc","fillStyle","drawings","fill","maxRadius","max","borderShadowWidth","borderOuterWidth","borderMiddleWidth","borderInnerWidth","drawPlate","d0","r0","r1","r2","r3","save","glow","colorBorderShadow","colorBorderOuterStart","colorBorderOuterEnd","colorBorderMiddleStart","colorBorderMiddleEnd","colorBorderInnerStart","colorBorderInnerEnd","restore","colorPlate","drawHighlights","highlights","hlt","vd","maxValue","minValue","ticksAngle","sa","startAngle","ea","to","ps","pe","ps1","pe1","rotate","color","drawMinorTicks","lineWidth","SmartCanvas","pixelRatio","strokeStyle","colorMinorTicks","minorTicks","majorTicks","stroke","drawMajorTicks","colorMajorTicks","push","a","strokeTicks","drawNumbers","points","point","font","colorNumbers","textAlign","fillText","drawTitle","title","colorTitle","drawUnits","units","colorUnits","drawNeedle","needle","needleCircleSize","rIn","needleEnd","rStart","needleStart","rOut","pad1","needleWidth","pad2","needleType","colorNeedleStart","colorNeedleEnd","colorNeedleShadowUp","needleCircleOuter","colorNeedleCircleOuterStart","colorNeedleCircleOuterEnd","needleCircleInner","colorNeedleCircleInnerStart","colorNeedleCircleInnerEnd","drawValueBox","valueText","text","valueBox","th","tw","measureText","width","gy","grd","createRadialGradient","colorValueBoxRectStart","colorValueBoxRectEnd","colorValueBoxShadow","colorValueBoxBackground","colorValueTextShadow","colorValueText","drawRectangle","colorStart","colorEnd","rect","barDimensions","isVertical","hasTitle","hasUnits","titleMargin","unitsMargin","strokeWidth","barStrokeWidth","barBeginCircle","barWidth","barLength","barMargin","x0","y0","barOffset","ticksLength","X","Y","drawLinearBarShape","barOpWidth","strokeColor","circleRadius","toValue","_barDimensions","direction","alpha","asin","cosAlpha","sinAlpha","x1","y1","cutRadius","x2","y2","x3","y3","rx","ry","drawLinearBar","colorBarStroke","colorBar","colorBarEnd","drawLinearBarProgress","barProgress","colorBarProgress","colorBarProgressEnd","drawLinearBarHighlights","_context$barDimension","hasLeft","tickSide","hasRight","tickOffset","interval","eX","eH","eY","entry","eW","drawLinearTick","drawLinearTicks","ticksSize","deltaLen","lineLength","_context$barDimension2","tickX","tickY","tickWidth","tickHeight","prepareTicks","drawLinearMajorTicks","_prepareTicks","_prepareTicks2","_slicedToArray","drawLinearMinorTicks","_prepareTicks3","_prepareTicks4","drawLinearMajorTicksNumbers","_context$barDimension3","ticks","numberSide","textHeight","textX","textY","textWidth","numberOffset","tick","drawLinearTitle","_context$barDimension4","drawLinearUnits","_context$barDimension5","drawLinearBarNeedle","_context$barDimension6","needleSide","position","baseLength","needleLength","sX","sY","toLowerCase","drawLinearArrowNeedle","drawLinearLineNeedle","peakLength","bodyLength","halfWidth","drawLinearPlate","borderRadius","w1","w2","w3","w4","h1","h2","h3","h4","x4","y4","sliceIterator","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","err","_createClass","defineProperties","target","props","descriptor","defineProperty","key","protoProps","staticProps","assign","firstSource","nextSource","keysArray","keys","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","searchElement","fromIndex","k","O","Infinity","callback","setTimeout","Date","getTime","rules","linear","p","quad","pow","dequad","quint","dequint","cycle","acos","decycle","bounce","debounce","b","elastic","delastic","Animation","_this","performance","now","cancelAnimationFrame","id","DomObserver","element","Type","_this2","type","toDashed","domReady","traverse","MutationObserver","observe","bind","document","body","childList","subtree","attributes","characterData","attributeOldValue","characterDataOldValue","node","tagName","getAttribute","elements","getElementsByTagName","isValidNode","process","records","record","attributeName","oldValue","addedNodes","ii","ss","JSON","parse","stringify","hasOwnProperty","toAttributeName","attributeValue","renderTo","test","e","camelCase","str","handler","addEventListener","attachEvent","canvas","height","collection","init","style","elementClone","cloneNode","getContext","contextClone","drawWidth","drawHeight","drawX","drawY","minSide","initialized","translate","index","splice","onRedraw","scale","redraw","get","devicePixelRatio","matchMedia","addListener","GenericOptions","updateValueOnAnimation","borders","animation","animationDuration","animationRule","getElementById","gaugesCollection","BaseGauge","className","name","typeName","destroy","set","_this3","fromValue","_value","animate","defaultGaugeOptions","Gauge","_BaseGauge","isNaN","getPrototypeOf","clearRect","commit","drawImage","initialize","defaultLinearGaugeOptions","LinearGauge","_BaseGauge2","orientation","drawBox","concat"],"mappings":"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","file":"gauge.min.js","sourcesContent":["(function() {'use strict';\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @external {Object.assign} https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n */\n/* istanbul ignore next */\nif (!Object.assign) {\n    Object.defineProperty(Object, 'assign', {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function value(target, firstSource) {\n            'use strict';\n\n            if (target === undefined || target === null) {\n                throw new TypeError('Cannot convert first argument to object');\n            }\n\n            var to = Object(target);\n            var i = 1;\n\n            for (; i < arguments.length; i++) {\n                var nextSource = arguments[i];\n\n                if (nextSource === undefined || nextSource === null) {\n                    continue;\n                }\n\n                var keysArray = Object.keys(Object(nextSource));\n                var nextIndex = 0,\n                    len = keysArray.length;\n\n                for (; nextIndex < len; nextIndex++) {\n                    var nextKey = keysArray[nextIndex];\n                    var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n\n                    if (desc !== undefined && desc.enumerable) {\n                        to[nextKey] = nextSource[nextKey];\n                    }\n                }\n            }\n\n            return to;\n        }\n    });\n}\n\n/**\n * @external {Array.indexOf} https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf\n */\n/* istanbul ignore next */\nif (!Array.prototype.indexOf) {\n    Array.prototype.indexOf = function (searchElement, fromIndex) {\n        var k;\n\n        if (this == null) {\n            throw new TypeError('\"this\" is null or not defined');\n        }\n\n        var O = Object(this);\n        var len = O.length >>> 0;\n\n        if (len === 0) {\n            return -1;\n        }\n\n        var n = +fromIndex || 0;\n\n        if (Math.abs(n) === Infinity) {\n            n = 0;\n        }\n\n        if (n >= len) {\n            return -1;\n        }\n\n        k = Math.max(n >= 0 ? n : len - Math.abs(n), 0);\n\n        while (k < len) {\n            if (k in O && O[k] === searchElement) {\n                return k;\n            }\n\n            k++;\n        }\n\n        return -1;\n    };\n}\n\n/*!\n * @license\n * Minimalistic HTML5 Canvas Gauge implementation\n *\n * This code is subject to MIT license.\n *\n * Copyright (c) 2012 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n/**\n * Look-ups for a proper vendor-specific property and returns its value\n *\n * @example\n * var requestAnimationFrame = vendorize('requestAnimationFrame');\n * // it will refer properly to:\n * //  - window.requestAnimationFrame by default or to\n * //  - window.webkitRequestAnimationFrame or to\n * //  - window.mozRequestAnimationFrame or to\n * //  - window.msRequestAnimationFrame or to\n * //  - window.oRequestAnimationFrame\n * // depending on the current browser vendor\n *\n * @author Mykhailo Stadnyk <mikhus@gmail.com>\n * @param {string} prop\n * @param {HTMLElement|Window|object} [from] - default is window\n * @returns {*}\n */\nfunction vendorize(prop, from) {\n    /* istanbul ignore else: no reason to cover */\n    if (!from) {\n        from = typeof window === 'undefined' ? global : window;\n    }\n\n    if (typeof from[prop] !== 'undefined') {\n        return from[prop];\n    }\n\n    var vendors = ['webkit', 'moz', 'ms', 'o'];\n    var i = 0;\n    var s = vendors.length;\n    var capitalized = prop.charAt(0).toUpperCase() + prop.substr(1);\n\n    for (; i < s; i++) {\n        var vendorProp = from[vendors[i] + capitalized];\n\n        /* istanbul ignore if: requires very complex environment to test (specific browser version) */\n        if (typeof vendorProp !== 'undefined') {\n            return vendorProp;\n        }\n    }\n\n    return null;\n}\n\n/*!\n * @license\n * Minimalistic HTML5 Canvas Gauge implementation\n *\n * This code is subject to MIT license.\n *\n * Copyright (c) 2012 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/* istanbul ignore next */\n/**\n * @type {function(callback: function(time: number): number, element?: HTMLElement)}\n * @access private\n */\nvar requestAnimationFrame = vendorize('requestAnimationFrame') || function (callback) {\n    return setTimeout(function () {\n        return callback(new Date().getTime());\n    }, 1000 / 60);\n};\n\n/**\n * Generic AnimationRule function interface\n *\n * @typedef {function(percent: number): number} AnimationRule\n */\n\n/**\n * Callback for animation step draw event.\n * It will be called each time animation step is executed, bypassing\n * as first argument a percent of animation completeness. It is expected\n * that this callback will do an actual work of animating an elements or\n * whatever, as far as animation engine is just calculating and executing\n * animation steps without any knowledge about things under animation.\n *\n * @typedef {function(percent: number): *} DrawEventCallback\n */\n\n/**\n * Callback for animation complete event.\n * It is called once each animation is complete.\n *\n * @typedef {function(): *} EndEventCallback\n */\n\n/**\n * Predefined known animation rules.\n * It's a simple collection of math for some most used animations.\n *\n * @typedef {{linear: AnimationRule, quad: AnimationRule, dequad: AnimationRule, quint: AnimationRule, dequint: AnimationRule, cycle: AnimationRule, decycle: AnimationRule, bounce: AnimationRule, debounce: AnimationRule, elastic: AnimationRule, delastic: AnimationRule}} AnimationRules\n */\n\n/* istanbul ignore next: no reason covering this */\nvar rules = {\n    linear: function linear(p) {\n        return p;\n    },\n    quad: function quad(p) {\n        return Math.pow(p, 2);\n    },\n    dequad: function dequad(p) {\n        return 1 - rules.quad(1 - p);\n    },\n    quint: function quint(p) {\n        return Math.pow(p, 5);\n    },\n    dequint: function dequint(p) {\n        return 1 - Math.pow(1 - p, 5);\n    },\n    cycle: function cycle(p) {\n        return 1 - Math.sin(Math.acos(p));\n    },\n    decycle: function decycle(p) {\n        return Math.sin(Math.acos(1 - p));\n    },\n    bounce: function bounce(p) {\n        return 1 - rules.debounce(1 - p);\n    },\n    debounce: function debounce(p) {\n        var a = 0,\n            b = 1;\n        for (; 1; a += b, b /= 2) {\n            if (p >= (7 - 4 * a) / 11) {\n                return -Math.pow((11 - 6 * a - 11 * p) / 4, 2) + Math.pow(b, 2);\n            }\n        }\n    },\n    elastic: function elastic(p) {\n        return 1 - rules.delastic(1 - p);\n    },\n    delastic: function delastic(p) {\n        var x = 1.5;\n        return Math.pow(2, 10 * (p - 1)) * Math.cos(20 * Math.PI * x / 3 * p);\n    }\n};\n\n/* istanbul ignore next: private, not testable */\n/**\n * Evaluates animation step and decides if the next step required or\n * stops animation calling a proper events.\n *\n * @access private\n * @param {number} time\n * @param {DrawEventCallback} draw\n * @param {number} start\n * @param {AnimationRule} rule\n * @param {number} duration\n * @param {EndEventCallback} end\n * @param {Animation} anim\n */\nfunction step(time, draw, start, rule, duration, end, anim) {\n    if (typeof rule !== 'function') {\n        throw new TypeError('Invalid animation rule:', rule);\n    }\n\n    var progress = time - start;\n    var percent = progress / duration;\n\n    if (percent > 1) {\n        percent = 1;\n    }\n\n    draw && draw(percent === 1 ? percent : rule(percent));\n\n    if (progress < duration) {\n        anim.frame = requestAnimationFrame(function (time) {\n            return step(time, draw, start, rule, duration, end, anim);\n        });\n    } else {\n        end && end();\n    }\n}\n\n/**\n * Animation engine API for JavaScript-based animations.\n * This is simply an animation core framework which simplifies creation\n * of various animations for generic purposes.\n *\n * @example\n * // create 'linear' animation engine, 500ms duration\n * let linear = new Animation('linear', 500);\n *\n * // create 'elastic' animation engine\n * let elastic = new Animation('elastic');\n *\n * // define animation behavior\n * let bounced = new Animation('bounce', 500, percent => {\n *     let value = parseInt(percent * 100, 10);\n *\n *     $('div.bounced').css({\n *         width: value + '%',\n *         height: value + '%'\n *     });\n * });\n *\n * // execute animation\n * bounced.animate();\n *\n * // execute animation and handle when its finished\n * bounced.animate(null, () => {\n *    console.log('Animation finished!');\n * });\n */\n\nvar Animation = function () {\n\n    /**\n     * @constructor\n     * @param {string|AnimationRule} rule\n     * @param {number} duration\n     * @param {DrawEventCallback} [draw]\n     * @param {EndEventCallback} [end]\n     */\n    function Animation() {\n        var rule = arguments.length <= 0 || arguments[0] === undefined ? 'linear' : arguments[0];\n        var duration = arguments.length <= 1 || arguments[1] === undefined ? 250 : arguments[1];\n        var draw = arguments.length <= 2 || arguments[2] === undefined ? function () {} : arguments[2];\n        var end = arguments.length <= 3 || arguments[3] === undefined ? function () {} : arguments[3];\n\n        _classCallCheck(this, Animation);\n\n        /**\n         * Overall animation duration in milliseconds.\n         * By default is equal to 250 ms.\n         *\n         * @type {number}\n         */\n        this.duration = duration;\n\n        /**\n         * Animation rule. By default is linear animation.\n         * Animation rule is a subject to animation rules, which are\n         * a simple object containing math-based methods for calculating\n         * animation steps.\n         *\n         * @type {string|AnimationRule}\n         */\n        this.rule = rule;\n\n        /**\n         * Callback function for the animation step draw event.\n         *\n         * @type {DrawEventCallback}\n         */\n        this.draw = draw;\n\n        /**\n         * Callback for the animation complete event.\n         *\n         * @type {EndEventCallback}\n         */\n        this.end = end;\n\n        if (typeof this.draw !== 'function') {\n            throw new TypeError('Invalid animation draw callback:', draw);\n        }\n\n        if (typeof this.end !== 'function') {\n            throw new TypeError('Invalid animation end callback:', end);\n        }\n    }\n\n    /* istanbul ignore next: non-testable */\n    /**\n     * Performs animation calling each animation step draw callback and\n     * end callback at the end of animation. Callbacks are optional to this\n     * method call. If them are not bypassed will be used that ones which\n     * was pre-set on constructing an Animation object or pre-set after\n     * construction.\n     *\n     * @example\n     * function draw(percent) {\n     *     $('.my-animated-divs').css({\n     *         width: parseInt(percent * 100, 10) + '%'\n     *     });\n     * }\n     * function done() {\n     *     console.log('Animation complete!');\n     * }\n     *\n     * // Define 'draw' and 'end' callbacks on construction\n     * var animation = new Animation('cycle', 500, draw, done);\n     * animation.animate();\n     *\n     * // Define 'draw' and 'end' callbacks after construction\n     * var animation = new Animation('cycle', 500);\n     * animation.draw = draw;\n     * animation.end = done;\n     * animation.animate();\n     *\n     * // Define 'draw' and 'end' callbacks at animation\n     * var animation = new Animation('cycle', 500);\n     * animation.animate(draw, done);\n     *\n     * @param {DrawEventCallback} [draw]\n     * @param {EndEventCallback} [end]\n     */\n\n\n    _createClass(Animation, [{\n        key: 'animate',\n        value: function animate(draw, end) {\n            var _this = this;\n\n            //noinspection JSUnresolvedVariable\n            var start = vendorize('animationStartTime') || window.performance && window.performance.now ? window.performance.now() : Date.now();\n\n            draw = draw || this.draw;\n            end = end || this.end;\n\n            /**\n             * Current requested animation frame identifier\n             *\n             * @type {number}\n             */\n            this.frame = requestAnimationFrame(function (time) {\n                return step(time, draw, start, rules[_this.rule] || _this.rule, _this.duration, end, _this);\n            });\n        }\n\n        /**\n         * Destroys this object properly\n         */\n\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            if (this.frame) {\n                var cancelAnimationFrame = vendorize('cancelAnimationFrame') ||\n                /* istanbul ignore next */\n                function (id) {};\n\n                cancelAnimationFrame(this.frame);\n                this.frame = null;\n            }\n\n            this.draw = null;\n            this.end = null;\n        }\n    }]);\n\n    return Animation;\n}();\n\n/**\n * Animation rules bound statically to Animation constructor.\n *\n * @type {AnimationRules}\n * @static\n */\n\n\nAnimation.rules = rules;\n\n/*!\n * @license\n * Minimalistic HTML5 Canvas Gauge implementation\n *\n * This code is subject to MIT license.\n *\n * Copyright (c) 2012 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n/**\n * @typedef {{ constructor: function(options: object): GaugeInterface, draw: function(): GaugeInterface }} GaugeInterface\n */\n\n/**\n * DOM Observer.\n * It will observe DOM document for a configured element types and\n * instantiate associated Types for an existing or newly added DOM elements\n *\n * @example\n * class ProgressBar {\n *     constructor(options) {}\n *     draw() {}\n * }\n *\n * // It will observe DOM document for elements <div>\n * // having attribute 'data-type=\"progress\"'\n * // and instantiate for each new instance of ProgressBar\n *\n * new DomParser({color: 'red'}, 'div', 'progress', ProgressBar);\n *\n * // assume we could have HTML like this\n * // <div data-type=\"progress\" color=\"blue\"></div>\n * // in this case all matching attributes names for a given options will be\n * // parsed and bypassed to an instance from HTML attributes\n */\n\nvar DomObserver = function () {\n\n    /**\n     * @constructor\n     * @param {object} options\n     * @param {string} element\n     * @param {string} Type\n     */\n    function DomObserver(options, element, Type) {\n        var _this2 = this;\n\n        _classCallCheck(this, DomObserver);\n\n        //noinspection JSUnresolvedVariable\n        /**\n         * Default instantiation options for the given Type\n         *\n         * @type {Object}\n         */\n        this.options = options;\n\n        /**\n         * Name of an element to lookup/observe\n         *\n         * @type {string}\n         */\n        this.element = element.toLowerCase();\n\n        /**\n         * data-type attribute value to lookup\n         *\n         * @type {string}\n         */\n        this.type = DomObserver.toDashed(Type);\n\n        /**\n         * Actual type constructor to instantiate for each found element\n         *\n         * @type {Function}\n         */\n        this.Type = window[Type];\n\n        /* istanbul ignore next: this should be tested with end-to-end tests */\n        DomObserver.domReady(function () {\n            _this2.traverse();\n\n            if (window.MutationObserver) {\n                //noinspection JSCheckFunctionSignatures\n                new MutationObserver(_this2.observe.bind(_this2)).observe(document.body, {\n                    childList: true,\n                    subtree: true,\n                    attributes: true,\n                    characterData: true,\n                    attributeOldValue: true,\n                    characterDataOldValue: true\n                });\n            }\n        });\n    }\n\n    /**\n     * Checks if given node is valid node to process\n     *\n     * @param {Node|HTMLElement} node\n     * @returns {boolean}\n     */\n\n\n    _createClass(DomObserver, [{\n        key: 'isValidNode',\n        value: function isValidNode(node) {\n            return !!(node.tagName && node.tagName.toLowerCase() === this.element && node.getAttribute('data-type') === this.type);\n        }\n\n        /**\n         * Traverse entire current DOM tree and process matching nodes.\n         * Usually it should be called only once on document initialization.\n         */\n\n    }, {\n        key: 'traverse',\n        value: function traverse() {\n            var elements = document.getElementsByTagName(this.element);\n            var i = 0,\n                s = elements.length;\n\n            /* istanbul ignore next: this should be tested with end-to-end tests */\n            for (; i < s; i++) {\n                var node = elements[i];\n\n                if (this.isValidNode(node)) {\n                    this.process(node);\n                }\n            }\n        }\n\n        /**\n         * Observes given mutation records for an elements to process\n         *\n         * @param {MutationRecord[]} records\n         */\n\n    }, {\n        key: 'observe',\n        value: function observe(records) {\n            var i = 0;\n            var s = records.length;\n\n            /* istanbul ignore next: this should be tested with end-to-end tests */\n            for (; i < s; i++) {\n                var record = records[i];\n\n                if (record.type === 'attributes' && record.attributeName === 'data-type' && this.isValidNode(record.target) && record.oldValue !== this.type) // skip false-positive mutations\n                    {\n                        this.process(record.target);\n                    } else if (record.addedNodes && record.addedNodes.length) {\n                    var ii = 0;\n                    var ss = record.addedNodes.length;\n\n                    for (; ii < ss; ii++) {\n                        var node = record.addedNodes[ii];\n\n                        if (this.isValidNode(node)) {\n                            this.process(node);\n                        }\n                    }\n                }\n            }\n        }\n\n        /**\n         * Parses given attribute value to a proper JavaScript value.\n         * For example it will parse some stringified value to a proper type\n         * value, e.g. 'true' => true, 'null' => null, '{\"prop\": 20}' => {prop: 20}\n         *\n         * @param {*} value\n         * @return {*}\n         */\n\n    }, {\n        key: 'process',\n\n\n        /**\n         * Processes a given node, instantiating a proper type constructor for it\n         *\n         * @param {Node|HTMLElement} node\n         * @returns {GaugeInterface}\n         */\n        value: function process(node) {\n            var prop = void 0;\n            var options = JSON.parse(JSON.stringify(this.options));\n\n            for (prop in options) {\n                /* istanbul ignore else: non-testable in most cases */\n                if (options.hasOwnProperty(prop)) {\n                    var attributeName = DomObserver.toAttributeName(prop);\n                    var attributeValue = DomObserver.parse(node.getAttribute(attributeName));\n\n                    if (attributeValue !== null && attributeValue !== undefined) {\n                        options[prop] = attributeValue;\n                    }\n                }\n            }\n\n            options.renderTo = node;\n\n            return new this.Type(options).draw();\n        }\n\n        /**\n         * Transforms camelCase string to dashed string\n         *\n         * @static\n         * @param {string} camelCase\n         * @return {string}\n         */\n\n    }], [{\n        key: 'parse',\n        value: function parse(value) {\n            // parse boolean\n            if (value === 'true') return true;\n            if (value === 'false') return false;\n\n            // parse undefined\n            if (value === 'undefined') return undefined;\n\n            // parse null\n            if (value === 'null') return null;\n\n            // Comma-separated strings to array parsing.\n            // It won't match strings which contains non alphanum characters to\n            // prevent strings like 'rgba(0,0,0,0)' or JSON-like from being parsed.\n            // Typically it simply allows easily declare arrays as comma-separated\n            // numbers or plain strings. If something more complicated is\n            // required it can be declared using JSON format syntax\n            if (/^[\\w\\d\\s]+(?:,[\\w\\d\\s]+)+$/.test(value)) {\n                return value.split(',');\n            }\n\n            // parse JSON\n            try {\n                return JSON.parse(value);\n            } catch (e) {}\n\n            // plain value - no need to parse\n            return value;\n        }\n    }, {\n        key: 'toDashed',\n        value: function toDashed(camelCase) {\n            var arr = camelCase.split(/(?=[A-Z])/);\n            var i = 1;\n            var s = arr.length;\n            var str = arr[0].toLowerCase();\n\n            for (; i < s; i++) {\n                str += '-' + arr[i].toLowerCase();\n            }\n\n            return str;\n        }\n\n        /**\n         * Transforms camel case property name to dash separated attribute name\n         *\n         * @static\n         * @param {string} str\n         * @returns {string}\n         */\n\n    }, {\n        key: 'toAttributeName',\n        value: function toAttributeName(str) {\n            return 'data-' + DomObserver.toDashed(str);\n        }\n\n        /**\n         * Cross-browser DOM ready handler\n         *\n         * @static\n         * @param {Function} handler\n         */\n\n    }, {\n        key: 'domReady',\n        value: function domReady(handler) {\n            if (window.addEventListener) {\n                window.addEventListener('DOMContentLoaded', handler, false);\n            } else {\n                window.attachEvent('onload', handler);\n            }\n        }\n    }]);\n\n    return DomObserver;\n}();\n\n/*!\n * @license\n * Minimalistic HTML5 Canvas Gauge implementation\n *\n * This code is subject to MIT license.\n *\n * Copyright (c) 2012 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n/**\n * Drawings on canvas using hidden canvas as a cache for better\n * performance drawings during canvas animations. SmartCanvas also\n * adopts a canvas to\n */\n\n\nvar SmartCanvas = function () {\n\n    /**\n     * @constructor\n     * @param {HTMLCanvasElement} canvas\n     * @param {number} width\n     * @param {number} height\n     */\n    function SmartCanvas(canvas, width, height) {\n        _classCallCheck(this, SmartCanvas);\n\n        SmartCanvas.collection.push(this);\n\n        /**\n         * Canvas base width\n         *\n         * @type {number}\n         */\n        this.width = width || 0;\n\n        /**\n         * Canvas base height\n         *\n         * @type {number}\n         */\n        this.height = height || 0;\n\n        /**\n         * Target drawings canvas element\n         *\n         * @type {HTMLCanvasElement}\n         */\n        this.element = canvas;\n\n        this.init();\n    }\n\n    /**\n     * Initializes canvases and contexts\n     */\n\n\n    _createClass(SmartCanvas, [{\n        key: 'init',\n        value: function init() {\n            var pixelRatio = SmartCanvas.pixelRatio;\n\n            this.element.width = this.width * pixelRatio;\n            this.element.height = this.height * pixelRatio;\n\n            this.element.style.width = this.width + 'px';\n            this.element.style.height = this.height + 'px';\n\n            /**\n             * Canvas caching element\n             *\n             * @type {HTMLCanvasElement|Node}\n             */\n            this.elementClone = this.element.cloneNode(true);\n\n            //noinspection JSUnresolvedVariable\n            /**\n             * Target drawings canvas element 2D context\n             *\n             * @type {CanvasRenderingContext2D}\n             */\n            this.context = this.element.getContext('2d');\n\n            /**\n             * Canvas caching element 2D context\n             *\n             * @type {CanvasRenderingContext2D}\n             */\n            this.contextClone = this.elementClone.getContext('2d');\n\n            /**\n             * Actual drawings width\n             *\n             * @type {number}\n             */\n            this.drawWidth = this.element.width;\n\n            /**\n             * Actual drawings height\n             *\n             * @type {number}\n             */\n            this.drawHeight = this.element.height;\n\n            /**\n             * X-coordinate of drawings zero point\n             *\n             * @type {number}\n             */\n            this.drawX = this.drawWidth / 2;\n\n            /**\n             * Y-coordinate of drawings zero point\n             *\n             * @type {number}\n             */\n            this.drawY = this.drawHeight / 2;\n\n            /**\n             * Minimal side length in pixels of the drawing\n             *\n             * @type {number}\n             */\n            this.minSide = this.drawX < this.drawY ? this.drawX : this.drawY;\n\n            this.elementClone.initialized = false;\n\n            this.contextClone.translate(this.drawX, this.drawY);\n            this.contextClone.save();\n\n            this.context.translate(this.drawX, this.drawY);\n            this.context.save();\n\n            this.context.max = this.contextClone.max = this.minSide;\n            this.context.maxRadius = this.contextClone.maxRadius = null;\n        }\n\n        /**\n         * Destroys this object, removing the references from memory\n         */\n\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            var index = SmartCanvas.collection.indexOf(this);\n\n            /* istanbul ignore else */\n            if (~index) {\n                SmartCanvas.collection.splice(index, 1);\n            }\n\n            // derefecence all created elements\n            this.context.max = null;\n            delete this.context.max;\n\n            this.context.maxRadius = null;\n            delete this.context.maxRadius;\n\n            this.context = null;\n            this.contextClone = null;\n            this.elementClone = null;\n            this.element = null;\n\n            /**\n             * On canvas redraw event callback\n             *\n             * @type {function|null|undefined}\n             */\n            this.onRedraw = null;\n        }\n\n        /**\n         * Commits the drawings\n         */\n\n    }, {\n        key: 'commit',\n        value: function commit() {\n            var scale = SmartCanvas.pixelRatio;\n\n            if (scale !== 1) {\n                this.contextClone.scale(scale, scale);\n                this.contextClone.save();\n            }\n\n            return this;\n        }\n\n        /**\n         * Redraw this object\n         */\n\n    }, {\n        key: 'redraw',\n        value: function redraw() {\n            this.init();\n\n            /**\n             * On canvas redraw event callback\n             *\n             * @type {function(): *}\n             */\n            this.onRedraw && this.onRedraw();\n\n            return this;\n        }\n\n        /**\n         * Returns current device pixel ratio\n         *\n         * @returns {number}\n         */\n\n    }], [{\n        key: 'redraw',\n\n\n        /**\n         * Forces redraw all canvas in the current collection\n         */\n        value: function redraw() {\n            var i = 0;\n            var s = SmartCanvas.collection.length;\n\n            for (; i < s; i++) {\n                SmartCanvas.collection[i].redraw();\n            }\n        }\n    }, {\n        key: 'pixelRatio',\n        get: function get() {\n            /* istanbul ignore next */\n            //noinspection JSUnresolvedVariable\n            return window.devicePixelRatio || 1;\n        }\n    }]);\n\n    return SmartCanvas;\n}();\n\nSmartCanvas.collection = [];\n\n/* istanbul ignore next: very browser-specific testing required to cover */\n//noinspection JSUnresolvedVariable\nif (window.matchMedia) {\n    //noinspection JSUnresolvedFunction\n    window.matchMedia('screen and (min-resolution: 2dppx)').addListener(SmartCanvas.redraw);\n}\n\n/*!\n * @license\n * Minimalistic HTML5 Canvas Gauge implementation\n *\n * This code is subject to MIT license.\n *\n * Copyright (c) 2012 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/**\n * Describes rendering target element. Can be either string identifier of\n * the element or the element itself.\n *\n * @typedef {HTMLElement|string} RenderTarget\n */\n\n/**\n * Highlight area definition.\n * It describes highlight area starting from value to value using\n * color. Color can be describes with hex, rgb or rgba value.\n *\n * @typedef {{ from: number, to: number, color: string}} Highlight\n */\n\n/**\n *\n * @type {{renderTo: RenderTarget, width: number, height: number, minValue: number, maxValue: number, value: number, units: string|boolean, majorTicks: number[]|string[], minorTicks: number, strokeTicks: boolean, updateValueOnAnimation: boolean, glow: boolean, title: string|boolean, borders: boolean, valueInt: number, valueDec: number, majorTicksInt: number, majorTicksDec: number, animation: boolean, animationDuration: number, animationRule: string|AnimationRule, colorPlate: string, colorMajorTicks: string, colorMinorTicks: string, colorTitle: string, colorUnits: string, colorNumbers: string, colorNeedleStart: string, colorNeedleEnd: string, colorValueText: string, colorValueTextShadow: string, colorBorderShadow: string, colorBorderOuterStart: string, colorBorderOuterEnd: string, colorBorderMiddleStart: string, colorBorderMiddleEnd: string, colorBorderInnerStart: string, colorBorderInnerEnd: string, needle: boolean, needleShadow: boolean, needleType: string, needleStart: number, needleEnd: number, needleWidth: number, borderOuterWidth: number, borderMiddleWidth: number, borderInnerWidth: number, borderShadowWidth: number, valueBox: boolean, valueText: string|boolean, highlights: Highlight[]}} GenericOptions\n */\nvar GenericOptions = {\n    // basic options\n    renderTo: null,\n    width: 200,\n    height: 200,\n    minValue: 0,\n    maxValue: 100,\n    value: 0,\n    units: false,\n    majorTicks: [0, 20, 40, 60, 80, 100],\n    minorTicks: 10,\n    strokeTicks: true,\n    updateValueOnAnimation: false,\n    glow: true,\n    title: false,\n    borders: true,\n\n    // number formats\n    valueInt: 3,\n    valueDec: 2,\n    majorTicksInt: 1,\n    majorTicksDec: 0,\n\n    // animations\n    animation: true,\n    animationDuration: 250,\n    animationRule: 'cycle',\n\n    // colors\n    colorPlate: '#fff',\n    colorMajorTicks: '#444',\n    colorMinorTicks: '#666',\n    colorTitle: '#888',\n    colorUnits: '#888',\n    colorNumbers: '#444',\n    colorNeedleStart: 'rgba(240,128,128,1)',\n    colorNeedleEnd: 'rgba(255,160,122,.9)',\n    colorValueText: '#444',\n    colorValueTextShadow: 'rgba(0,0,0,0.3)',\n    colorBorderShadow: 'rgba(0,0,0,0.5)',\n    colorBorderOuterStart: '#ddd',\n    colorBorderOuterEnd: '#aaa',\n    colorBorderMiddleStart: '#eee',\n    colorBorderMiddleEnd: '#f0f0f0',\n    colorBorderInnerStart: '#fafafa',\n    colorBorderInnerEnd: '#ccc',\n\n    // needle\n    needle: true,\n    needleShadow: true,\n    needleType: 'arrow',\n    needleStart: 5,\n    needleEnd: 85,\n    needleWidth: 4,\n\n    // borders\n    borderOuterWidth: 3,\n    borderMiddleWidth: 3,\n    borderInnerWidth: 3,\n    borderShadowWidth: 3,\n\n    // value and highlights\n    valueBox: true,\n    valueText: true,\n    highlights: [{ from: 20, to: 60, color: '#eee' }, { from: 60, to: 80, color: '#ccc' }, { from: 80, to: 100, color: '#999' }]\n};\n\nGenericOptions;\n\n/*!\n * @license\n * Minimalistic HTML5 Canvas Gauge implementation\n *\n * This code is subject to MIT license.\n *\n * Copyright (c) 2012 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/**\n * Gauge collections type.\n *\n * It is used ES5 declaration here, because babel\n * transpiles inheritance incorrectly in this case.\n *\n * @class Collection\n * @constructor\n */\nfunction Collection() {\n    Array.prototype.constructor.apply(this, arguments);\n}\n\nCollection.prototype = Object.create(Array.prototype);\nCollection.prototype.constructor = Collection;\n\n/**\n * Returns gauge object by its identifier or index in the collection\n *\n * @param {string|number} id\n * @return {*}\n */\nCollection.prototype.get = function (id) {\n    if (typeof id === 'string') {\n        var i = 0;\n        var s = this.length;\n\n        for (; i < s; i++) {\n            var canvas = this[i].options.renderTo.tagName ? this[i].options.renderTo :\n            /* istanbul ignore next: should be tested with e2e tests */\n            document.getElementById(this[i].options.renderTo || '');\n\n            if (canvas.getAttribute('id') === id) {\n                return this[i];\n            }\n        }\n    } else if (typeof id === 'number') {\n        return this[id];\n    }\n\n    return null;\n};\n\nvar gaugesCollection = new Collection();\n\n/**\n * Basic abstract BaseGauge class implementing common functionality\n * for different type of gauges.\n *\n * It should not be instantiated directly but must be extended by a final\n * gauge implementation.\n *\n * @abstract\n * @example\n *\n * class MyCoolGauge extends BaseGauge {\n *\n *     // theses methods below MUST be implemented:\n *\n *     constructor(options) {\n *        // ... do something with options\n *        super(options);\n *        // ... implement anything else\n *     }\n *\n *     draw() {\n *         // ... some implementation here\n *         return this;\n *     }\n * }\n */\n\nvar BaseGauge = function () {\n\n    /**\n     * @constructor\n     * @abstract\n     * @param {GenericOptions} options\n     */\n    function BaseGauge(options) {\n        _classCallCheck(this, BaseGauge);\n\n        var className = this.constructor.name;\n\n        if (className === 'BaseGauge') {\n            throw new TypeError('Attempt to instantiate abstract class!');\n        }\n\n        gaugesCollection.push(this);\n\n        /**\n         * Gauge type name\n         *\n         * @type {string} typeName\n         */\n        this.typeName = className;\n\n        /**\n         * Gauge type class\n         *\n         * @type {BaseGauge} type\n         */\n        this.type = window[className];\n\n        options.minValue = parseFloat(options.minValue);\n        options.maxValue = parseFloat(options.maxValue);\n\n        if (!options.borders) {\n            options.borderInnerWidth = options.borderMiddleWidth = options.borderOuterWidth = 0;\n        }\n\n        /**\n         * Gauge options\n         *\n         * @type {GenericOptions} options\n         */\n        this.options = options || {};\n\n        if (!options.renderTo) {\n            throw TypeError('Canvas element was not specified when creating ' + 'the Gauge object!');\n        }\n\n        var canvas = options.renderTo.tagName ? options.renderTo :\n        /* istanbul ignore next: to be tested with e2e tests */\n        document.getElementById(options.renderTo);\n\n        /**\n         * @type {SmartCanvas} canvas\n         */\n        this.canvas = new SmartCanvas(canvas, options.width, options.height);\n        this.canvas.onRedraw = this.draw.bind(this);\n\n        /**\n         * @type {Animation} animation\n         */\n        this.animation = new Animation(options.animationRule, options.animationDuration);\n    }\n\n    /**\n     * Sets new value for this gauge.\n     * If gauge is animated by configuration it will trigger a proper animation.\n     * Upsetting a value triggers gauge redraw.\n     *\n     * @param {number} value\n     */\n\n\n    _createClass(BaseGauge, [{\n        key: 'update',\n\n\n        /**\n         * Updates gauge configuration options at runtime and redraws the gauge\n         *\n         * @param {GaugeOptions} options\n         * @returns {BaseGauge}\n         */\n        value: function update(options) {\n            Object.assign(this.options, options || {});\n\n            this.canvas.width = this.options.width;\n            this.canvas.height = this.options.height;\n\n            this.animation.rule = this.options.animationRule;\n            this.animation.duration = this.options.animationDuration;\n\n            this.canvas.redraw();\n\n            return this;\n        }\n\n        /**\n         * Performs destruction of this object properly\n         */\n\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            var index = gaugesCollection.indexOf(this);\n\n            /* istanbul ignore else */\n            if (~index) {\n                //noinspection JSUnresolvedFunction\n                gaugesCollection.splice(index, 1);\n            }\n\n            this.canvas.destroy();\n            this.canvas = null;\n\n            this.animation.destroy();\n            this.animation = null;\n        }\n\n        /**\n         * Triggering gauge render on a canvas.\n         *\n         * @abstract\n         * @returns {BaseGauge}\n         */\n\n    }, {\n        key: 'draw',\n        value: function draw() {\n            throw new TypeError('draw() must be implemented by a child class!');\n        }\n\n        /**\n         * Collection of the gauges on a page.\n         * The collection is singleton collection of the gauges spread\n         * across all gauge types.\n         *\n         * @return {Collection}\n         */\n\n    }, {\n        key: 'value',\n        set: function set(value) {\n            var _this3 = this;\n\n            if (value === this.options.value) return;\n\n            if (this.options.animation) {\n                (function () {\n                    var fromValue = _this3.options.value;\n\n                    /**\n                     * @type {number}\n                     * @access private\n                     */\n                    _this3._value = value;\n\n                    _this3.animation.animate(function (percent) {\n                        _this3.options.value = fromValue + (value - fromValue) * percent;\n\n                        _this3.draw();\n                    }, function () {\n                        _this3.options.value = value;\n                        delete _this3._value;\n                        _this3.draw();\n                    });\n                })();\n            } else {\n                this.options.value = value;\n                this.draw();\n            }\n        }\n\n        /**\n         * Returns current value of the gauge\n         *\n         * @return {number}\n         */\n        ,\n        get: function get() {\n            return typeof this._value === 'undefined' ? this.options.value : this._value;\n        }\n    }], [{\n        key: 'initialize',\n\n\n        /**\n         * Inject given gauge object into DOM\n         *\n         * @param {string} Type\n         * @param {GenericOptions} options\n         */\n        value: function initialize(Type, options) {\n            new DomObserver(options, 'canvas', Type);\n        }\n    }, {\n        key: 'collection',\n        get: function get() {\n            return gaugesCollection;\n        }\n    }]);\n\n    return BaseGauge;\n}();\n\nwindow['BaseGauge'] = BaseGauge;\n\n/*!\n * @license\n * Minimalistic HTML5 Canvas Gauge implementation\n *\n * This code is subject to MIT license.\n *\n * Copyright (c) 2012 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/**\n * @access private\n * @typedef {CanvasRenderingContext2D|{max: number, maxRadius: number, barDimensions: object}} Canvas2DContext\n */\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws rounded corners rectangle\n *\n * @param {Canvas2DContext} context\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {number} r\n */\nfunction roundRect(context, x, y, w, h, r) {\n    context.beginPath();\n\n    context.moveTo(x + r, y);\n    context.lineTo(x + w - r, y);\n\n    context.quadraticCurveTo(x + w, y, x + w, y + r);\n    context.lineTo(x + w, y + h - r);\n\n    context.quadraticCurveTo(x + w, y + h, x + w - r, y + h);\n    context.lineTo(x + r, y + h);\n\n    context.quadraticCurveTo(x, y + h, x, y + h - r);\n    context.lineTo(x, y + r);\n\n    context.quadraticCurveTo(x, y, x + r, y);\n\n    context.closePath();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Pads a given value with leading zeros using the given options\n *\n * @param {number} val\n * @param {GaugeOptions|{valueInt: number, valueDec: number}} options\n * @returns {string}\n */\nfunction padValue(val, options) {\n    var dec = options.valueDec;\n    var int = options.valueInt;\n    var i = 0;\n    var s = void 0,\n        strVal = void 0,\n        n = void 0;\n\n    val = parseFloat(val);\n    n = val < 0;\n    val = Math.abs(val);\n\n    if (dec > 0) {\n        strVal = val.toFixed(dec).toString().split('.');\n        s = int - strVal[0].length;\n\n        for (; i < s; ++i) {\n            strVal[0] = '0' + strVal[0];\n        }\n\n        strVal = (n ? '-' : '') + strVal[0] + '.' + strVal[1];\n    } else {\n        strVal = Math.round(val).toString();\n        s = int - strVal.length;\n\n        for (; i < s; ++i) {\n            strVal = '0' + strVal;\n        }\n\n        strVal = (n ? '-' : '') + strVal;\n    }\n\n    return strVal;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Formats a number for display on the dial's plate using the majorTicksFormat\n * config option.\n *\n * @param {number} num number to format\n * @param {object} options\n * @returns {string} formatted number\n */\nfunction formatMajorTickNumber(num, options) {\n    var right = void 0,\n        hasDec = false;\n\n    // First, force the correct number of digits right of the decimal.\n    if (options.majorTicksDec === 0) {\n        right = Math.round(num).toString();\n    } else {\n        right = num.toFixed(options.majorTicksDec);\n    }\n\n    // Second, force the correct number of digits left of the decimal.\n    if (options.majorTicksInt > 1) {\n        // Does this number have a decimal?\n        hasDec = ~right.indexOf('.');\n\n        // Is this number a negative number?\n        if (~right.indexOf('-')) {\n            return '-' + [options.majorTicksInt + options.majorTicksDec + 2 + (hasDec ? 1 : 0) - right.length].join('0') + right.replace('-', '');\n        } else {\n            return [options.majorTicksInt + options.majorTicksDec + 1 + (hasDec ? 1 : 0) - right.length].join('0') + right;\n        }\n    }\n\n    return right;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Transforms degrees to radians\n *\n * @param {number} degrees\n * @returns {number}\n */\nfunction radians(degrees) {\n    return degrees * Math.PI / 180;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Calculates and returns radial point coordinates\n *\n * @param {number} radius\n * @param {number} angle\n * @returns {{x: number, y: number}}\n */\nfunction radialPoint(radius, angle) {\n    return { x: -radius * Math.sin(angle), y: radius * Math.cos(angle) };\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Creates and returns linear gradient canvas object\n *\n * @param {Canvas2DContext} context\n * @param {string} colorFrom\n * @param {string} colorTo\n * @param {number} length\n * @returns {CanvasGradient}\n */\nfunction linearGradient(context, colorFrom, colorTo, length) {\n    var grad = context.createLinearGradient(0, 0, 0, length);\n\n    grad.addColorStop(0, colorFrom);\n    grad.addColorStop(1, colorTo);\n\n    return grad;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge needle shadow\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {GaugeOptions} options\n */\nfunction drawNeedleShadow(context, options) {\n    if (!options.needleShadow) return;\n\n    context.shadowOffsetX = 2;\n    context.shadowOffsetY = 2;\n    context.shadowBlur = 10;\n    context.shadowColor = options.colorNeedleShadowDown;\n}\n\nvar drawings = {\n    roundRect: roundRect,\n    padValue: padValue,\n    formatMajorTickNumber: formatMajorTickNumber,\n    radians: radians,\n    radialPoint: radialPoint,\n    linearGradient: linearGradient,\n    drawNeedleShadow: drawNeedleShadow\n};\n\ndrawings;\n\n/*!\n * @license\n * Minimalistic HTML5 Canvas Gauge implementation\n *\n * This code is subject to MIT license.\n *\n * Copyright (c) 2012 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n// todo: customizable fonts\n// todo: readme and documentation update\n// todo: github pages\n// todo: wiki\n// todo: LinearGauge implementation\n// todo: online configurator\n// todo: online packager\n// todo: e2e tests\n// todo: angular 2 integration\n// todo: react integrations\n// todo: typescript definitions\n\n/**\n * Gauge configuration options\n *\n * @typedef {GenericOptions|{ticksAngle: number, startAngle: number, colorNeedleCircleOuterStart: string, colorNeedleCircleOuterEnd: string, colorNeedleCircleInnerStart: string, colorNeedleCircleInnerEnd: string, colorNeedleShadowUp: string, colorNeedleShadowDown: string, colorValueBoxRectStart: string, colorValueBoxRectEnd: string, colorValueBoxBackground: string, colorValueBoxShadow: string, needleStart: number, needleEnd: number, needleWidth: number, needleCircleSize: number, needleCircleInner: boolean, needleCircleOuter: boolean}} GaugeOptions\n */\n\n/**\n * Default gauge configuration options\n *\n * @access private\n * @type {GaugeOptions}\n */\nvar defaultGaugeOptions = Object.assign({}, GenericOptions, {\n    // basic options\n    ticksAngle: 270,\n    startAngle: 45,\n\n    // colors\n    colorNeedleCircleOuterStart: '#f0f0f0',\n    colorNeedleCircleOuterEnd: '#ccc',\n    colorNeedleCircleInnerStart: '#e8e8e8',\n    colorNeedleCircleInnerEnd: '#f5f5f5',\n    colorNeedleShadowUp: 'rgba(2,255,255,0.2)',\n    colorNeedleShadowDown: 'rgba(188,143,143,0.45)',\n    colorValueBoxRectStart: '#888',\n    colorValueBoxRectEnd: '#666',\n    colorValueBoxBackground: '#babab2',\n    colorValueBoxShadow: 'rgba(0,0,0,1)',\n\n    // needle\n    needleCircleSize: 10,\n    needleCircleInner: true,\n    needleCircleOuter: true\n});\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gradient-filled circle on a canvas\n *\n * @access private\n * @param {number} radius\n * @param {Canvas2DContext} context\n * @param {string} start gradient start color\n * @param {string} end gradient end color\n */\nfunction drawCircle(radius, context, start, end) {\n    context.beginPath();\n    context.arc(0, 0, radius, 0, Math.PI * 2, true);\n    context.fillStyle = drawings.linearGradient(context, start, end, radius);\n    context.fill();\n    context.closePath();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Returns max radius without borders for the gauge\n *\n * @param {Canvas2DContext} context\n * @param {GaugeOptions} options\n * @return {number}\n */\nfunction maxRadius(context, options) {\n    if (!context.maxRadius) {\n        context.maxRadius = context.max - options.borderShadowWidth - options.borderOuterWidth - options.borderMiddleWidth - options.borderInnerWidth;\n    }\n\n    return context.maxRadius;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge plate on the canvas\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {GaugeOptions} options\n */\nfunction drawPlate(context, options) {\n    var d0 = options.borderShadowWidth;\n    var r0 = context.max - options.borderShadowWidth;\n    var r1 = r0 - options.borderOuterWidth;\n    var r2 = r1 - options.borderMiddleWidth;\n    var r3 = maxRadius(context, options);\n\n    context.save();\n\n    if (options.glow) {\n        context.shadowBlur = d0;\n        context.shadowColor = options.colorBorderShadow;\n    }\n\n    if (options.borderOuterWidth) {\n        drawCircle(r0, context, options.colorBorderOuterStart, options.colorBorderOuterEnd);\n    }\n\n    if (options.borderMiddleWidth) {\n        drawCircle(r1, context, options.colorBorderMiddleStart, options.colorBorderMiddleEnd);\n    }\n\n    if (options.borderInnerWidth) {\n        drawCircle(r2, context, options.colorBorderInnerStart, options.colorBorderInnerEnd);\n    }\n\n    context.restore();\n\n    context.beginPath();\n    context.arc(0, 0, r3, 0, Math.PI * 2, true);\n    context.fillStyle = options.colorPlate;\n    context.fill();\n    context.closePath();\n\n    context.save();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge highlight areas on a canvas\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {GaugeOptions} options\n */\nfunction drawHighlights(context, options) {\n    context.save();\n\n    var r1 = maxRadius(context, options) - context.max * .05;\n    var r2 = r1 - context.max * .15;\n    var i = 0,\n        s = options.highlights.length;\n\n    for (; i < s; i++) {\n        var hlt = options.highlights[i];\n        var vd = (options.maxValue - options.minValue) / options.ticksAngle;\n        var sa = drawings.radians(options.startAngle + (hlt.from - options.minValue) / vd);\n        var ea = drawings.radians(options.startAngle + (hlt.to - options.minValue) / vd);\n        var ps = drawings.radialPoint(r2, sa);\n        var pe = drawings.radialPoint(r1, sa);\n        var ps1 = drawings.radialPoint(r1, ea);\n        var pe1 = drawings.radialPoint(r2, ea);\n\n        context.beginPath();\n        context.rotate(drawings.radians(90));\n        context.arc(0, 0, r1, sa, ea, false);\n        context.restore();\n        context.save();\n        context.moveTo(ps.x, ps.y);\n        context.lineTo(pe.x, pe.y);\n        context.lineTo(ps1.x, ps1.y);\n        context.lineTo(pe1.x, pe1.y);\n        context.lineTo(ps.x, ps.y);\n        context.closePath();\n\n        context.fillStyle = hlt.color;\n        context.fill();\n\n        context.beginPath();\n        context.rotate(drawings.radians(90));\n        context.arc(0, 0, r2, sa - 0.2, ea + 0.2, false);\n        context.restore();\n        context.closePath();\n\n        context.fillStyle = options.colorPlate;\n        context.fill();\n        context.save();\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws minor ticks bar on a canvas\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {GaugeOptions} options\n */\nfunction drawMinorTicks(context, options) {\n    var radius = maxRadius(context, options) - context.max * .05;\n\n    context.lineWidth = SmartCanvas.pixelRatio;\n    context.strokeStyle = options.colorMinorTicks;\n\n    context.save();\n\n    var s = options.minorTicks * (options.majorTicks.length - 1);\n    var i = 0;\n\n    for (; i < s; ++i) {\n        var angle = options.startAngle + i * (options.ticksAngle / s);\n\n        context.rotate(drawings.radians(angle));\n\n        context.beginPath();\n        context.moveTo(0, radius);\n        context.lineTo(0, radius - context.max * .075);\n        context.stroke();\n        context.restore();\n        context.closePath();\n\n        context.save();\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge major ticks bar on a canvas\n *\n * @param {Canvas2DContext} context\n * @param {GaugeOptions} options\n */\nfunction drawMajorTicks(context, options) {\n    var r = maxRadius(context, options) - context.max * .05;\n    var i = void 0;\n    var s = options.majorTicks.length;\n    var pixelRatio = SmartCanvas.pixelRatio;\n\n    context.lineWidth = 2 * pixelRatio;\n    context.strokeStyle = options.colorMajorTicks;\n    context.save();\n\n    if (s === 0) {\n        options.majorTicks.push(drawings.formatMajorTickNumber(options.minValue, options));\n        options.majorTicks.push(drawings.formatMajorTickNumber(options.maxValue, options));\n        s = 2;\n    }\n\n    i = 0;\n    for (; i < s; ++i) {\n        var a = options.startAngle + i * (options.ticksAngle / (s - 1));\n        context.rotate(drawings.radians(a));\n\n        context.beginPath();\n        context.moveTo(0, r);\n        context.lineTo(0, r - context.max * .15);\n        context.stroke();\n\n        context.restore();\n        context.closePath();\n        context.save();\n    }\n\n    if (options.strokeTicks) {\n        context.rotate(drawings.radians(90));\n\n        context.beginPath();\n        context.arc(0, 0, r, drawings.radians(options.startAngle), drawings.radians(options.startAngle + options.ticksAngle), false);\n        context.stroke();\n        context.restore();\n        context.closePath();\n\n        context.save();\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge bar numbers\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {GaugeOptions} options\n */\nfunction drawNumbers(context, options) {\n    var radius = maxRadius(context, options) - context.max * .35;\n    var points = {};\n    var i = 0;\n    var s = options.majorTicks.length;\n\n    for (; i < s; ++i) {\n        var angle = options.startAngle + i * (options.ticksAngle / (s - 1));\n        var point = drawings.radialPoint(radius, drawings.radians(angle));\n\n        if (angle === 360) angle = 0;\n\n        if (points[angle]) {\n            continue; //already drawn at this place, skipping\n        }\n\n        points[angle] = true;\n\n        context.font = 20 * (context.max / 200) + 'px Arial';\n        context.fillStyle = options.colorNumbers;\n        context.lineWidth = 0;\n        context.textAlign = 'center';\n        context.fillText(options.majorTicks[i], point.x, point.y + 3);\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge title\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {GaugeOptions} options\n */\nfunction drawTitle(context, options) {\n    if (!options.title) return;\n\n    context.save();\n    context.font = 24 * (context.max / 200) + 'px Arial';\n    context.fillStyle = options.colorTitle;\n    context.textAlign = 'center';\n    context.fillText(options.title, 0, -context.max / 4.25, context.max * .8);\n    context.restore();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws units name on the gauge\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {GaugeOptions} options\n */\nfunction drawUnits(context, options) {\n    if (!options.units) return;\n\n    context.save();\n    context.font = 22 * (context.max / 200) + 'px Arial';\n    context.fillStyle = options.colorUnits;\n    context.textAlign = 'center';\n    context.fillText(options.units, 0, context.max / 3.25, context.max * .8);\n    context.restore();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge needle\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {GaugeOptions} options\n */\nfunction drawNeedle(context, options) {\n    if (!options.needle) return;\n\n    var value = options.value;\n    var max = maxRadius(context, options);\n    var r1 = max / 100 * options.needleCircleSize;\n    var r2 = max / 100 * options.needleCircleSize * 0.75;\n    var rIn = max / 100 * options.needleEnd;\n    var rStart = options.needleStart ? max / 100 * options.needleStart : 0,\n        rOut = max * .2;\n    var pad1 = max / 100 * options.needleWidth;\n    var pad2 = max / 100 * options.needleWidth / 2;\n    var pixelRatio = SmartCanvas.pixelRatio;\n\n    drawings.drawNeedleShadow(context, options);\n\n    context.save();\n\n    context.rotate(drawings.radians(options.startAngle + (value - options.minValue) / (options.maxValue - options.minValue) * options.ticksAngle));\n\n    if (options.needleType === 'arrow') {\n        context.beginPath();\n        context.moveTo(-pad2, -rOut);\n        context.lineTo(-pad1, 0);\n        context.lineTo(-1 * pixelRatio, rIn);\n        context.lineTo(pixelRatio, rIn);\n        context.lineTo(pad1, 0);\n        context.lineTo(pad2, -rOut);\n        context.closePath();\n\n        context.fillStyle = drawings.linearGradient(context, options.colorNeedleStart, options.colorNeedleEnd, rIn - rOut);\n        context.fill();\n\n        context.beginPath();\n        context.lineTo(-0.5 * pixelRatio, rIn);\n        context.lineTo(-1 * pixelRatio, rIn);\n        context.lineTo(-pad1, 0);\n        context.lineTo(-pad2, -rOut);\n        context.lineTo(pad2 / 2 * pixelRatio - 2 * pixelRatio, -rOut);\n        context.closePath();\n        context.fillStyle = options.colorNeedleShadowUp;\n        context.fill();\n    } else {\n        // simple line needle\n        context.beginPath();\n        context.moveTo(-pad2, rIn);\n        context.lineTo(-pad2, rStart);\n        context.lineTo(pad2, rStart);\n        context.lineTo(pad2, rIn);\n        context.closePath();\n\n        context.fillStyle = drawings.linearGradient(context, options.colorNeedleStart, options.colorNeedleEnd, rIn - rOut);\n        context.fill();\n    }\n\n    context.restore();\n\n    if (options.needleCircleSize) {\n        drawings.drawNeedleShadow(context, options);\n\n        if (options.needleCircleOuter) {\n            context.beginPath();\n            context.arc(0, 0, r1, 0, Math.PI * 2, true);\n            context.fillStyle = drawings.linearGradient(context, options.colorNeedleCircleOuterStart, options.colorNeedleCircleOuterEnd, r1);\n            context.fill();\n            context.restore();\n            context.closePath();\n        }\n\n        if (options.needleCircleInner) {\n            context.beginPath();\n            context.arc(0, 0, r2, 0, Math.PI * 2, true);\n            context.fillStyle = drawings.linearGradient(context, options.colorNeedleCircleInnerStart, options.colorNeedleCircleInnerEnd, r2);\n            context.fill();\n            context.closePath();\n        }\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge value box\n *\n * @param {Canvas2DContext} context\n * @param {GaugeOptions} options\n * @param {number} value\n */\nfunction drawValueBox(context, options, value) {\n    if (!options.valueText) return;\n\n    var max = context.max;\n    var text = drawings.padValue(value, options);\n    var y = max - max * .33;\n    var x = 0;\n\n    context.save();\n    context.font = 40 * (max / 200) + 'px Led';\n    context.save();\n\n    if (options.valueBox) {\n        var th = 0.12 * max;\n        var tw = context.measureText('-' + drawings.padValue(0, options)).width;\n\n        drawings.roundRect(context, -tw / 2 - 0.025 * max, y - th - 0.04 * max, tw + 0.05 * max, th + 0.07 * max, 0.025 * max);\n    }\n\n    var gy = y - 0.12 * max - 0.025 * max + (0.12 * max + 0.045 * max) / 2;\n    var grd = context.createRadialGradient(x, gy, max / 10, x, gy, max / 5);\n\n    grd.addColorStop(0, options.colorValueBoxRectStart);\n    grd.addColorStop(1, options.colorValueBoxRectEnd);\n\n    context.strokeStyle = grd;\n    context.lineWidth = 0.05 * max;\n    context.stroke();\n\n    context.shadowBlur = 0.012 * max;\n    context.shadowColor = options.colorValueBoxShadow;\n\n    context.fillStyle = options.colorValueBoxBackground;\n    context.fill();\n\n    context.restore();\n\n    context.shadowOffsetX = 0.004 * max;\n    context.shadowOffsetY = 0.004 * max;\n    context.shadowBlur = 0.012 * max;\n    context.shadowColor = options.colorValueTextShadow;\n\n    context.fillStyle = options.colorValueText;\n    context.textAlign = 'center';\n    context.fillText(text, -x, y);\n\n    context.restore();\n}\n\n/**\n * Minimalistic HTML5 Canvas Gauge\n * @example\n *  var gauge = new Gauge({\n *     renderTo: 'gauge-id', // identifier of HTML canvas element or element itself\n *     width: 400,\n *     height: 400,\n *     units: 'Km/h',\n *     title: false,\n *     value: 0,\n *     minValue: 0,\n *     maxValue: 220,\n *     majorTicks: [\n *         '0','20','40','60','80','100','120','140','160','180','200','220'\n *     ],\n *     minorTicks: 2,\n *     strokeTicks: false,\n *     highlights: [\n *         { from: 0, to: 50, color: 'rgba(0,255,0,.15)' },\n *         { from: 50, to: 100, color: 'rgba(255,255,0,.15)' },\n *         { from: 100, to: 150, color: 'rgba(255,30,0,.25)' },\n *         { from: 150, to: 200, color: 'rgba(255,0,225,.25)' },\n *         { from: 200, to: 220, color: 'rgba(0,0,255,.25)' }\n *     ],\n *     colorPlate: '#222',\n *     colorMajorTicks: '#f5f5f5',\n *     colorMinorTicks: '#ddd',\n *     colorTitle: '#fff',\n *     colorUnits: '#ccc',\n *     colorNumbers: '#eee',\n *     colorNeedleStart: 'rgba(240, 128, 128, 1)',\n *     colorNeedleEnd: 'rgba(255, 160, 122, .9)',\n *     valueBox: true,\n *     animationRule: 'bounce'\n * });\n * // draw initially\n * gauge.draw();\n * // animate\n * setInterval(() => {\n *    gauge.value = Math.random() * -220 + 220;\n * }, 1000);\n */\n\nvar Gauge = function (_BaseGauge) {\n    _inherits(Gauge, _BaseGauge);\n\n    /**\n     * @constructor\n     * @param {GaugeOptions} options\n     */\n    function Gauge(options) {\n        _classCallCheck(this, Gauge);\n\n        options = Object.assign({}, defaultGaugeOptions, options || {});\n\n        /* istanbul ignore if */\n        if (isNaN(options.startAngle)) options.startAngle = 45;\n        /* istanbul ignore if */\n        if (isNaN(options.ticksAngle)) options.ticksAngle = 270;\n\n        /* istanbul ignore if */\n        if (options.ticksAngle > 360) options.ticksAngle = 360;\n        /* istanbul ignore if */\n        if (options.ticksAngle < 0) options.ticksAngle = 0;\n\n        /* istanbul ignore if */\n        if (options.startAngle < 0) options.startAngle = 0;\n        /* istanbul ignore if */\n        if (options.startAngle > 360) options.startAngle = 360;\n\n        return _possibleConstructorReturn(this, Object.getPrototypeOf(Gauge).call(this, options));\n    }\n\n    /*  */\n    /**\n     * Triggering gauge render on a canvas.\n     *\n     * @returns {Gauge}\n     */\n\n\n    _createClass(Gauge, [{\n        key: 'draw',\n        value: function draw() {\n            var canvas = this.canvas;\n            var x = -canvas.drawX;\n            var y = -canvas.drawY;\n            var w = canvas.drawWidth;\n            var h = canvas.drawHeight;\n\n            var options = this.options;\n\n            if (!canvas.elementClone.initialized) {\n                var context = canvas.contextClone;\n\n                // clear the cache\n                context.clearRect(x, y, w, h);\n                context.save();\n\n                drawPlate(context, options);\n                drawHighlights(context, options);\n                drawMinorTicks(context, options);\n                drawMajorTicks(context, options);\n                drawNumbers(context, options);\n                drawTitle(context, options);\n                drawUnits(context, options);\n\n                canvas.elementClone.initialized = true;\n            }\n\n            this.canvas.commit();\n\n            // clear the canvas\n            canvas.context.clearRect(x, y, w, h);\n            canvas.context.save();\n\n            canvas.context.drawImage(canvas.elementClone, x, y, w, h);\n            canvas.context.save();\n\n            drawValueBox(canvas.context, options, this.value);\n            drawNeedle(canvas.context, options);\n\n            return this;\n        }\n    }]);\n\n    return Gauge;\n}(BaseGauge);\n\nwindow['Gauge'] = Gauge;\n\nBaseGauge.initialize('Gauge', defaultGaugeOptions);\n\n/*!\n * @license\n * Minimalistic HTML5 Canvas Gauge implementation\n *\n * This code is subject to MIT license.\n *\n * Copyright (c) 2012 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/**\n * Linear gauge configuration options\n *\n * @typedef {GenericOptions|{orientation: string, borderRadius: number, barBeginCircle: number, barWidth: number, barStrokeWidth: number, barProgress: boolean, colorBar: string, colorBarEnd: string, colorBarStroke: string, colorBarProgress: string, colorBarProgressEnd: string, tickSide: string, needleSide: string, numberSide: string}} LinearGaugeOptions\n */\n\n/**\n * Default linear gauge configuration options\n *\n * @type {LinearGaugeOptions}\n */\nvar defaultLinearGaugeOptions = Object.assign({}, GenericOptions, {\n    // basic options\n    borderRadius: 0,\n    width: 150,\n    height: 400,\n\n    // bar\n    barBeginCircle: 30, // percents\n    barWidth: 20, // percents\n    barStrokeWidth: 0, // pixels\n    barProgress: true,\n\n    colorBarStroke: '#222',\n    colorBar: '#ccc',\n    colorBarEnd: '',\n    colorBarProgress: '#888',\n    colorBarProgressEnd: '',\n\n    needleWidth: 6,\n\n    tickSide: 'both', // available: 'left', 'right', 'both'\n    needleSide: 'both', // available: 'left', 'right', 'both'\n\n    numberSide: 'both' // available: 'left', 'right', 'both'\n});\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws rectangle on a canvas\n *\n * @param {Canvas2DContext} context\n * @param {number} r radius for founded corner rectangle if 0 or less won't be drawn\n * @param {number} x x-coordinate of the top-left corner\n * @param {number} y y-coordinate of the top-left corner\n * @param {number} w width of the rectangle\n * @param {number} h height of the rectangle\n * @param {string} colorStart base fill color of the rectangle\n * @param {string} [colorEnd] gradient color of the rectangle\n */\nfunction drawRectangle(context, r, x, y, w, h, colorStart, colorEnd) {\n    context.beginPath();\n    context.fillStyle = colorEnd ? drawings.linearGradient(context, colorStart, colorEnd, w > h ? w : h) : colorStart;\n\n    r > 0 ? drawings.roundRect(context, x, y, w, h, r) : context.rect(x, y, w, h);\n\n    context.fill();\n    context.closePath();\n    context.save();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Calculates and returns linear gauge base bar dimensions.\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions|{barStrokeWidth: number, barBeginCircle: number, barWidth: number}} options\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @return {{isVertical: boolean, width: number, length: number, barWidth: number, barLength: number, strokeWidth: number, barMargin: number, radius: number, x0: number, y0: number, barOffset: number, titleMargin: number, unitsMargin: number, X: number, Y: number}}\n */\nfunction barDimensions(context, options, x, y, w, h) {\n    var pixelRatio = SmartCanvas.pixelRatio;\n    var isVertical = h >= w;\n    var width = isVertical ? w * .85 : h;\n    var length = isVertical ? h : w;\n\n    x = isVertical ? Math.round(x + (w - width) / 2) : x;\n\n    var hasTitle = !!options.title;\n    var hasUnits = !!options.units;\n\n    var titleMargin = void 0;\n    var unitsMargin = void 0;\n\n    if (isVertical) {\n        unitsMargin = titleMargin = Math.round(length * .1);\n\n        if (hasTitle) {\n            length -= titleMargin;\n            y += titleMargin;\n        }\n\n        if (hasUnits) length -= unitsMargin;\n    } else {\n        unitsMargin = titleMargin = Math.round(width * .15);\n\n        if (hasTitle) {\n            width -= titleMargin;\n            y += titleMargin;\n        }\n\n        if (hasUnits) width -= unitsMargin;\n    }\n\n    var strokeWidth = options.barStrokeWidth * 2;\n    var radius = options.barBeginCircle ? Math.round(width * options.barBeginCircle / 200 - strokeWidth / 2) : 0;\n\n    var barWidth = Math.round(width * options.barWidth / 100 - strokeWidth);\n    var barLength = Math.round(length * .85 - strokeWidth);\n    var barMargin = Math.round((length - barLength) / 2);\n\n    // coordinates for arc of the bar if configured\n    var x0 = Math.round(x + (isVertical ? width / 2 : barMargin + radius));\n    var y0 = Math.round(y + (isVertical ? length - barMargin - radius + strokeWidth / 2 : width / 2));\n\n    //noinspection JSUndefinedPropertyAssignment\n    context.barDimensions = {\n        isVertical: isVertical,\n        width: width,\n        length: length,\n        barWidth: barWidth,\n        barLength: barLength,\n        strokeWidth: strokeWidth,\n        barMargin: barMargin,\n        radius: radius,\n        pixelRatio: pixelRatio,\n        barOffset: null,\n        titleMargin: hasTitle ? titleMargin : 0,\n        unitsMargin: hasUnits ? unitsMargin : 0,\n        get ticksLength() {\n            return this.barLength - this.barOffset - this.strokeWidth;\n        },\n        X: x,\n        Y: y,\n        x0: x0,\n        y0: y0\n    };\n\n    return context.barDimensions;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws linear gauge's bar shape from the given options on a given\n * canvas context\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {number} barOpWidth\n * @param {number} barStrokeWidth\n * @param {string} strokeColor\n * @param {number} circleRadius\n * @param {string} colorStart\n * @param {string} colorEnd\n * @param {number|boolean} toValue\n * @param {number} minValue\n * @param {number} maxValue\n * @param {string} title\n * @param {string} units\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n */\nfunction drawLinearBarShape(context, barOpWidth, barStrokeWidth, strokeColor, circleRadius, colorStart, colorEnd, toValue, minValue, maxValue, title, units, x, y, w, h) {\n    var _barDimensions = barDimensions(context, {\n        barStrokeWidth: barStrokeWidth,\n        barBeginCircle: circleRadius,\n        barWidth: barOpWidth,\n        title: title,\n        units: units\n    }, x, y, w, h);\n\n    var isVertical = _barDimensions.isVertical;\n    var width = _barDimensions.width;\n    var barWidth = _barDimensions.barWidth;\n    var barLength = _barDimensions.barLength;\n    var strokeWidth = _barDimensions.strokeWidth;\n    var barMargin = _barDimensions.barMargin;\n    var radius = _barDimensions.radius;\n    var x0 = _barDimensions.x0;\n    var y0 = _barDimensions.y0;\n    var X = _barDimensions.X;\n    var Y = _barDimensions.Y;\n\n\n    context.save();\n    context.beginPath();\n\n    if (circleRadius) {\n        var direction = drawings.radians(isVertical ? 270 : 0);\n        var alpha = Math.asin(barWidth / 2 / radius);\n        var cosAlpha = Math.cos(alpha);\n        var sinAlpha = Math.sin(alpha);\n\n        var x1 = Math.round(x0 + (isVertical ? radius * sinAlpha : radius * cosAlpha - strokeWidth / 2));\n        var y1 = Math.round(isVertical ? y0 - radius * cosAlpha : y0 + radius * sinAlpha);\n        var cutRadius = isVertical ? Math.abs(y1 - y0) : Math.abs(x1 - x0);\n        // let radiusOffset = Math.round(radius - cutRadius);\n        //\n        // if (isVertical) {\n        //     y0 -= radiusOffset;\n        //     y1 -= radiusOffset;\n        // }\n        //\n        // else {\n        //     x0 -= radiusOffset;\n        //     x1 -= radiusOffset;\n        // }\n        // barLength -= radiusOffset;\n\n        context.barDimensions.barOffset = Math.round(cutRadius + radius);\n\n        // bottom point\n        var x2 = isVertical ? Math.round(x0 - radius * sinAlpha) : x1;\n        var y2 = isVertical ? y1 : Math.round(y0 - radius * sinAlpha);\n\n        if (toValue !== false) {\n            barLength = context.barDimensions.barOffset + (barLength - context.barDimensions.barOffset) * (toValue / (maxValue - minValue));\n        }\n\n        // bar ends at\n        var x3 = Math.round(x1 + barLength - context.barDimensions.barOffset + strokeWidth / 2); // h\n        var y3 = Math.round(y1 - barLength + context.barDimensions.barOffset - strokeWidth / 2); // v\n\n        context.arc(x0, y0, radius, direction + alpha, direction - alpha);\n\n        if (isVertical) {\n            context.moveTo(x1, y2);\n            context.lineTo(x1, y3);\n            context.lineTo(x2, y3);\n            context.lineTo(x2, y2);\n        } else {\n            context.moveTo(x1, y2);\n            context.lineTo(x3, y2);\n            context.lineTo(x3, y1);\n            context.lineTo(x1, y1);\n        }\n    } else {\n        // simply rectangle\n        var rx = Math.round(isVertical ? X + (width - barWidth) / 2 : X + barMargin);\n        var ry = Math.round(isVertical ? Y + barLength + barMargin : Y + (width - barWidth) / 2);\n\n        if (toValue !== false) {\n            barLength *= toValue / (maxValue - minValue);\n        }\n\n        if (isVertical) context.rect(rx, ry, barWidth, -barLength);else context.rect(rx, ry, barLength, barWidth);\n    }\n\n    if (barStrokeWidth) {\n        context.lineWidth = strokeWidth;\n        context.strokeStyle = strokeColor;\n        //context.lineJoin = 'round';\n        context.stroke();\n    }\n\n    if (colorStart) {\n        context.fillStyle = colorEnd ? drawings.linearGradient(context, colorStart, colorEnd, barLength) : colorStart;\n        context.fill();\n    }\n\n    context.closePath();\n\n    // fix dimensions for further usage\n    if (circleRadius) context.barDimensions.radius += strokeWidth;\n\n    context.barDimensions.barWidth += strokeWidth;\n    context.barDimensions.barLength += strokeWidth;\n}\n\n/**\n * Draws linear gauge's bar\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n * @param {number} x x-coordinate of the top-left corner of the gauge\n * @param {number} y y-coordinate of the top-left corner of the gauge\n * @param {number} w width of the gauge\n * @param {number} h height of the gauge\n */\nfunction drawLinearBar(context, options, x, y, w, h) {\n    drawLinearBarShape(context, options.barWidth, options.barStrokeWidth, options.colorBarStroke, options.barBeginCircle, options.colorBar, options.colorBarEnd, false, options.minValue, options.maxValue, options.title, options.units, x, y, w, h);\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws linear gauge's bar progress\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n * @param {number} x x-coordinate of the top-left corner of the gauge\n * @param {number} y y-coordinate of the top-left corner of the gauge\n * @param {number} w width of the gauge\n * @param {number} h height of the gauge\n */\nfunction drawLinearBarProgress(context, options, x, y, w, h) {\n    options.barProgress && drawLinearBarShape(context, options.barWidth, options.barStrokeWidth, 'rgba(0,0,0,0)', options.barBeginCircle, options.colorBarProgress, options.colorBarProgressEnd, options.value, options.minValue, options.maxValue, options.title, options.units, x, y, w, h);\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws linear gauge's bar highlighted areas\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n */\nfunction drawLinearBarHighlights(context, options) {\n    var _context$barDimension = context.barDimensions;\n    var isVertical = _context$barDimension.isVertical;\n    var width = _context$barDimension.width;\n    var length = _context$barDimension.length;\n    var barWidth = _context$barDimension.barWidth;\n    var barOffset = _context$barDimension.barOffset;\n    var barMargin = _context$barDimension.barMargin;\n    var X = _context$barDimension.X;\n    var Y = _context$barDimension.Y;\n    var ticksLength = _context$barDimension.ticksLength;\n\n\n    if (!options.highlights) return;\n\n    var hasLeft = options.tickSide !== 'right';\n    var hasRight = options.tickSide !== 'left';\n    var i = 0;\n    var s = options.highlights.length;\n    var tickOffset = (width - barWidth) / 2;\n    var interval = options.maxValue - options.minValue;\n    var eX = isVertical ? X + tickOffset : X + barMargin + barOffset;\n    var eH = .1 * width;\n    var eY = isVertical ? Y + length - barMargin - barOffset : Y + tickOffset;\n\n    context.save();\n\n    for (; i < s; i++) {\n        var entry = options.highlights[i];\n        var eW = ticksLength * Math.abs((entry.to - entry.from) / interval);\n\n        context.beginPath();\n        context.fillStyle = entry.color;\n\n        if (isVertical) {\n            if (hasLeft) context.rect(eX - .15 * width, eY, eH, -eW);\n\n            if (hasRight) context.rect(eX + barWidth + .05 * width, eY, eH, -eW);\n\n            eY -= eW;\n        } else {\n            if (hasLeft) context.rect(eX, eY - .15 * width, eW, eH);\n\n            if (hasRight) context.rect(eX, eY + barWidth + .05 * width, eW, eH);\n\n            eX += eW;\n        }\n\n        context.fill();\n        context.closePath();\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws a tick line on a linear gauge\n *\n * @param {Canvas2DContext} context\n * @param x1\n * @param y1\n * @param x2\n * @param y2\n */\nfunction drawLinearTick(context, x1, y1, x2, y2) {\n    context.beginPath();\n\n    context.moveTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.stroke();\n\n    context.closePath();\n    context.save();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n *\n * @param {Canvas2DContext} context\n * @param {string} color\n * @param {number} ticksSize\n * @param {number} deltaLen\n * @param {boolean} hasLeft\n * @param {boolean} hasRight\n * @param {number} lineWidth\n * @param {number} lineLength\n */\nfunction drawLinearTicks(context, color, ticksSize, deltaLen, hasLeft, hasRight, lineWidth, lineLength) {\n    var _context$barDimension2 = context.barDimensions;\n    var isVertical = _context$barDimension2.isVertical;\n    var length = _context$barDimension2.length;\n    var barWidth = _context$barDimension2.barWidth;\n    var barOffset = _context$barDimension2.barOffset;\n    var barMargin = _context$barDimension2.barMargin;\n    var pixelRatio = _context$barDimension2.pixelRatio;\n    var width = _context$barDimension2.width;\n    var X = _context$barDimension2.X;\n    var Y = _context$barDimension2.Y;\n    var ticksLength = _context$barDimension2.ticksLength;\n\n    var tickOffset = (width - barWidth) / 2;\n    var tickX = void 0,\n        tickY = void 0,\n        tickWidth = void 0,\n        tickHeight = void 0;\n    var i = 0;\n\n    context.lineWidth = lineWidth * pixelRatio;\n    context.strokeStyle = color;\n    context.save();\n\n    for (; i < ticksSize; i++) {\n        if (isVertical) {\n            tickWidth = lineLength * width;\n            tickY = Y + length - barMargin - barOffset - i * ticksLength / (ticksSize - deltaLen);\n\n            if (hasLeft) {\n                tickX = X + tickOffset - .05 * width;\n                drawLinearTick(context, tickX, tickY, tickX - tickWidth, tickY);\n            }\n\n            if (hasRight) {\n                tickX = X + tickOffset + barWidth + tickWidth + .05 * width;\n                drawLinearTick(context, tickX, tickY, tickX - tickWidth, tickY);\n            }\n        } else {\n            tickHeight = lineLength * width;\n            tickX = X + barMargin + barOffset + i * ticksLength / (ticksSize - deltaLen);\n\n            if (hasLeft) {\n                tickY = Y + tickOffset - .05 * width;\n                drawLinearTick(context, tickX, tickY, tickX, tickY - tickHeight);\n            }\n\n            if (hasRight) {\n                tickY = Y + tickOffset + barWidth + tickHeight + .05 * width;\n                drawLinearTick(context, tickX, tickY, tickX, tickY - tickHeight);\n            }\n        }\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Prepares major ticks data\n *\n * @access private\n * @param {LinearGaugeOptions} options\n * @return {[boolean, boolean]}\n */\nfunction prepareTicks(options) {\n    if (!options.majorTicks.length) {\n        options.majorTicks.push(drawings.formatMajorTickNumber(options.minValue, options));\n        options.majorTicks.push(drawings.formatMajorTickNumber(options.maxValue, options));\n    }\n\n    return [options.tickSide !== 'right', options.tickSide !== 'left'];\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws linear gauge's bar major ticks\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n */\nfunction drawLinearMajorTicks(context, options) {\n    var _prepareTicks = prepareTicks(options);\n\n    var _prepareTicks2 = _slicedToArray(_prepareTicks, 2);\n\n    var hasLeft = _prepareTicks2[0];\n    var hasRight = _prepareTicks2[1];\n\n\n    drawLinearTicks(context, options.colorMajorTicks, options.majorTicks.length, 1, hasLeft, hasRight, 2, .1);\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws linear gauge's bar minor ticks\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n */\nfunction drawLinearMinorTicks(context, options) {\n    var _prepareTicks3 = prepareTicks(options);\n\n    var _prepareTicks4 = _slicedToArray(_prepareTicks3, 2);\n\n    var hasLeft = _prepareTicks4[0];\n    var hasRight = _prepareTicks4[1];\n\n\n    drawLinearTicks(context, options.colorMajorTicks, options.minorTicks * (options.majorTicks.length - 1), 0, hasLeft, hasRight, 1, .05);\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws linear gauge'ticks bar major tick numbers\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n */\nfunction drawLinearMajorTicksNumbers(context, options) {\n    var _context$barDimension3 = context.barDimensions;\n    var isVertical = _context$barDimension3.isVertical;\n    var length = _context$barDimension3.length;\n    var width = _context$barDimension3.width;\n    var barWidth = _context$barDimension3.barWidth;\n    var barMargin = _context$barDimension3.barMargin;\n    var barOffset = _context$barDimension3.barOffset;\n    var X = _context$barDimension3.X;\n    var Y = _context$barDimension3.Y;\n    var ticksLength = _context$barDimension3.ticksLength;\n\n    var ticks = options.majorTicks.length;\n    var hasLeft = options.numberSide !== 'right';\n    var hasRight = options.numberSide !== 'left';\n    var textHeight = 20 * width / 200;\n    var i = 0;\n    var textX = void 0,\n        textY = void 0,\n        textWidth = void 0,\n        numberOffset = void 0,\n        tick = void 0;\n\n    context.font = textHeight + 'px Arial';\n    context.fillStyle = options.colorNumbers;\n    context.lineWidth = 0;\n    context.textAlign = 'center';\n\n    for (; i < ticks; i++) {\n        tick = options.majorTicks[i];\n        numberOffset = i * ticksLength / (ticks - 1);\n\n        if (isVertical) {\n            textY = Y + length - barMargin - barOffset - numberOffset + textHeight / 3;\n\n            if (hasLeft) {\n                context.textAlign = 'right';\n                context.fillText(tick, Math.round(X + (width - barWidth) / 2 - .2 * width), textY);\n            }\n\n            if (hasRight) {\n                context.textAlign = 'left';\n                context.fillText(tick, Math.round(X + (width - barWidth) / 2 + barWidth + .2 * width), textY);\n            }\n        } else {\n            textWidth = context.measureText(tick).width;\n            textX = X + barMargin + barOffset + numberOffset;\n\n            if (hasLeft) {\n                context.fillText(tick, textX, Y + (width - barWidth) / 2 - .2 * width);\n            }\n\n            if (hasRight) {\n                context.fillText(tick, textX, Y + (width - barWidth) / 2 + barWidth + .2 * width + textHeight);\n            }\n        }\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws linear gauge's title\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n */\nfunction drawLinearTitle(context, options) {\n    if (!options.title) return;\n\n    var _context$barDimension4 = context.barDimensions;\n    var isVertical = _context$barDimension4.isVertical;\n    var width = _context$barDimension4.width;\n    var length = _context$barDimension4.length;\n    var X = _context$barDimension4.X;\n    var Y = _context$barDimension4.Y;\n    var titleMargin = _context$barDimension4.titleMargin;\n\n    var textHeight = .125 * width;\n    var textX = Math.round(X + (isVertical ? width : length) / 2);\n    var textY = Math.round(Y + titleMargin / 2 - (isVertical ? textHeight : textHeight / 2) - .025 * (isVertical ? length : width));\n\n    context.save();\n    context.textAlign = 'center';\n    context.fillStyle = options.colorTitle;\n    context.font = textHeight + 'px Arial';\n    context.lineWidth = 0;\n    context.fillText(options.title, textX, textY, isVertical ? width : length);\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws linear gauge's units\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n */\nfunction drawLinearUnits(context, options) {\n    if (!options.units) return;\n\n    var _context$barDimension5 = context.barDimensions;\n    var isVertical = _context$barDimension5.isVertical;\n    var width = _context$barDimension5.width;\n    var length = _context$barDimension5.length;\n    var X = _context$barDimension5.X;\n    var Y = _context$barDimension5.Y;\n    var unitsMargin = _context$barDimension5.unitsMargin;\n\n    var textHeight = .125 * width;\n    var textX = Math.round(X + (isVertical ? width : length) / 2);\n    var textY = Math.round(Y + (isVertical ? length : width) + unitsMargin / 2 - textHeight / 2 - .025 * (isVertical ? length : width));\n\n    context.save();\n    context.textAlign = 'center';\n    context.fillStyle = options.colorTitle;\n    context.font = textHeight + 'px Arial';\n    context.lineWidth = 0;\n    context.fillText(options.units, textX, textY, isVertical ? width : length);\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws linear gauge's bar needle\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n */\nfunction drawLinearBarNeedle(context, options) {\n    if (!options.needle) return;\n\n    var _context$barDimension6 = context.barDimensions;\n    var isVertical = _context$barDimension6.isVertical;\n    var width = _context$barDimension6.width;\n    var length = _context$barDimension6.length;\n    var barWidth = _context$barDimension6.barWidth;\n    var barOffset = _context$barDimension6.barOffset;\n    var barMargin = _context$barDimension6.barMargin;\n    var ticksLength = _context$barDimension6.ticksLength;\n    var X = _context$barDimension6.X;\n    var Y = _context$barDimension6.Y;\n\n    var hasLeft = options.needleSide !== 'right';\n    var hasRight = options.needleSide !== 'left';\n    var position = ticksLength * options.value / (options.maxValue - options.minValue);\n    var baseLength = barWidth / 2 + .15 * width;\n    var needleLength = baseLength * (options.needleEnd / 100);\n    var sX = void 0,\n        eX = void 0,\n        sY = void 0,\n        eY = void 0;\n    var draw = options.needleType.toLowerCase() === 'arrow' ? drawLinearArrowNeedle : drawLinearLineNeedle;\n\n    drawings.drawNeedleShadow(context, options);\n\n    context.save();\n\n    if (isVertical) {\n        sY = Math.round(Y + length - barMargin - barOffset - position);\n\n        if (hasLeft) {\n            sX = Math.round(X + (width - barWidth) / 2 - .15 * width - baseLength * (options.needleStart / 100));\n            eX = sX + needleLength;\n            draw(context, options, sX, sY, eX, sY, needleLength);\n        }\n\n        if (hasRight) {\n            sX = Math.round(X + (width - barWidth) / 2 + barWidth + .15 * width + baseLength * (options.needleStart / 100));\n            eX = sX - needleLength;\n            draw(context, options, sX, sY, eX, sY, needleLength);\n        }\n    } else {\n        sX = Math.round(X + barMargin + barOffset + position);\n\n        if (hasLeft) {\n            sY = Math.round(Y + (width - barWidth) / 2 - .15 * width - baseLength * (options.needleStart / 100));\n            eY = sY + needleLength;\n            draw(context, options, sX, sY, sX, eY, needleLength);\n        }\n\n        if (hasRight) {\n            sY = Math.round(Y + (width - barWidth) / 2 + barWidth + .15 * width + baseLength * (options.needleStart / 100));\n            eY = sY - needleLength;\n            draw(context, options, sX, sY, sX, eY, needleLength);\n        }\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws line needle shape\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n * @param {number} sX\n * @param {number} sY\n * @param {number} eX\n * @param {number} eY\n * @param {number} length\n */\nfunction drawLinearLineNeedle(context, options, sX, sY, eX, eY, length) {\n    context.lineWidth = width;\n    context.strokeStyle = options.colorNeedleEnd ? drawings.linearGradient(context, options.colorNeedleStart, options.colorNeedleEnd, length) : options.colorNeedleStart;\n\n    context.beginPath();\n    context.moveTo(sX, sY);\n    context.lineTo(eX, eY);\n    context.stroke();\n    context.closePath();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws arrow needle shape\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n * @param {number} sX\n * @param {number} sY\n * @param {number} eX\n * @param {number} eY\n * @param {number} length\n */\nfunction drawLinearArrowNeedle(context, options, sX, sY, eX, eY, length) {\n    var peakLength = Math.round(length * .4);\n    var bodyLength = length - peakLength;\n    var isVertical = sX === eX;\n    var halfWidth = options.needleWidth / 2;\n\n    context.fillStyle = options.colorNeedleEnd ? drawings.linearGradient(context, options.colorNeedleStart, options.colorNeedleEnd, length) : options.colorNeedleStart;\n\n    context.beginPath();\n\n    if (isVertical) {\n        if (sY > eY) bodyLength *= -1;\n\n        context.moveTo(sX - halfWidth, sY);\n        context.lineTo(sX + halfWidth, sY);\n        context.lineTo(sX + halfWidth, sY + bodyLength);\n        context.lineTo(sX, eY);\n        context.lineTo(sX - halfWidth, sY + bodyLength);\n        context.lineTo(sX - halfWidth, sY);\n    } else {\n        if (sX > eX) bodyLength *= -1;\n\n        context.moveTo(sX, sY - halfWidth);\n        context.lineTo(sX, sY + halfWidth);\n        context.lineTo(sX + bodyLength, sY + halfWidth);\n        context.lineTo(eX, sY);\n        context.lineTo(sX + bodyLength, sY - halfWidth);\n        context.lineTo(sX, sY - halfWidth);\n    }\n\n    context.fill();\n    context.closePath();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws linear gauge plate\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n */\nfunction drawLinearPlate(context, options, x, y, w, h) {\n    context.save();\n\n    var r = options.borderRadius;\n\n    var w1 = w - options.borderShadowWidth;\n    var w2 = w1 - options.borderOuterWidth * 2;\n    var w3 = w2 - options.borderMiddleWidth * 2;\n    var w4 = w3 - options.borderInnerWidth * 2;\n\n    var h1 = h - options.borderShadowWidth * 2;\n    var h2 = h1 - options.borderOuterWidth * 2;\n    var h3 = h2 - options.borderMiddleWidth * 2;\n    var h4 = h3 - options.borderInnerWidth * 2;\n\n    var x2 = x - (w2 - w1) / 2;\n    var x3 = x2 - (w3 - w2) / 2;\n    var x4 = x3 - (w4 - w3) / 2;\n\n    var y2 = y - (h2 - h1) / 2;\n    var y3 = y2 - (h3 - h2) / 2;\n    var y4 = y3 - (h4 - h3) / 2;\n\n    if (options.glow) {\n        context.shadowBlur = options.borderShadowWidth;\n        context.shadowColor = options.colorBorderShadow;\n    }\n\n    if (options.borderOuterWidth) {\n        drawRectangle(context, r, x, y, w1, h1, options.colorBorderOuterStart, options.colorBorderOuterEnd);\n    }\n\n    context.shadowBlur = null;\n    //noinspection JSValidateTypes\n    context.shadowColor = null;\n\n    if (options.borderMiddleWidth) {\n        drawRectangle(context, --r, x2, y2, w2, h2, options.colorBorderMiddleStart, options.colorBorderMiddleEnd);\n    }\n\n    if (options.borderInnerWidth) {\n        drawRectangle(context, --r, x3, y3, w3, h3, options.colorBorderInnerStart, options.colorBorderInnerEnd);\n    }\n\n    drawRectangle(context, r, x4, y4, w4, h4, options.colorPlate);\n\n    return [x4, y4, w4, h4];\n}\n\n/**\n * Minimalistic HTML5 Canvas Linear Gauge\n */\n\nvar LinearGauge = function (_BaseGauge2) {\n    _inherits(LinearGauge, _BaseGauge2);\n\n    /**\n     * @constructor\n     * @param {LinearGaugeOptions} options\n     */\n    function LinearGauge(options) {\n        _classCallCheck(this, LinearGauge);\n\n        /* istanbul ignore else */\n        if (!options.width) options.width = defaultLinearGaugeOptions.width;\n        /* istanbul ignore else */\n        if (!options.height) options.height = defaultLinearGaugeOptions.height;\n\n        /* istanbul ignore else */\n        if (!options.orientation) {\n            options.orientation = options.width > options.height ? 'horizontal' : 'vertical';\n        }\n\n        options = Object.assign({}, defaultLinearGaugeOptions, options || {});\n\n        /* istanbul ignore else */\n        if (options.barStrokeWidth >= options.barWidth) {\n            options.barStrokeWidth = Math.round(options.barWidth / 2);\n        }\n\n        return _possibleConstructorReturn(this, Object.getPrototypeOf(LinearGauge).call(this, options));\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Triggering linear gauge render on a canvas.\n     *\n     * @returns {LinearGauge}\n     */\n\n\n    _createClass(LinearGauge, [{\n        key: 'draw',\n        value: function draw() {\n            var canvas = this.canvas;\n            var x = -canvas.drawX;\n            var y = -canvas.drawY;\n            var w = canvas.drawWidth;\n            var h = canvas.drawHeight;\n\n            var options = this.options;\n\n            if (!canvas.elementClone.initialized) {\n                var context = canvas.contextClone;\n\n                // clear the cache\n                context.clearRect(x, y, w, h);\n                context.save();\n\n                this.drawBox = drawLinearPlate(context, options, x, y, w, h);\n\n                drawLinearBar.apply(undefined, [context, options].concat(_toConsumableArray(this.drawBox)));\n\n                canvas.context.barDimensions = context.barDimensions;\n\n                drawLinearBarHighlights(context, options);\n                drawLinearMinorTicks(context, options);\n                drawLinearMajorTicks(context, options);\n                drawLinearMajorTicksNumbers(context, options);\n                drawLinearTitle(context, options);\n                drawLinearUnits(context, options);\n\n                canvas.elementClone.initialized = true;\n            }\n\n            this.canvas.commit();\n\n            // clear the canvas\n            canvas.context.clearRect(x, y, w, h);\n            canvas.context.save();\n\n            canvas.context.drawImage(canvas.elementClone, x, y, w, h);\n            canvas.context.save();\n\n            drawLinearBarProgress.apply(undefined, [canvas.context, options].concat(_toConsumableArray(this.drawBox)));\n            drawLinearBarNeedle(canvas.context, options);\n\n            return this;\n        }\n    }]);\n\n    return LinearGauge;\n}(BaseGauge);\n\nwindow['LinearGauge'] = LinearGauge;\n\nBaseGauge.initialize('LinearGauge', defaultLinearGaugeOptions);}());"],"sourceRoot":"/source/"}