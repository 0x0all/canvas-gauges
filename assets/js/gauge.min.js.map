{"version":3,"sources":["gauge.min.js"],"names":["ns","_toConsumableArray","arr","Array","isArray","i","arr2","length","from","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","TypeError","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_classCallCheck","instance","Constructor","vendorize","prop","window","global","vendors","s","capitalized","charAt","toUpperCase","substr","vendorProp","step","time","draw","start","rule","duration","end","anim","progress","percent","frame","requestAnimationFrame","Collection","apply","this","arguments","verifyError","err","DOMException","result","prepareTicks","options","majorTicks","push","drawings","formatMajorTickNumber","minValue","maxValue","tickSide","roundRect","context","x","y","w","h","r","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","padValue","val","dec","valueDec","int","valueInt","strVal","n","parseFloat","Math","abs","toFixed","toString","split","round","num","right","hasDec","majorTicksDec","majorTicksInt","indexOf","join","replace","radians","degrees","PI","radialPoint","radius","angle","sin","cos","linearGradient","colorFrom","colorTo","isVertical","undefined","grad","createLinearGradient","addColorStop","drawShadow","shadowDrawn","restore","save","borderShadowWidth","shadowBlur","shadowColor","colorBorderShadow","drawNeedleShadow","needleShadow","shadowOffsetX","shadowOffsetY","colorNeedleShadowDown","font","target","baseSize","reset","strokeStyle","lineWidth","drawValueTextShadow","offset","blur","valueTextShadow","colorValueTextShadow","drawValueBox","max","valueBox","text","valueText","tunit","runit","tw","measureText","width","th","fontValueSize","sw","valueBoxStroke","bmax","bw","bh","br","valueBoxBorderRadius","obw","valueBoxWidth","bx","by","gy","rect","grd","createRadialGradient","colorValueBoxRect","colorValueBoxRectEnd","stroke","colorValueBoxShadow","colorValueBoxBackground","fillStyle","fill","colorValueText","textAlign","textBaseline","fillText","drawRadialBorder","arc","maxRadialRadius","maxRadius","borderOuterWidth","borderMiddleWidth","borderInnerWidth","drawRadialPlate","d0","r0","r1","r2","r3","colorBorderOuter","colorBorderOuterEnd","colorBorderMiddle","colorBorderMiddleEnd","colorBorderInner","colorBorderInnerEnd","colorPlateEnd","colorPlate","drawRadialHighlights","hlWidth","highlightsWidth","radialTicksRadius","highlights","vd","ticksAngle","hlt","rotate","HPI","startAngle","to","color","drawRadialMinorTicks","SmartCanvas","pixelRatio","colorMinorTicks","minorTicks","closeStrokedPath","drawRadialMajorTicks","colors","colorMajorTicks","radialNextAngle","strokeTicks","drawRadialNumbers","points","isAnimated","animationTarget","colorNumbers","plateValueAngle","point","drawRadialTitle","title","colorTitle","drawRadialUnits","units","colorUnits","drawRadialNeedle","needle","needleCircleSize","rIn","needleEnd","rStart","needleStart","rOut","pad1","needleWidth","pad2","isFixed","colorNeedle","colorNeedleEnd","needleType","colorNeedleShadowUp","needleCircleOuter","colorNeedleCircleOuter","colorNeedleCircleOuterEnd","needleCircleInner","colorNeedleCircleInner","colorNeedleCircleInnerEnd","drawRadialValueBox","drawRectangle","colorStart","colorEnd","drawLinearBorder","drawLinearPlate","borderRadius","w1","w2","w3","w4","h1","h2","h3","h4","x2","x3","x4","y2","y3","y4","aliasingOffset","barDimensions","hasTitle","hasUnits","hasValue","titleMargin","unitsMargin","valueMargin","strokeWidth","barStrokeWidth","barBeginCircle","barWidth","barLength","barMargin","x0","y0","dx","hasLeft","hasRight","ticksWidth","dy","barOffset","ticksLength","X","Y","baseX","baseY","ticksPadding","drawLinearBarShape","type","_barDimensions","fullBarLength","direction","alpha","asin","cosAlpha","sinAlpha","x1","y1","cutRadius","rx","ry","colorBarStroke","colorBar","colorBarEnd","colorBarProgress","colorBarProgressEnd","drawLinearBar","hasTicksBar","notWhich","needleSide","numberSide","drawLinearBarProgress","barProgress","drawLinearBarHighlights","_context$barDimension","tickOffset","interval","eX","eH","eY","hLeft","hRight","entry","eStart","eW","drawLinearTick","drawLinearTicks","ticksSize","deltaLen","lineLength","_context$barDimension2","tickX","tickY","tickLen","tickLeft","tickRight","tickSpace","drawLinearMajorTicks","_drawings$prepareTick","_drawings$prepareTick2","_slicedToArray","_context$barDimension3","rightTicks","leftTicks","sX","sY","drawLinearTickStroke","drawLinearMinorTicks","_drawings$prepareTick3","_drawings$prepareTick4","ticksWidthMinor","drawLinearMajorTicksNumbers","_context$barDimension4","ticks","textHeight","fontNumbersSize","numLeft","numRight","textX","textY","textWidth","numberOffset","tick","drawLinearTitle","_context$barDimension5","fontTitleSize","drawLinearUnits","_context$barDimension6","fontUnitsSize","drawLinearBarNeedle","_context$barDimension7","position","tickWidth","baseLength","needleLength","toLowerCase","drawLinearArrowNeedle","drawLinearLineNeedle","barStart","nLeft","nRight","needleStyle","isRight","peakLength","bodyLength","halfWidth","drawLinearValueBox","boxWidth","sliceIterator","_arr","_n","_d","_e","_s","_i","Symbol","iterator","next","done","_get","get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","parent","getPrototypeOf","getter","_createClass","defineProperties","props","descriptor","defineProperty","key","protoProps","staticProps","assign","firstSource","nextSource","keysArray","keys","nextIndex","len","nextKey","searchElement","fromIndex","k","O","Infinity","relativeStart","min","relativeEnd","final","callback","setTimeout","Date","getTime","rules","linear","p","quad","pow","dequad","quint","dequint","cycle","acos","decycle","bounce","debounce","a","b","elastic","delastic","Animation","_this","performance","now","cancelAnimationFrame","id","DomObserver","element","toDashed","Type","mutationsObserved","isObservable","MutationObserver","domReady","traverse","bind","node","tagName","getAttribute","elements","document","getElementsByTagName","process","observe","body","childList","subtree","attributes","characterData","attributeOldValue","characterDataOldValue","records","record","attributeName","isValidNode","oldValue","addedNodes","ii","ss","_this2","JSON","parse","stringify","hasOwnProperty","toAttributeName","attributeValue","renderTo","observer","forEach","attr","disconnect","destroy","_prop","map","part","_options","update","test","e","camelCase","str","handler","readyState","addEventListener","attachEvent","canvas","height","collection","init","style","elementClone","cloneNode","getContext","contextClone","drawWidth","drawHeight","drawX","drawY","minSide","initialized","translate","index","splice","clearRect","onRedraw","scale","redraw","devicePixelRatio","matchMedia","addListener","GenericOptions","animatedValue","animateOnInit","borders","animation","animationDuration","animationRule","fontNumbers","fontTitle","fontUnits","fontValue","fontNumbersStyle","fontTitleStyle","fontUnitsStyle","fontValueStyle","fontNumbersWeight","fontTitleWeight","fontUnitsWeight","fontValueWeight","getElementById","version","gauges","BaseGauge","className","name","HTMLCanvasElement","parentNode","offsetWidth","offsetHeight","_value","set","_this3","isNaN","isFinite","fromValue","animate","defaultRadialGaugeOptions","RadialGauge","_BaseGauge","_ref","commit","drawImage","_context","initialize","defaultLinearGaugeOptions","LinearGauge","_BaseGauge2","_ref2","drawBox","concat","module","exports"],"mappings":"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","file":"gauge.min.js","sourcesContent":["/*!\n * The MIT License (MIT)\n * \n * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n * @version 2.1.0\n */\n(function(ns) {'use strict';\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @external {Object.assign} https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n */\n/* istanbul ignore next */\nif (!Object.assign) {\n    Object.defineProperty(Object, 'assign', {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function value(target, firstSource) {\n            'use strict';\n\n            if (target === undefined || target === null) {\n                throw new TypeError('Cannot convert first argument to object');\n            }\n\n            var to = Object(target);\n            var i = 1;\n\n            for (; i < arguments.length; i++) {\n                var nextSource = arguments[i];\n\n                if (nextSource === undefined || nextSource === null) {\n                    continue;\n                }\n\n                var keysArray = Object.keys(Object(nextSource));\n                var nextIndex = 0,\n                    len = keysArray.length;\n\n                for (; nextIndex < len; nextIndex++) {\n                    var nextKey = keysArray[nextIndex];\n                    var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n\n                    if (desc !== undefined && desc.enumerable) {\n                        to[nextKey] = nextSource[nextKey];\n                    }\n                }\n            }\n\n            return to;\n        }\n    });\n}\n\n/**\n * @external {Array.indexOf} https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf\n */\n/* istanbul ignore next */\nif (!Array.prototype.indexOf) {\n    Array.prototype.indexOf = function (searchElement, fromIndex) {\n        var k;\n\n        if (this === null) {\n            throw new TypeError('\"this\" is null or not defined');\n        }\n\n        var O = Object(this);\n        var len = O.length >>> 0;\n\n        if (len === 0) {\n            return -1;\n        }\n\n        var n = +fromIndex || 0;\n\n        if (Math.abs(n) === Infinity) {\n            n = 0;\n        }\n\n        if (n >= len) {\n            return -1;\n        }\n\n        k = Math.max(n >= 0 ? n : len - Math.abs(n), 0);\n\n        while (k < len) {\n            if (k in O && O[k] === searchElement) {\n                return k;\n            }\n\n            k++;\n        }\n\n        return -1;\n    };\n}\n\n/**\n * @external {Array.fill} https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array/fill\n */\n/* istanbul ignore next */\nif (!Array.prototype.fill) {\n    Array.prototype.fill = function (value) {\n        if (this === null) {\n            throw new TypeError('this is null or not defined');\n        }\n\n        var O = Object(this);\n        var len = O.length >>> 0;\n        var start = arguments[1];\n        var relativeStart = start >> 0;\n        var k = relativeStart < 0 ? Math.max(len + relativeStart, 0) : Math.min(relativeStart, len);\n        var end = arguments[2];\n        var relativeEnd = end === undefined ? len : end >> 0;\n        var final = relativeEnd < 0 ? Math.max(len + relativeEnd, 0) : Math.min(relativeEnd, len);\n        while (k < final) {\n            O[k] = value;\n            k++;\n        }\n\n        return O;\n    };\n}\n\n/*!\n * The MIT License (MIT)\n *\n * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n/**\n * Look-ups for a proper vendor-specific property and returns its value\n *\n * @example\n * var requestAnimationFrame = vendorize('requestAnimationFrame');\n * // it will refer properly to:\n * //  - window.requestAnimationFrame by default or to\n * //  - window.webkitRequestAnimationFrame or to\n * //  - window.mozRequestAnimationFrame or to\n * //  - window.msRequestAnimationFrame or to\n * //  - window.oRequestAnimationFrame\n * // depending on the current browser vendor\n *\n * @author Mykhailo Stadnyk <mikhus@gmail.com>\n * @param {string} prop\n * @param {HTMLElement|Window|object} [from] - default is window\n * @returns {*}\n */\nfunction vendorize(prop, from) {\n    /* istanbul ignore else: no reason to cover */\n    if (!from) {\n        from = typeof window === 'undefined' ? global : window;\n    }\n\n    if (typeof from[prop] !== 'undefined') {\n        return from[prop];\n    }\n\n    var vendors = ['webkit', 'moz', 'ms', 'o'];\n    var i = 0;\n    var s = vendors.length;\n    var capitalized = prop.charAt(0).toUpperCase() + prop.substr(1);\n\n    for (; i < s; i++) {\n        var vendorProp = from[vendors[i] + capitalized];\n\n        /* istanbul ignore if: requires very complex environment to test (specific browser version) */\n        if (typeof vendorProp !== 'undefined') {\n            return vendorProp;\n        }\n    }\n\n    return null;\n}\n\n/*!\n * The MIT License (MIT)\n *\n * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n/* jshint -W079 */\n\n/**\n * @ignore\n * @typedef {object} ns\n */\n\n/* istanbul ignore next */\n/**\n * @type {function(callback: function(time: number): number, element?: HTMLElement)}\n * @access private\n */\nvar requestAnimationFrame = vendorize('requestAnimationFrame') || function (callback) {\n    return setTimeout(function () {\n        return callback(new Date().getTime());\n    }, 1000 / 60);\n};\n\n/**\n * Generic AnimationRule function interface\n *\n * @typedef {function(percent: number): number} AnimationRule\n */\n\n/**\n * Callback for animation step draw event.\n * It will be called each time animation step is executed, bypassing\n * as first argument a percent of animation completeness. It is expected\n * that this callback will do an actual work of animating an elements or\n * whatever, as far as animation engine is just calculating and executing\n * animation steps without any knowledge about things under animation.\n *\n * @typedef {function(percent: number): *} DrawEventCallback\n */\n\n/**\n * Callback for animation complete event.\n * It is called once each animation is complete.\n *\n * @typedef {function(): *} EndEventCallback\n */\n\n/**\n * Predefined known animation rules.\n * It's a simple collection of math for some most used animations.\n *\n * @typedef {{linear: AnimationRule, quad: AnimationRule, dequad: AnimationRule, quint: AnimationRule, dequint: AnimationRule, cycle: AnimationRule, decycle: AnimationRule, bounce: AnimationRule, debounce: AnimationRule, elastic: AnimationRule, delastic: AnimationRule}} AnimationRules\n */\n\n/* istanbul ignore next: no reason covering this */\nvar rules = {\n    linear: function linear(p) {\n        return p;\n    },\n    quad: function quad(p) {\n        return Math.pow(p, 2);\n    },\n    dequad: function dequad(p) {\n        return 1 - rules.quad(1 - p);\n    },\n    quint: function quint(p) {\n        return Math.pow(p, 5);\n    },\n    dequint: function dequint(p) {\n        return 1 - Math.pow(1 - p, 5);\n    },\n    cycle: function cycle(p) {\n        return 1 - Math.sin(Math.acos(p));\n    },\n    decycle: function decycle(p) {\n        return Math.sin(Math.acos(1 - p));\n    },\n    bounce: function bounce(p) {\n        return 1 - rules.debounce(1 - p);\n    },\n    debounce: function debounce(p) {\n        var a = 0,\n            b = 1;\n        for (; 1; a += b, b /= 2) {\n            if (p >= (7 - 4 * a) / 11) {\n                return -Math.pow((11 - 6 * a - 11 * p) / 4, 2) + Math.pow(b, 2);\n            }\n        }\n    },\n    elastic: function elastic(p) {\n        return 1 - rules.delastic(1 - p);\n    },\n    delastic: function delastic(p) {\n        var x = 1.5;\n        return Math.pow(2, 10 * (p - 1)) * Math.cos(20 * Math.PI * x / 3 * p);\n    }\n};\n\n/* istanbul ignore next: private, not testable */\n/**\n * Evaluates animation step and decides if the next step required or\n * stops animation calling a proper events.\n *\n * @access private\n * @param {number} time\n * @param {DrawEventCallback} draw\n * @param {number} start\n * @param {AnimationRule} rule\n * @param {number} duration\n * @param {EndEventCallback} end\n * @param {Animation} anim\n */\nfunction step(time, draw, start, rule, duration, end, anim) {\n    if (typeof rule !== 'function') {\n        throw new TypeError('Invalid animation rule:', rule);\n    }\n\n    var progress = time - start;\n    var percent = progress / duration;\n\n    if (percent > 1) {\n        percent = 1;\n    }\n\n    draw && draw(percent === 1 ? percent : rule(percent));\n\n    if (progress < duration) {\n        anim.frame = requestAnimationFrame(function (time) {\n            return step(time, draw, start, rule, duration, end, anim);\n        });\n    } else {\n        end && end();\n    }\n}\n\n/**\n * Animation engine API for JavaScript-based animations.\n * This is simply an animation core framework which simplifies creation\n * of various animations for generic purposes.\n *\n * @example\n * // create 'linear' animation engine, 500ms duration\n * let linear = new Animation('linear', 500);\n *\n * // create 'elastic' animation engine\n * let elastic = new Animation('elastic');\n *\n * // define animation behavior\n * let bounced = new Animation('bounce', 500, percent => {\n *     let value = parseInt(percent * 100, 10);\n *\n *     $('div.bounced').css({\n *         width: value + '%',\n *         height: value + '%'\n *     });\n * });\n *\n * // execute animation\n * bounced.animate();\n *\n * // execute animation and handle when its finished\n * bounced.animate(null, () => {\n *    console.log('Animation finished!');\n * });\n */\n\nvar Animation = function () {\n\n    /**\n     * @constructor\n     * @param {string|AnimationRule} rule\n     * @param {number} duration\n     * @param {DrawEventCallback} [draw]\n     * @param {EndEventCallback} [end]\n     */\n    function Animation() {\n        var rule = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'linear';\n        var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 250;\n        var draw = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};\n        var end = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : function () {};\n\n        _classCallCheck(this, Animation);\n\n        /**\n         * Overall animation duration in milliseconds.\n         * By default is equal to 250 ms.\n         *\n         * @type {number}\n         */\n        this.duration = duration;\n\n        /**\n         * Animation rule. By default is linear animation.\n         * Animation rule is a subject to animation rules, which are\n         * a simple object containing math-based methods for calculating\n         * animation steps.\n         *\n         * @type {string|AnimationRule}\n         */\n        this.rule = rule;\n\n        /**\n         * Callback function for the animation step draw event.\n         *\n         * @type {DrawEventCallback}\n         */\n        this.draw = draw;\n\n        /**\n         * Callback for the animation complete event.\n         *\n         * @type {EndEventCallback}\n         */\n        this.end = end;\n\n        if (typeof this.draw !== 'function') {\n            throw new TypeError('Invalid animation draw callback:', draw);\n        }\n\n        if (typeof this.end !== 'function') {\n            throw new TypeError('Invalid animation end callback:', end);\n        }\n    }\n\n    /* istanbul ignore next: non-testable */\n    /**\n     * Performs animation calling each animation step draw callback and\n     * end callback at the end of animation. Callbacks are optional to this\n     * method call. If them are not bypassed will be used that ones which\n     * was pre-set on constructing an Animation object or pre-set after\n     * construction.\n     *\n     * @example\n     * function draw(percent) {\n     *     $('.my-animated-divs').css({\n     *         width: parseInt(percent * 100, 10) + '%'\n     *     });\n     * }\n     * function done() {\n     *     console.log('Animation complete!');\n     * }\n     *\n     * // Define 'draw' and 'end' callbacks on construction\n     * var animation = new Animation('cycle', 500, draw, done);\n     * animation.animate();\n     *\n     * // Define 'draw' and 'end' callbacks after construction\n     * var animation = new Animation('cycle', 500);\n     * animation.draw = draw;\n     * animation.end = done;\n     * animation.animate();\n     *\n     * // Define 'draw' and 'end' callbacks at animation\n     * var animation = new Animation('cycle', 500);\n     * animation.animate(draw, done);\n     *\n     * @param {DrawEventCallback} [draw]\n     * @param {EndEventCallback} [end]\n     */\n\n\n    _createClass(Animation, [{\n        key: 'animate',\n        value: function animate(draw, end) {\n            var _this = this;\n\n            //noinspection JSUnresolvedVariable\n            var start = ns.performance && ns.performance.now ? ns.performance.now() : vendorize('animationStartTime') || Date.now();\n\n            draw = draw || this.draw;\n            end = end || this.end;\n\n            /**\n             * Current requested animation frame identifier\n             *\n             * @type {number}\n             */\n            this.frame = requestAnimationFrame(function (time) {\n                return step(time, draw, start, rules[_this.rule] || _this.rule, _this.duration, end, _this);\n            });\n        }\n\n        /**\n         * Destroys this object properly\n         */\n\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            if (this.frame) {\n                var cancelAnimationFrame = vendorize('cancelAnimationFrame') ||\n                /* istanbul ignore next */\n                function (id) {};\n\n                cancelAnimationFrame(this.frame);\n                this.frame = null;\n            }\n\n            this.draw = null;\n            this.end = null;\n        }\n    }]);\n\n    return Animation;\n}();\n\n/**\n * Animation rules bound statically to Animation constructor.\n *\n * @type {AnimationRules}\n * @static\n */\n\n\nAnimation.rules = rules;\n\n/*!\n * The MIT License (MIT)\n *\n * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n/**\n * @typedef {{ constructor: function(options: GenericOptions): GaugeInterface, draw: function(): GaugeInterface, destroy: function, update: function(options: GenericOptions) }} GaugeInterface\n */\n/**\n * @typedef {{parse: function, stringify: function}} JSON\n * @external {JSON} https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/JSON\n */\n/**\n * @ignore\n * @typedef {{MutationObserver: function}} ns\n */\n\n/**\n * DOM Observer.\n * It will observe DOM document for a configured element types and\n * instantiate associated Types for an existing or newly added DOM elements\n *\n * @example\n * class ProgressBar {\n *     constructor(options) {}\n *     draw() {}\n * }\n *\n * // It will observe DOM document for elements <div>\n * // having attribute 'data-type=\"progress\"'\n * // and instantiate for each new instance of ProgressBar\n *\n * new DomParser({color: 'red'}, 'div', 'progress', ProgressBar);\n *\n * // assume we could have HTML like this\n * // <div data-type=\"progress\" color=\"blue\"></div>\n * // in this case all matching attributes names for a given options will be\n * // parsed and bypassed to an instance from HTML attributes\n */\n\nvar DomObserver = function () {\n\n    /**\n     * @constructor\n     * @param {object} options\n     * @param {string} element\n     * @param {string} type\n     */\n    function DomObserver(options, element, type) {\n        _classCallCheck(this, DomObserver);\n\n        //noinspection JSUnresolvedVariable\n        /**\n         * Default instantiation options for the given type\n         *\n         * @type {Object}\n         */\n        this.options = options;\n\n        /**\n         * Name of an element to lookup/observe\n         *\n         * @type {string}\n         */\n        this.element = element.toLowerCase();\n\n        /**\n         * data-type attribute value to lookup\n         *\n         * @type {string}\n         */\n        this.type = DomObserver.toDashed(type);\n\n        /**\n         * Actual type constructor to instantiate for each found element\n         *\n         * @type {Function}\n         */\n        this.Type = ns[type];\n\n        /**\n         * Signals if mutations observer for this type or not\n         *\n         * @type {boolean}\n         */\n        this.mutationsObserved = false;\n\n        /**\n         * Flag specifies whenever the browser supports observing\n         * of DOM tree mutations or not\n         *\n         * @type {boolean}\n         */\n        this.isObservable = !!ns.MutationObserver;\n\n        /* istanbul ignore next: this should be tested with end-to-end tests */\n        DomObserver.domReady(this.traverse.bind(this));\n    }\n\n    /**\n     * Checks if given node is valid node to process\n     *\n     * @param {Node|HTMLElement} node\n     * @returns {boolean}\n     */\n\n\n    _createClass(DomObserver, [{\n        key: 'isValidNode',\n        value: function isValidNode(node) {\n            //noinspection JSUnresolvedVariable\n            return !!(node.tagName && node.tagName.toLowerCase() === this.element && node.getAttribute('data-type') === this.type);\n        }\n\n        /**\n         * Traverse entire current DOM tree and process matching nodes.\n         * Usually it should be called only once on document initialization.\n         */\n\n    }, {\n        key: 'traverse',\n        value: function traverse() {\n            var elements = document.getElementsByTagName(this.element);\n            var i = 0,\n                s = elements.length;\n\n            /* istanbul ignore next: this should be tested with end-to-end tests */\n            for (; i < s; i++) {\n                this.process(elements[i]);\n            }\n\n            if (this.isObservable && !this.mutationsObserved) {\n                new ns.MutationObserver(this.observe.bind(this)).observe(document.body, {\n                    childList: true,\n                    subtree: true,\n                    attributes: true,\n                    characterData: true,\n                    attributeOldValue: true,\n                    characterDataOldValue: true\n                });\n\n                this.mutationsObserved = true;\n            }\n        }\n\n        /**\n         * Observes given mutation records for an elements to process\n         *\n         * @param {MutationRecord[]} records\n         */\n\n    }, {\n        key: 'observe',\n        value: function observe(records) {\n            var i = 0;\n            var s = records.length;\n\n            /* istanbul ignore next: this should be tested with end-to-end tests */\n            for (; i < s; i++) {\n                var record = records[i];\n\n                if (record.type === 'attributes' && record.attributeName === 'data-type' && this.isValidNode(record.target) && record.oldValue !== this.type) // skip false-positive mutations\n                    {\n                        setTimeout(this.process.bind(this, record.target));\n                    } else if (record.addedNodes && record.addedNodes.length) {\n                    var ii = 0;\n                    var ss = record.addedNodes.length;\n\n                    for (; ii < ss; ii++) {\n                        setTimeout(this.process.bind(this, record.addedNodes[ii]));\n                    }\n                }\n            }\n        }\n\n        /**\n         * Parses given attribute value to a proper JavaScript value.\n         * For example it will parse some stringified value to a proper type\n         * value, e.g. 'true' => true, 'null' => null, '{\"prop\": 20}' => {prop: 20}\n         *\n         * @param {*} value\n         * @return {*}\n         */\n\n    }, {\n        key: 'process',\n\n\n        /**\n         * Processes a given node, instantiating a proper type constructor for it\n         *\n         * @param {Node|HTMLElement} node\n         * @returns {GaugeInterface|null}\n         */\n        value: function process(node) {\n            var _this2 = this;\n\n            if (!this.isValidNode(node)) return null;\n\n            var prop = void 0;\n            var options = JSON.parse(JSON.stringify(this.options));\n            var instance = null;\n\n            for (prop in options) {\n                /* istanbul ignore else: non-testable in most cases */\n                if (options.hasOwnProperty(prop)) {\n                    var attributeName = DomObserver.toAttributeName(prop);\n                    var attributeValue = DomObserver.parse(node.getAttribute(attributeName));\n\n                    if (attributeValue !== null && attributeValue !== undefined) {\n                        options[prop] = attributeValue;\n                    }\n                }\n            }\n\n            options.renderTo = node;\n            instance = new this.Type(options);\n            instance.draw && instance.draw();\n\n            if (!this.isObservable) return instance;\n\n            instance.observer = new ns.MutationObserver(function (records) {\n                records.forEach(function (record) {\n                    if (record.type === 'attributes') {\n                        var attr = record.attributeName.toLowerCase();\n                        var type = node.getAttribute(attr).toLowerCase();\n\n                        if (attr === 'data-type' && type && type !== _this2.type) {\n                            instance.observer.disconnect();\n                            delete instance.observer;\n                            instance.destroy && instance.destroy();\n                        } else if (attr.substr(0, 5) === 'data-') {\n                            var _prop = attr.substr(5).split('-').map(function (part, i) {\n                                return !i ? part : part.charAt(0).toUpperCase() + part.substr(1);\n                            }).join('');\n                            var _options = {};\n\n                            _options[_prop] = DomObserver.parse(node.getAttribute(record.attributeName));\n\n                            instance.update && instance.update(_options);\n                        }\n                    }\n                });\n            });\n\n            //noinspection JSCheckFunctionSignatures\n            instance.observer.observe(node, { attributes: true });\n\n            return instance;\n        }\n\n        /**\n         * Transforms camelCase string to dashed string\n         *\n         * @static\n         * @param {string} camelCase\n         * @return {string}\n         */\n\n    }], [{\n        key: 'parse',\n        value: function parse(value) {\n            // parse boolean\n            if (value === 'true') return true;\n            if (value === 'false') return false;\n\n            // parse undefined\n            if (value === 'undefined') return undefined;\n\n            // parse null\n            if (value === 'null') return null;\n\n            // Comma-separated strings to array parsing.\n            // It won't match strings which contains non alphanumeric characters to\n            // prevent strings like 'rgba(0,0,0,0)' or JSON-like from being parsed.\n            // Typically it simply allows easily declare arrays as comma-separated\n            // numbers or plain strings. If something more complicated is\n            // required it can be declared using JSON format syntax\n            if (/^[-+#.\\w\\d\\s]+(?:,[-+#.\\w\\d\\s]*)+$/.test(value)) {\n                return value.split(',');\n            }\n\n            // parse JSON\n            try {\n                return JSON.parse(value);\n            } catch (e) {}\n\n            // plain value - no need to parse\n            return value;\n        }\n    }, {\n        key: 'toDashed',\n        value: function toDashed(camelCase) {\n            var arr = camelCase.split(/(?=[A-Z])/);\n            var i = 1;\n            var s = arr.length;\n            var str = arr[0].toLowerCase();\n\n            for (; i < s; i++) {\n                str += '-' + arr[i].toLowerCase();\n            }\n\n            return str;\n        }\n\n        /**\n         * Transforms camel case property name to dash separated attribute name\n         *\n         * @static\n         * @param {string} str\n         * @returns {string}\n         */\n\n    }, {\n        key: 'toAttributeName',\n        value: function toAttributeName(str) {\n            return 'data-' + DomObserver.toDashed(str);\n        }\n\n        /**\n         * Cross-browser DOM ready handler\n         *\n         * @static\n         * @param {Function} handler\n         */\n\n    }, {\n        key: 'domReady',\n        value: function domReady(handler) {\n            if (/comp|inter|loaded/.test((ns.document || {}).readyState + '')) return handler();\n\n            if (ns.addEventListener) ns.addEventListener('DOMContentLoaded', handler, false);else if (ns.attachEvent) ns.attachEvent('onload', handler);\n        }\n    }]);\n\n    return DomObserver;\n}();\n\n/*!\n * The MIT License (MIT)\n *\n * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/**\n * @ignore\n * @typedef {object} ns\n */\n\n/**\n * Drawings on canvas using hidden canvas as a cache for better\n * performance drawings during canvas animations. SmartCanvas also\n * adopts a canvas to\n */\n\n\nvar SmartCanvas = function () {\n\n    /**\n     * @constructor\n     * @param {HTMLCanvasElement} canvas\n     * @param {number} [width]\n     * @param {number} [height]\n     */\n    function SmartCanvas(canvas, width, height) {\n        _classCallCheck(this, SmartCanvas);\n\n        SmartCanvas.collection.push(this);\n\n        /**\n         * Canvas base width\n         *\n         * @type {number}\n         */\n        this.width = width || 0;\n\n        /**\n         * Canvas base height\n         *\n         * @type {number}\n         */\n        this.height = height || 0;\n\n        /**\n         * Target drawings canvas element\n         *\n         * @type {HTMLCanvasElement}\n         */\n        this.element = canvas;\n\n        this.init();\n    }\n\n    /**\n     * Initializes canvases and contexts\n     */\n\n\n    _createClass(SmartCanvas, [{\n        key: 'init',\n        value: function init() {\n            var pixelRatio = SmartCanvas.pixelRatio;\n\n            this.element.width = this.width * pixelRatio;\n            this.element.height = this.height * pixelRatio;\n\n            this.element.style.width = this.width + 'px';\n            this.element.style.height = this.height + 'px';\n\n            /**\n             * Canvas caching element\n             *\n             * @type {HTMLCanvasElement|Node}\n             */\n            this.elementClone = this.element.cloneNode(true);\n\n            //noinspection JSUnresolvedVariable\n            /**\n             * Target drawings canvas element 2D context\n             *\n             * @type {CanvasRenderingContext2D}\n             */\n            this.context = this.element.getContext('2d');\n\n            /**\n             * Canvas caching element 2D context\n             *\n             * @type {CanvasRenderingContext2D}\n             */\n            this.contextClone = this.elementClone.getContext('2d');\n\n            /**\n             * Actual drawings width\n             *\n             * @type {number}\n             */\n            this.drawWidth = this.element.width;\n\n            /**\n             * Actual drawings height\n             *\n             * @type {number}\n             */\n            this.drawHeight = this.element.height;\n\n            /**\n             * X-coordinate of drawings zero point\n             *\n             * @type {number}\n             */\n            this.drawX = this.drawWidth / 2;\n\n            /**\n             * Y-coordinate of drawings zero point\n             *\n             * @type {number}\n             */\n            this.drawY = this.drawHeight / 2;\n\n            /**\n             * Minimal side length in pixels of the drawing\n             *\n             * @type {number}\n             */\n            this.minSide = this.drawX < this.drawY ? this.drawX : this.drawY;\n\n            this.elementClone.initialized = false;\n\n            this.contextClone.translate(this.drawX, this.drawY);\n            this.contextClone.save();\n\n            this.context.translate(this.drawX, this.drawY);\n            this.context.save();\n\n            this.context.max = this.contextClone.max = this.minSide;\n            this.context.maxRadius = this.contextClone.maxRadius = null;\n        }\n\n        /**\n         * Destroys this object, removing the references from memory\n         */\n\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            var index = SmartCanvas.collection.indexOf(this);\n\n            /* istanbul ignore else */\n            if (~index) {\n                SmartCanvas.collection.splice(index, 1);\n            }\n\n            this.context.clearRect(-this.drawX, -this.drawY, this.drawWidth, this.drawHeight);\n\n            // dereference all created elements\n            this.context.max = null;\n            delete this.context.max;\n\n            this.context.maxRadius = null;\n            delete this.context.maxRadius;\n\n            this.context = null;\n            this.contextClone = null;\n            this.elementClone = null;\n            this.element = null;\n\n            /**\n             * On canvas redraw event callback\n             *\n             * @type {function|null|undefined}\n             */\n            this.onRedraw = null;\n        }\n\n        /**\n         * Commits the drawings\n         */\n\n    }, {\n        key: 'commit',\n        value: function commit() {\n            var scale = SmartCanvas.pixelRatio;\n\n            if (scale !== 1) {\n                this.contextClone.scale(scale, scale);\n                this.contextClone.save();\n            }\n\n            return this;\n        }\n\n        /**\n         * Redraw this object\n         */\n\n    }, {\n        key: 'redraw',\n        value: function redraw() {\n            this.init();\n\n            /**\n             * On canvas redraw event callback\n             *\n             * @type {function(): *}\n             */\n            this.onRedraw && this.onRedraw();\n\n            return this;\n        }\n\n        /**\n         * Returns current device pixel ratio\n         *\n         * @returns {number}\n         */\n\n    }], [{\n        key: 'redraw',\n\n\n        /**\n         * Forces redraw all canvas in the current collection\n         */\n        value: function redraw() {\n            var i = 0;\n            var s = SmartCanvas.collection.length;\n\n            for (; i < s; i++) {\n                SmartCanvas.collection[i].redraw();\n            }\n        }\n    }, {\n        key: 'pixelRatio',\n        get: function get() {\n            /* istanbul ignore next */\n            //noinspection JSUnresolvedVariable\n            return ns.devicePixelRatio || 1;\n        }\n    }]);\n\n    return SmartCanvas;\n}();\n\nSmartCanvas.collection = [];\n\n/* istanbul ignore next: very browser-specific testing required to cover */\n//noinspection JSUnresolvedVariable\nif (ns.matchMedia) {\n    //noinspection JSUnresolvedFunction\n    ns.matchMedia('screen and (min-resolution: 2dppx)').addListener(SmartCanvas.redraw);\n}\n\n/*!\n * The MIT License (MIT)\n *\n * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/**\n * Describes rendering target element. Can be either string identifier of\n * the element or the element itself.\n *\n * @typedef {HTMLElement|string} RenderTarget\n */\n\n/**\n * Highlight area definition.\n * It describes highlight area starting from value to value using\n * color. Color can be describes with hex, rgb or rgba value.\n *\n * @typedef {{ from: number, to: number, color: string}} Highlight\n */\n\n/**\n * Shared generic gauges options\n *\n * @type {{renderTo: RenderTarget, width: number, height: number, minValue: number, maxValue: number, value: number, units: string|boolean, majorTicks: number[]|string[], minorTicks: number, strokeTicks: boolean, animatedValue: boolean, animateOnInit: boolean, title: string|boolean, borders: boolean, valueInt: number, valueDec: number, majorTicksInt: number, majorTicksDec: number, animation: boolean, animationDuration: number, animationRule: string|AnimationRule, colorPlate: string, colorPlateEnd: string, colorMajorTicks: string, colorMinorTicks: string, colorTitle: string, colorUnits: string, colorNumbers: string, colorNeedle: string, colorNeedleEnd: string, colorValueText: string, colorValueTextShadow: string, colorBorderShadow: string, colorBorderOuter: string, colorBorderOuterEnd: string, colorBorderMiddle: string, colorBorderMiddleEnd: string, colorBorderInner: string, colorBorderInnerEnd: string, colorValueBoxRect: string, colorValueBoxRectEnd: string, colorValueBoxBackground: string, colorValueBoxShadow: string, colorNeedleShadowUp: string, colorNeedleShadowDown: string, needle: boolean, needleShadow: boolean, needleType: string, needleStart: number, needleEnd: number, needleWidth: number, borderOuterWidth: number, borderMiddleWidth: number, borderInnerWidth: number, borderShadowWidth: number, valueBox: boolean, valueBoxWidth: number, valueBoxStroke: number, valueText: string, valueTextShadow: boolean, valueBoxBorderRadius: number, highlights: Highlight[], highlightsWidth: number, fontNumbers: string, fontTitle: string, fontUnits: string, fontValue: string, fontTitleSize: number, fontValueSize: number, fontUnitsSize: number, fontNumbersSize: number, fontNumbersStyle: string, fontTitleStyle: string, fontUnitsStyle: string, fontValueStyle: string, fontNumbersWeight: string, fontTitleWeight: string, fontUnitsWeight: string, fontValueWeight: string}} GenericOptions\n */\nvar GenericOptions = {\n    // basic options\n    renderTo: null,\n    width: 0,\n    height: 0,\n    minValue: 0,\n    maxValue: 100,\n    value: 0,\n    units: false,\n    majorTicks: [0, 20, 40, 60, 80, 100],\n    minorTicks: 10,\n    strokeTicks: true,\n    animatedValue: false,\n    animateOnInit: false,\n    title: false,\n    borders: true,\n\n    // number formats\n    valueInt: 3,\n    valueDec: 2,\n    majorTicksInt: 1,\n    majorTicksDec: 0,\n\n    // animations\n    animation: true,\n    animationDuration: 500,\n    animationRule: 'cycle',\n\n    // colors\n    colorPlate: '#fff',\n    colorPlateEnd: '',\n    colorMajorTicks: '#444',\n    colorMinorTicks: '#666',\n    colorTitle: '#888',\n    colorUnits: '#888',\n    colorNumbers: '#444',\n    colorNeedle: 'rgba(240,128,128,1)',\n    colorNeedleEnd: 'rgba(255,160,122,.9)',\n    colorValueText: '#444',\n    colorValueTextShadow: 'rgba(0,0,0,0.3)',\n    colorBorderShadow: 'rgba(0,0,0,0.5)',\n    colorBorderOuter: '#ddd',\n    colorBorderOuterEnd: '#aaa',\n    colorBorderMiddle: '#eee',\n    colorBorderMiddleEnd: '#f0f0f0',\n    colorBorderInner: '#fafafa',\n    colorBorderInnerEnd: '#ccc',\n    colorValueBoxRect: '#888',\n    colorValueBoxRectEnd: '#666',\n    colorValueBoxBackground: '#babab2',\n    colorValueBoxShadow: 'rgba(0,0,0,1)',\n    colorNeedleShadowUp: 'rgba(2,255,255,0.2)',\n    colorNeedleShadowDown: 'rgba(188,143,143,0.45)',\n\n    fontNumbers: 'Arial',\n    fontTitle: 'Arial',\n    fontUnits: 'Arial',\n    fontValue: 'Arial',\n\n    fontNumbersSize: 20,\n    fontTitleSize: 24,\n    fontUnitsSize: 22,\n    fontValueSize: 26,\n\n    fontNumbersStyle: 'normal',\n    fontTitleStyle: 'normal',\n    fontUnitsStyle: 'normal',\n    fontValueStyle: 'normal',\n\n    fontNumbersWeight: 'normal',\n    fontTitleWeight: 'normal',\n    fontUnitsWeight: 'normal',\n    fontValueWeight: 'normal',\n\n    // needle\n    needle: true,\n    needleShadow: true,\n    needleType: 'arrow',\n    needleStart: 5,\n    needleEnd: 85,\n    needleWidth: 4,\n\n    // borders\n    borderOuterWidth: 3,\n    borderMiddleWidth: 3,\n    borderInnerWidth: 3,\n    borderShadowWidth: 3,\n\n    // value and highlights\n    valueBox: true,\n    valueBoxStroke: 5,\n    valueBoxWidth: 0,\n    valueText: '',\n    valueTextShadow: true,\n    valueBoxBorderRadius: 2.5,\n\n    // highlights\n    highlights: [{ from: 20, to: 60, color: '#eee' }, { from: 60, to: 80, color: '#ccc' }, { from: 80, to: 100, color: '#999' }],\n    highlightsWidth: 15\n};\n\n/*!\n * The MIT License (MIT)\n *\n * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/**\n * Gauge collections type.\n *\n * It is used ES5 declaration here, because babel\n * transpiles inheritance incorrectly in this case.\n *\n * @class Collection\n * @constructor\n */\nfunction Collection() {\n    Array.prototype.constructor.apply(this, arguments);\n}\n\nCollection.prototype = Object.create(Array.prototype);\nCollection.prototype.constructor = Collection;\n\n/**\n * Returns gauge object by its identifier or index in the collection\n *\n * @param {string|number} id\n * @return {*}\n */\nCollection.prototype.get = function (id) {\n    if (typeof id === 'string') {\n        var i = 0;\n        var s = this.length;\n\n        for (; i < s; i++) {\n            var canvas = this[i].options.renderTo.tagName ? this[i].options.renderTo :\n            /* istanbul ignore next: should be tested with e2e tests */\n            document.getElementById(this[i].options.renderTo || '');\n\n            if (canvas.getAttribute('id') === id) {\n                return this[i];\n            }\n        }\n    } else if (typeof id === 'number') {\n        return this[id];\n    }\n\n    return null;\n};\n\n/*!\n * The MIT License (MIT)\n *\n * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar version = '2.1.0';\n\nvar round = Math.round;\nvar abs = Math.abs;\n\nvar gauges = new Collection();\n\ngauges.version = version;\n\n/**\n * Basic abstract BaseGauge class implementing common functionality\n * for different type of gauges.\n *\n * It should not be instantiated directly but must be extended by a final\n * gauge implementation.\n *\n * @abstract\n * @example\n *\n * class MyCoolGauge extends BaseGauge {\n *\n *     // theses methods below MUST be implemented:\n *\n *     constructor(options) {\n *        // ... do something with options\n *        super(options);\n *        // ... implement anything else\n *     }\n *\n *     draw() {\n *         // ... some implementation here\n *         return this;\n *     }\n * }\n */\n\nvar BaseGauge = function () {\n\n    /**\n     * @constructor\n     * @abstract\n     * @param {GenericOptions} options\n     */\n    function BaseGauge(options) {\n        _classCallCheck(this, BaseGauge);\n\n        var className = this.constructor.name;\n\n        if (className === 'BaseGauge') {\n            throw new TypeError('Attempt to instantiate abstract class!');\n        }\n\n        gauges.push(this);\n\n        //noinspection JSUnresolvedVariable\n        /**\n         * Gauges version string\n         *\n         * @type {string}\n         */\n        this.version = version;\n\n        /**\n         * Gauge type class\n         *\n         * @type {BaseGauge} type\n         */\n        this.type = ns[className];\n\n        /**\n         * True if gauge has been drawn for the first time, false otherwise.\n         *\n         * @type {boolean}\n         */\n        this.initialized = false;\n\n        options.minValue = parseFloat(options.minValue);\n        options.maxValue = parseFloat(options.maxValue);\n        options.value = parseFloat(options.value) || 0;\n\n        if (!options.borders) {\n            options.borderInnerWidth = options.borderMiddleWidth = options.borderOuterWidth = 0;\n        }\n\n        if (!options.renderTo) {\n            throw TypeError('Canvas element was not specified when creating ' + 'the Gauge object!');\n        }\n\n        var canvas = options.renderTo.tagName ? options.renderTo :\n        /* istanbul ignore next: to be tested with e2e tests */\n        document.getElementById(options.renderTo);\n\n        if (!(canvas instanceof HTMLCanvasElement)) {\n            throw TypeError('Given gauge canvas element is invalid!');\n        }\n\n        options.width = parseFloat(options.width) || 0;\n        options.height = parseFloat(options.height) || 0;\n\n        if (!options.width || !options.height) {\n            if (!options.width) options.width = canvas.parentNode ? canvas.parentNode.offsetWidth : canvas.offsetWidth;\n            if (!options.height) options.height = canvas.parentNode ? canvas.parentNode.offsetHeight : canvas.offsetHeight;\n        }\n\n        /**\n         * Gauge options\n         *\n         * @type {GenericOptions} options\n         */\n        this.options = options || {};\n\n        if (this.options.animateOnInit) {\n            this._value = this.options.value;\n            this.options.value = this.options.minValue;\n        }\n\n        /**\n         * @type {SmartCanvas} canvas\n         */\n        this.canvas = new SmartCanvas(canvas, options.width, options.height);\n        this.canvas.onRedraw = this.draw.bind(this);\n\n        /**\n         * @type {Animation} animation\n         */\n        this.animation = new Animation(options.animationRule, options.animationDuration);\n    }\n\n    /**\n     * Sets new value for this gauge.\n     * If gauge is animated by configuration it will trigger a proper animation.\n     * Upsetting a value triggers gauge redraw.\n     *\n     * @param {number} value\n     */\n\n\n    _createClass(BaseGauge, [{\n        key: 'update',\n\n\n        /**\n         * Updates gauge configuration options at runtime and redraws the gauge\n         *\n         * @param {RadialGaugeOptions} options\n         * @returns {BaseGauge}\n         */\n        value: function update(options) {\n            Object.assign(this.options, options || {});\n\n            this.canvas.width = this.options.width;\n            this.canvas.height = this.options.height;\n\n            this.animation.rule = this.options.animationRule;\n            this.animation.duration = this.options.animationDuration;\n\n            this.canvas.redraw();\n\n            return this;\n        }\n\n        /**\n         * Performs destruction of this object properly\n         */\n\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            var index = gauges.indexOf(this);\n\n            /* istanbul ignore else */\n            if (~index) {\n                //noinspection JSUnresolvedFunction\n                gauges.splice(index, 1);\n            }\n\n            this.canvas.destroy();\n            this.canvas = null;\n\n            this.animation.destroy();\n            this.animation = null;\n        }\n\n        /**\n         * Returns gauges version string\n         *\n         * @return {string}\n         */\n\n    }, {\n        key: 'draw',\n\n\n        /**\n         * Triggering gauge render on a canvas.\n         *\n         * @abstract\n         * @returns {BaseGauge}\n         */\n        value: function draw() {\n            if (this.options.animateOnInit && !this.initialized) {\n                this.value = this._value;\n                this.initialized = true;\n            }\n        }\n\n        /**\n         * Inject given gauge object into DOM\n         *\n         * @param {string} type\n         * @param {GenericOptions} options\n         */\n\n    }, {\n        key: 'value',\n        set: function set(value) {\n            var _this3 = this;\n\n            value = parseFloat(value);\n\n            if (isNaN(value) || !isFinite(value)) {\n                value = this.options.minValue;\n            }\n\n            var fromValue = this.options.value;\n\n            if (value === this.options.value) return;\n\n            if (this.options.animation) {\n                /**\n                 * @type {number}\n                 * @access private\n                 */\n                this._value = value;\n\n                this.animation.animate(function (percent) {\n                    _this3.options.value = fromValue + (value - fromValue) * percent;\n\n                    _this3.draw();\n                }, function () {\n                    _this3.options.value = value;\n                    delete _this3._value;\n                    _this3.draw();\n                });\n            } else {\n                this.options.value = value;\n                this.draw();\n            }\n        }\n\n        /**\n         * Returns current value of the gauge\n         *\n         * @return {number}\n         */\n        ,\n        get: function get() {\n            return typeof this._value === 'undefined' ? this.options.value : this._value;\n        }\n    }], [{\n        key: 'initialize',\n        value: function initialize(type, options) {\n            new DomObserver(options, 'canvas', type);\n        }\n    }, {\n        key: 'version',\n        get: function get() {\n            return version;\n        }\n    }]);\n\n    return BaseGauge;\n}();\n\n/**\n * @ignore\n * @typedef {object} ns\n */\n/* istanbul ignore if */\n\n\nif (typeof ns !== 'undefined') {\n    ns['BaseGauge'] = BaseGauge;\n    (ns.document || ns)['gauges'] = gauges;\n}\n\n/*!\n * The MIT License (MIT)\n *\n * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/**\n * @access private\n * @typedef {CanvasRenderingContext2D|{max: number, maxRadius: number, barDimensions: object}} Canvas2DContext\n */\n\n/* istanbul ignore next: private, not testable */\n/**\n * Examines if a given error is something to throw or to ignore\n *\n * @param {Error} err\n */\nfunction verifyError(err) {\n    // there is some unpredictable error in FF in some circumstances\n    // which we found simply safe to ignore than to fight with it\n    // noinspection JSUnresolvedVariable\n    if (err instanceof DOMException && err.result === 0x8053000b) {\n        return; // ignore it\n    }\n\n    throw err;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Prepares major ticks data\n *\n * @access private\n * @param {GenericOptions|{ tickSide: string }} options\n * @return {[boolean, boolean]}\n */\nfunction prepareTicks(options) {\n    if (!(options.majorTicks instanceof Array)) {\n        options.majorTicks = options.majorTicks ? [options.majorTicks] : [];\n    }\n\n    if (!options.majorTicks.length) {\n        options.majorTicks.push(drawings.formatMajorTickNumber(options.minValue, options));\n        options.majorTicks.push(drawings.formatMajorTickNumber(options.maxValue, options));\n    }\n\n    return [options.tickSide !== 'right', options.tickSide !== 'left'];\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws rounded corners rectangle\n *\n * @param {Canvas2DContext} context\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {number} r\n */\nfunction roundRect(context, x, y, w, h, r) {\n    context.beginPath();\n\n    context.moveTo(x + r, y);\n    context.lineTo(x + w - r, y);\n\n    context.quadraticCurveTo(x + w, y, x + w, y + r);\n    context.lineTo(x + w, y + h - r);\n\n    context.quadraticCurveTo(x + w, y + h, x + w - r, y + h);\n    context.lineTo(x + r, y + h);\n\n    context.quadraticCurveTo(x, y + h, x, y + h - r);\n    context.lineTo(x, y + r);\n\n    context.quadraticCurveTo(x, y, x + r, y);\n\n    context.closePath();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Pads a given value with leading zeros using the given options\n *\n * @param {number} val\n * @param {RadialGaugeOptions|{valueInt: number, valueDec: number}} options\n * @returns {string}\n */\nfunction padValue(val, options) {\n    var dec = options.valueDec;\n    var int = options.valueInt;\n    var i = 0;\n    var s = void 0,\n        strVal = void 0,\n        n = void 0;\n\n    val = parseFloat(val);\n    n = val < 0;\n    val = Math.abs(val);\n\n    if (dec > 0) {\n        strVal = val.toFixed(dec).toString().split('.');\n        s = int - strVal[0].length;\n\n        for (; i < s; ++i) {\n            strVal[0] = '0' + strVal[0];\n        }\n\n        strVal = (n ? '-' : '') + strVal[0] + '.' + strVal[1];\n    } else {\n        strVal = Math.round(val).toString();\n        s = int - strVal.length;\n\n        for (; i < s; ++i) {\n            strVal = '0' + strVal;\n        }\n\n        strVal = (n ? '-' : '') + strVal;\n    }\n\n    return strVal;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Formats a number for display on the dial's plate using the majorTicksFormat\n * config option.\n *\n * @param {number} num number to format\n * @param {object} options\n * @returns {string} formatted number\n */\nfunction formatMajorTickNumber(num, options) {\n    var right = void 0,\n        hasDec = false;\n\n    // First, force the correct number of digits right of the decimal.\n    if (options.majorTicksDec === 0) {\n        right = Math.round(num).toString();\n    } else {\n        right = num.toFixed(options.majorTicksDec);\n    }\n\n    // Second, force the correct number of digits left of the decimal.\n    if (options.majorTicksInt > 1) {\n        // Does this number have a decimal?\n        hasDec = ~right.indexOf('.');\n\n        // Is this number a negative number?\n        if (~right.indexOf('-')) {\n            return '-' + [options.majorTicksInt + options.majorTicksDec + 2 + (hasDec ? 1 : 0) - right.length].join('0') + right.replace('-', '');\n        } else {\n            return [options.majorTicksInt + options.majorTicksDec + 1 + (hasDec ? 1 : 0) - right.length].join('0') + right;\n        }\n    }\n\n    return right;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Transforms degrees to radians\n *\n * @param {number} degrees\n * @returns {number}\n */\nfunction radians(degrees) {\n    return degrees * Math.PI / 180;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Calculates and returns radial point coordinates\n *\n * @param {number} radius\n * @param {number} angle\n * @returns {{x: number, y: number}}\n */\nfunction radialPoint(radius, angle) {\n    return { x: -radius * Math.sin(angle), y: radius * Math.cos(angle) };\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Creates and returns linear gradient canvas object\n *\n * @param {Canvas2DContext} context\n * @param {string} colorFrom\n * @param {string} colorTo\n * @param {number} length\n * @param {boolean} [isVertical]\n * @param {number} [from]\n * @returns {CanvasGradient}\n */\nfunction linearGradient(context, colorFrom, colorTo, length) {\n    var isVertical = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n    var from = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n\n    var grad = context.createLinearGradient(isVertical ? 0 : from, isVertical ? from : 0, isVertical ? 0 : length, isVertical ? length : 0);\n\n    grad.addColorStop(0, colorFrom);\n    grad.addColorStop(1, colorTo);\n\n    return grad;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws the shadow if it was not drawn\n *\n * @param {Canvas2DContext} context\n * @param {GenericOptions} options\n * @param {boolean} shadowDrawn\n * @return {boolean}\n */\nfunction drawShadow(context, options) {\n    var shadowDrawn = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    if (shadowDrawn) {\n        context.restore();\n        return true;\n    }\n\n    context.save();\n\n    var w = options.borderShadowWidth;\n\n    if (w) {\n        context.shadowBlur = w;\n        context.shadowColor = options.colorBorderShadow;\n    }\n\n    return true;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge needle shadow\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {RadialGaugeOptions} options\n */\nfunction drawNeedleShadow(context, options) {\n    if (!options.needleShadow) return;\n\n    context.shadowOffsetX = 2;\n    context.shadowOffsetY = 2;\n    context.shadowBlur = 10;\n    context.shadowColor = options.colorNeedleShadowDown;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Constructs font styles for canvas fonts\n *\n * @param {GenericOptions} options\n * @param {string} target\n * @param {number} baseSize\n */\nfunction font(options, target, baseSize) {\n    return options['font' + target + 'Style'] + ' ' + options['font' + target + 'Weight'] + ' ' + options['font' + target + 'Size'] * baseSize + 'px ' + options['font' + target];\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Resets some context settings\n *\n * @param {Canvas2DContext} context\n */\nfunction reset(context) {\n    context.shadowOffsetX = null;\n    context.shadowOffsetY = null;\n    context.shadowBlur = null;\n    context.shadowColor = '';\n    context.strokeStyle = null;\n    context.lineWidth = 0;\n    context.save();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Declares to drow value text shadow if configured\n *\n * @param context\n * @param options\n * @param offset\n * @param blur\n */\nfunction drawValueTextShadow(context, options, offset, blur) {\n    if (options.valueTextShadow) {\n        context.shadowOffsetX = offset;\n        context.shadowOffsetY = offset;\n        context.shadowBlur = blur;\n        context.shadowColor = options.colorValueTextShadow;\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws value box at given position\n *\n * @param {Canvas2DContext} context\n * @param {GenericOptions} options\n * @param {number|string} value\n * @param {number} x\n * @param {number} y\n * @param {number} max\n */\nfunction drawValueBox(context, options, value, x, y, max) {\n    if (!options.valueBox) return;\n\n    reset(context);\n\n    var text = options.valueText || padValue(value, options);\n    var tunit = max / 200;\n    var runit = max / 100;\n    var offset = 0.4 * runit;\n    var blur = 1.2 * runit;\n\n    context.font = font(options, 'Value', tunit);\n    drawValueTextShadow(context, options, offset, blur);\n\n    var tw = context.measureText(options.valueText ? text : '-' + padValue(0, options)).width;\n\n    reset(context);\n\n    var th = parseFloat(options.fontValueSize) * tunit + offset + blur;\n    var sw = runit * parseFloat(options.valueBoxStroke);\n    var bmax = max * 2 - sw * 2;\n\n    var bw = tw + 10 * runit;\n    var bh = 1.1 * th + offset + blur;\n    var br = runit * options.valueBoxBorderRadius;\n    var obw = (parseFloat(options.valueBoxWidth) || 0) / 100 * bmax;\n\n    obw > bw && (bw = obw);\n    bw > bmax && (bw = bmax);\n\n    var bx = x - bw / 2;\n    var by = y - bh / 2;\n    var gy = y - 5.75 * runit;\n\n    context.beginPath();\n\n    if (br) roundRect(context, bx, by, bw, bh, br);else context.rect(bx, by, bw, bh);\n\n    if (sw) {\n        var grd = context.createRadialGradient(x, gy, runit * 10, x, gy, runit * 20);\n\n        grd.addColorStop(0, options.colorValueBoxRect);\n        grd.addColorStop(1, options.colorValueBoxRectEnd);\n\n        context.strokeStyle = grd;\n        context.lineWidth = sw;\n        context.stroke();\n    }\n\n    if (options.colorValueBoxShadow) {\n        context.shadowBlur = 1.2 * runit;\n        context.shadowColor = options.colorValueBoxShadow;\n    }\n\n    if (options.colorValueBoxBackground) {\n        context.fillStyle = options.colorValueBoxBackground;\n        context.fill();\n    }\n\n    context.closePath();\n    context.restore();\n\n    drawValueTextShadow(context, options, offset, blur);\n\n    context.fillStyle = options.colorValueText;\n    context.textAlign = 'center';\n    context.textBaseline = 'middle';\n    context.fillText(text, bx + bw / 2, y);\n    context.restore();\n}\n\nvar drawings = {\n    roundRect: roundRect,\n    padValue: padValue,\n    formatMajorTickNumber: formatMajorTickNumber,\n    radians: radians,\n    radialPoint: radialPoint,\n    linearGradient: linearGradient,\n    drawNeedleShadow: drawNeedleShadow,\n    drawValueBox: drawValueBox,\n    verifyError: verifyError,\n    prepareTicks: prepareTicks,\n    drawShadow: drawShadow,\n    font: font\n};\n\ndrawings;\n\n/*!\n * The MIT License (MIT)\n *\n * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar PI = Math.PI;\nvar HPI = PI / 2;\n\n/**\n * Gauge configuration options\n *\n * @typedef {GenericOptions|{ticksAngle: number, startAngle: number, colorNeedleCircleOuter: string, colorNeedleCircleOuterEnd: string, colorNeedleCircleInner: string, colorNeedleCircleInnerEnd: string, needleCircleSize: number, needleCircleInner: boolean, needleCircleOuter: boolean, animationTarget: string}} RadialGaugeOptions\n */\n\n/**\n * Default gauge configuration options\n *\n * @access private\n * @type {RadialGaugeOptions}\n */\nvar defaultRadialGaugeOptions = Object.assign({}, GenericOptions, {\n    // basic options\n    ticksAngle: 270,\n    startAngle: 45,\n\n    // colors\n    colorNeedleCircleOuter: '#f0f0f0',\n    colorNeedleCircleOuterEnd: '#ccc',\n    colorNeedleCircleInner: '#e8e8e8',\n    colorNeedleCircleInnerEnd: '#f5f5f5',\n\n    // needle\n    needleCircleSize: 10,\n    needleCircleInner: true,\n    needleCircleOuter: true,\n\n    // custom animations\n    animationTarget: 'needle' // 'needle' or 'plate'\n});\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gradient-filled circle on a canvas\n *\n * @access private\n * @param {number} radius\n * @param {number} width\n * @param {Canvas2DContext} context\n * @param {string} start gradient start color\n * @param {string} end gradient end color\n */\nfunction drawRadialBorder(radius, width, context, start, end) {\n    context.beginPath();\n    //noinspection JSUnresolvedFunction\n    context.arc(0, 0, abs(radius), 0, PI * 2, true);\n    context.lineWidth = width;\n    context.strokeStyle = end ? drawings.linearGradient(context, start, end, radius) : start;\n    context.stroke();\n    context.closePath();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Returns max radius without borders for the gauge\n *\n * @param {Canvas2DContext} context\n * @param {RadialGaugeOptions} options\n * @return {number}\n */\nfunction maxRadialRadius(context, options) {\n    if (!context.maxRadius) {\n        context.maxRadius = context.max - options.borderShadowWidth - options.borderOuterWidth - options.borderMiddleWidth - options.borderInnerWidth + (options.borderOuterWidth ? 0.5 : 0) + (options.borderMiddleWidth ? 0.5 : 0) + (options.borderInnerWidth ? 0.5 : 0);\n    }\n\n    return context.maxRadius;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge plate on the canvas\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {RadialGaugeOptions} options\n */\nfunction drawRadialPlate(context, options) {\n    var d0 = options.borderShadowWidth;\n    var r0 = context.max - d0 - options.borderOuterWidth / 2;\n    var r1 = r0 - options.borderOuterWidth / 2 - options.borderMiddleWidth / 2 + 0.5;\n    var r2 = r1 - options.borderMiddleWidth / 2 - options.borderInnerWidth / 2 + 0.5;\n    var r3 = maxRadialRadius(context, options);\n    var grad = void 0;\n    var shadowDrawn = false;\n\n    context.save();\n\n    if (options.borderOuterWidth) {\n        shadowDrawn = drawings.drawShadow(context, options, shadowDrawn);\n        drawRadialBorder(r0, options.borderOuterWidth, context, options.colorBorderOuter, options.colorBorderOuterEnd);\n    }\n\n    if (options.borderMiddleWidth) {\n        shadowDrawn = drawings.drawShadow(context, options, shadowDrawn);\n        drawRadialBorder(r1, options.borderMiddleWidth, context, options.colorBorderMiddle, options.colorBorderMiddleEnd);\n    }\n\n    if (options.borderInnerWidth) {\n        shadowDrawn = drawings.drawShadow(context, options, shadowDrawn);\n        drawRadialBorder(r2, options.borderInnerWidth, context, options.colorBorderInner, options.colorBorderInnerEnd);\n    }\n\n    drawings.drawShadow(context, options, shadowDrawn);\n\n    context.beginPath();\n    //noinspection JSUnresolvedFunction\n    context.arc(0, 0, abs(r3), 0, PI * 2, true);\n\n    if (options.colorPlateEnd) {\n        grad = context.createRadialGradient(0, 0, r3 / 2, 0, 0, r3);\n        grad.addColorStop(0, options.colorPlate);\n        grad.addColorStop(1, options.colorPlateEnd);\n    } else {\n        grad = options.colorPlate;\n    }\n\n    context.fillStyle = grad;\n\n    context.fill();\n    context.closePath();\n\n    context.restore();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge highlight areas on a canvas\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {RadialGaugeOptions} options\n */\nfunction drawRadialHighlights(context, options) {\n    var hlWidth = context.max * (parseFloat(options.highlightsWidth) || 0) / 100;\n\n    if (!hlWidth) return;\n\n    //noinspection JSUnresolvedFunction\n    var r = abs(radialTicksRadius(context, options) - hlWidth / 2);\n    var i = 0,\n        s = options.highlights.length;\n    var vd = (options.maxValue - options.minValue) / options.ticksAngle;\n\n    context.save();\n\n    for (; i < s; i++) {\n        var hlt = options.highlights[i];\n\n        context.beginPath();\n\n        context.rotate(HPI);\n        context.arc(0, 0, r, drawings.radians(options.startAngle + (hlt.from - options.minValue) / vd), drawings.radians(options.startAngle + (hlt.to - options.minValue) / vd), false);\n        context.strokeStyle = hlt.color;\n        context.lineWidth = hlWidth;\n        context.stroke();\n        context.closePath();\n\n        context.restore();\n        context.save();\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws minor ticks bar on a canvas\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {RadialGaugeOptions} options\n */\nfunction drawRadialMinorTicks(context, options) {\n    var radius = radialTicksRadius(context, options);\n\n    context.lineWidth = SmartCanvas.pixelRatio;\n    context.strokeStyle = options.colorMinorTicks;\n\n    context.save();\n\n    var s = options.minorTicks * (options.majorTicks.length - 1);\n    var i = 0;\n\n    for (; i < s; ++i) {\n        var angle = options.startAngle + i * (options.ticksAngle / s);\n\n        context.rotate(drawings.radians(angle));\n\n        context.beginPath();\n        context.moveTo(0, radius);\n        context.lineTo(0, radius - context.max * 0.075);\n        closeStrokedPath(context);\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Returns ticks radius\n *\n * @access private\n * @param context\n * @param options\n * @return {number}\n */\nfunction radialTicksRadius(context, options) {\n    return maxRadialRadius(context, options) - context.max * 0.05;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge major ticks bar on a canvas\n *\n * @param {Canvas2DContext} context\n * @param {RadialGaugeOptions} options\n */\nfunction drawRadialMajorTicks(context, options) {\n    drawings.prepareTicks(options);\n\n    //noinspection JSUnresolvedFunction\n    var r = abs(radialTicksRadius(context, options));\n    var i = void 0,\n        colors = void 0;\n    var s = options.majorTicks.length;\n    var pixelRatio = SmartCanvas.pixelRatio;\n\n    context.lineWidth = 2 * pixelRatio;\n    context.save();\n\n    colors = options.colorMajorTicks instanceof Array ? options.colorMajorTicks : new Array(s).fill(options.colorMajorTicks);\n\n    i = 0;\n    for (; i < s; ++i) {\n        context.strokeStyle = colors[i];\n        context.rotate(drawings.radians(radialNextAngle(options, i, s)));\n\n        context.beginPath();\n        context.moveTo(0, r);\n        context.lineTo(0, r - context.max * 0.15);\n        closeStrokedPath(context);\n    }\n\n    if (options.strokeTicks) {\n        context.strokeStyle = colors[0];\n        context.rotate(HPI);\n\n        context.beginPath();\n        context.arc(0, 0, r, drawings.radians(options.startAngle), drawings.radians(options.startAngle + options.ticksAngle), false);\n        closeStrokedPath(context);\n    }\n}\n\n/* istanbul ignore next: private, not testable */\nfunction radialNextAngle(options, i, s) {\n    return options.startAngle + i * (options.ticksAngle / (s - 1));\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Strokes, closes path and restores previous context state\n *\n * @param {Canvas2DContext} context\n */\nfunction closeStrokedPath(context) {\n    context.stroke();\n    context.restore();\n    context.closePath();\n    context.save();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge bar numbers\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {RadialGaugeOptions} options\n */\nfunction drawRadialNumbers(context, options) {\n    var radius = maxRadialRadius(context, options) - context.max * 0.35;\n    var points = {};\n    var i = 0;\n    var s = options.majorTicks.length;\n    var isAnimated = options.animationTarget !== 'needle';\n    var colors = options.colorNumbers instanceof Array ? options.colorNumbers : new Array(s).fill(options.colorNumbers);\n\n    var plateValueAngle = isAnimated ? -(options.value - options.minValue) / (options.maxValue - options.minValue) * options.ticksAngle : 0;\n\n    if (isAnimated) {\n        context.save();\n        context.rotate(-drawings.radians(plateValueAngle));\n    }\n\n    for (; i < s; ++i) {\n        var angle = plateValueAngle + radialNextAngle(options, i, s);\n        var point = drawings.radialPoint(radius, drawings.radians(angle));\n\n        if (angle === 360) angle = 0;\n\n        if (points[angle]) {\n            continue; //already drawn at this place, skipping\n        }\n\n        points[angle] = true;\n\n        context.font = drawings.font(options, 'Numbers', context.max / 200);\n        context.fillStyle = colors[i];\n        context.lineWidth = 0;\n        context.textAlign = 'center';\n        context.fillText(options.majorTicks[i], point.x, point.y + 3);\n    }\n\n    isAnimated && context.restore();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge title\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {RadialGaugeOptions} options\n */\nfunction drawRadialTitle(context, options) {\n    if (!options.title) return;\n\n    context.save();\n    context.font = drawings.font(options, 'Title', context.max / 200);\n    context.fillStyle = options.colorTitle;\n    context.textAlign = 'center';\n    context.fillText(options.title, 0, -context.max / 4.25, context.max * 0.8);\n    context.restore();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws units name on the gauge\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {RadialGaugeOptions} options\n */\nfunction drawRadialUnits(context, options) {\n    if (!options.units) return;\n\n    context.save();\n    context.font = drawings.font(options, 'Units', context.max / 200);\n    context.fillStyle = options.colorUnits;\n    context.textAlign = 'center';\n    context.fillText(options.units, 0, context.max / 3.25, context.max * 0.8);\n    context.restore();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge needle\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {RadialGaugeOptions} options\n */\nfunction drawRadialNeedle(context, options) {\n    if (!options.needle) return;\n\n    var value = options.value;\n    var max = maxRadialRadius(context, options);\n    //noinspection JSUnresolvedFunction\n    var r1 = abs(max / 100 * options.needleCircleSize);\n    //noinspection JSUnresolvedFunction\n    var r2 = abs(max / 100 * options.needleCircleSize * 0.75);\n    //noinspection JSUnresolvedFunction\n    var rIn = abs(max / 100 * options.needleEnd);\n    //noinspection JSUnresolvedFunction\n    var rStart = abs(options.needleStart ? max / 100 * options.needleStart : 0);\n    //noinspection JSUnresolvedFunction\n    var rOut = abs(max * 0.2);\n    var pad1 = max / 100 * options.needleWidth;\n    var pad2 = max / 100 * options.needleWidth / 2;\n    var pixelRatio = SmartCanvas.pixelRatio;\n    var isFixed = options.animationTarget !== 'needle';\n\n    context.save();\n\n    drawings.drawNeedleShadow(context, options);\n\n    context.rotate(drawings.radians(isFixed ? options.startAngle : options.startAngle + (value - options.minValue) / (options.maxValue - options.minValue) * options.ticksAngle));\n\n    context.fillStyle = drawings.linearGradient(context, options.colorNeedle, options.colorNeedleEnd, rIn - rOut);\n\n    if (options.needleType === 'arrow') {\n        context.beginPath();\n        context.moveTo(-pad2, -rOut);\n        context.lineTo(-pad1, 0);\n        context.lineTo(-1 * pixelRatio, rIn);\n        context.lineTo(pixelRatio, rIn);\n        context.lineTo(pad1, 0);\n        context.lineTo(pad2, -rOut);\n        context.closePath();\n        context.fill();\n\n        context.beginPath();\n        context.lineTo(-0.5 * pixelRatio, rIn);\n        context.lineTo(-1 * pixelRatio, rIn);\n        context.lineTo(-pad1, 0);\n        context.lineTo(-pad2, -rOut);\n        context.lineTo(pad2 / 2 * pixelRatio - 2 * pixelRatio, -rOut);\n        context.closePath();\n        context.fillStyle = options.colorNeedleShadowUp;\n        context.fill();\n    } else {\n        // simple line needle\n        context.beginPath();\n        context.moveTo(-pad2, rIn);\n        context.lineTo(-pad2, rStart);\n        context.lineTo(pad2, rStart);\n        context.lineTo(pad2, rIn);\n        context.closePath();\n        context.fill();\n    }\n\n    if (options.needleCircleSize) {\n        context.restore();\n\n        drawings.drawNeedleShadow(context, options);\n\n        if (options.needleCircleOuter) {\n            context.beginPath();\n            context.arc(0, 0, r1, 0, PI * 2, true);\n            context.fillStyle = drawings.linearGradient(context, options.colorNeedleCircleOuter, options.colorNeedleCircleOuterEnd, r1);\n            context.fill();\n            context.closePath();\n        }\n\n        if (options.needleCircleInner) {\n            context.beginPath();\n            context.arc(0, 0, r2, 0, PI * 2, true);\n            context.fillStyle = drawings.linearGradient(context, options.colorNeedleCircleInner, options.colorNeedleCircleInnerEnd, r2);\n            context.fill();\n            context.closePath();\n        }\n\n        context.restore();\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge value box\n *\n * @param {Canvas2DContext} context\n * @param {RadialGaugeOptions} options\n * @param {number} value\n */\nfunction drawRadialValueBox(context, options, value) {\n    drawings.drawValueBox(context, options, value, 0, context.max - context.max * 0.33, context.max);\n}\n\n/**\n * Minimalistic HTML5 Canvas Gauge\n * @example\n *  var gauge = new RadialGauge({\n *     renderTo: 'gauge-id', // identifier of HTML canvas element or element itself\n *     width: 400,\n *     height: 400,\n *     units: 'Km/h',\n *     title: false,\n *     value: 0,\n *     minValue: 0,\n *     maxValue: 220,\n *     majorTicks: [\n *         '0','20','40','60','80','100','120','140','160','180','200','220'\n *     ],\n *     minorTicks: 2,\n *     strokeTicks: false,\n *     highlights: [\n *         { from: 0, to: 50, color: 'rgba(0,255,0,.15)' },\n *         { from: 50, to: 100, color: 'rgba(255,255,0,.15)' },\n *         { from: 100, to: 150, color: 'rgba(255,30,0,.25)' },\n *         { from: 150, to: 200, color: 'rgba(255,0,225,.25)' },\n *         { from: 200, to: 220, color: 'rgba(0,0,255,.25)' }\n *     ],\n *     colorPlate: '#222',\n *     colorMajorTicks: '#f5f5f5',\n *     colorMinorTicks: '#ddd',\n *     colorTitle: '#fff',\n *     colorUnits: '#ccc',\n *     colorNumbers: '#eee',\n *     colorNeedleStart: 'rgba(240, 128, 128, 1)',\n *     colorNeedleEnd: 'rgba(255, 160, 122, .9)',\n *     valueBox: true,\n *     animationRule: 'bounce'\n * });\n * // draw initially\n * gauge.draw();\n * // animate\n * setInterval(() => {\n *    gauge.value = Math.random() * -220 + 220;\n * }, 1000);\n */\n\nvar RadialGauge = function (_BaseGauge) {\n    _inherits(RadialGauge, _BaseGauge);\n\n    /**\n     * @constructor\n     * @param {RadialGaugeOptions} options\n     */\n    function RadialGauge(options) {\n        _classCallCheck(this, RadialGauge);\n\n        options = Object.assign({}, defaultRadialGaugeOptions, options || {});\n\n        /* istanbul ignore if */\n        if (isNaN(options.startAngle)) options.startAngle = 45;\n        /* istanbul ignore if */\n        if (isNaN(options.ticksAngle)) options.ticksAngle = 270;\n\n        /* istanbul ignore if */\n        if (options.ticksAngle > 360) options.ticksAngle = 360;\n        /* istanbul ignore if */\n        if (options.ticksAngle < 0) options.ticksAngle = 0;\n\n        /* istanbul ignore if */\n        if (options.startAngle < 0) options.startAngle = 0;\n        /* istanbul ignore if */\n        if (options.startAngle > 360) options.startAngle = 360;\n\n        return _possibleConstructorReturn(this, (RadialGauge.__proto__ || Object.getPrototypeOf(RadialGauge)).call(this, options));\n    }\n\n    /*  */\n    /**\n     * Triggering gauge render on a canvas.\n     *\n     * @returns {RadialGauge}\n     */\n\n\n    _createClass(RadialGauge, [{\n        key: 'draw',\n        value: function draw() {\n            try {\n                var canvas = this.canvas;\n                var _ref = [-canvas.drawX, -canvas.drawY, canvas.drawWidth, canvas.drawHeight];\n                var x = _ref[0];\n                var y = _ref[1];\n                var w = _ref[2];\n                var h = _ref[3];\n\n                var options = this.options;\n\n                if (options.animationTarget === 'needle') {\n                    if (!canvas.elementClone.initialized) {\n                        var context = canvas.contextClone;\n\n                        // clear the cache\n                        context.clearRect(x, y, w, h);\n                        context.save();\n\n                        drawRadialPlate(context, options);\n                        drawRadialHighlights(context, options);\n                        drawRadialMinorTicks(context, options);\n                        drawRadialMajorTicks(context, options);\n                        drawRadialNumbers(context, options);\n                        drawRadialTitle(context, options);\n                        drawRadialUnits(context, options);\n\n                        canvas.elementClone.initialized = true;\n                    }\n\n                    this.canvas.commit();\n\n                    // clear the canvas\n                    canvas.context.clearRect(x, y, w, h);\n                    canvas.context.save();\n\n                    canvas.context.drawImage(canvas.elementClone, x, y, w, h);\n                    canvas.context.save();\n\n                    drawRadialValueBox(canvas.context, options, options.animatedValue ? this.options.value : this.value);\n                    drawRadialNeedle(canvas.context, options);\n                } else {\n                    var plateValueAngle = -drawings.radians((options.value - options.minValue) / (options.maxValue - options.minValue) * options.ticksAngle);\n\n                    // clear the canvas\n                    canvas.context.clearRect(x, y, w, h);\n                    canvas.context.save();\n\n                    drawRadialPlate(canvas.context, options);\n\n                    canvas.context.rotate(plateValueAngle);\n\n                    // animated\n                    drawRadialHighlights(canvas.context, options);\n                    drawRadialMinorTicks(canvas.context, options);\n                    drawRadialMajorTicks(canvas.context, options);\n                    drawRadialNumbers(canvas.context, options);\n\n                    // non-animated\n                    canvas.context.rotate(-plateValueAngle);\n                    canvas.context.save();\n\n                    if (!canvas.elementClone.initialized) {\n                        var _context = canvas.contextClone;\n\n                        // clear the cache\n                        _context.clearRect(x, y, w, h);\n                        _context.save();\n\n                        drawRadialTitle(_context, options);\n                        drawRadialUnits(_context, options);\n                        drawRadialNeedle(_context, options);\n\n                        canvas.elementClone.initialized = true;\n                    }\n\n                    canvas.context.drawImage(canvas.elementClone, x, y, w, h);\n                }\n\n                // value box animations\n                drawRadialValueBox(canvas.context, options, options.animatedValue ? this.options.value : this.value);\n\n                _get(RadialGauge.prototype.__proto__ || Object.getPrototypeOf(RadialGauge.prototype), 'draw', this).call(this);\n            } catch (err) {\n                drawings.verifyError(err);\n            }\n\n            return this;\n        }\n    }]);\n\n    return RadialGauge;\n}(BaseGauge);\n\n/**\n * @ignore\n * @typedef {object} ns\n */\n/* istanbul ignore if */\n\n\nif (typeof ns !== 'undefined') {\n    ns['RadialGauge'] = RadialGauge;\n}\n\nBaseGauge.initialize('RadialGauge', defaultRadialGaugeOptions);\n\n/*!\n * The MIT License (MIT)\n *\n * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/**\n * Linear gauge configuration options\n *\n * @typedef {GenericOptions|{borderRadius: number, barBeginCircle: number, barWidth: number, barStrokeWidth: number, barProgress: boolean, colorBar: string, colorBarEnd: string, colorBarStroke: string, colorBarProgress: string, colorBarProgressEnd: string, tickSide: string, needleSide: string, numberSide: string, ticksWidth: number, ticksWidthMinor: number, ticksPadding: number, barLength: number}} LinearGaugeOptions\n */\n\n/**\n * Default linear gauge configuration options\n *\n * @type {LinearGaugeOptions}\n */\nvar defaultLinearGaugeOptions = Object.assign({}, GenericOptions, {\n    // basic options\n    borderRadius: 0,\n    // width: 150,\n    // height: 400,\n\n    // bar\n    barBeginCircle: 30, // percents\n    barWidth: 20, // percents\n    barStrokeWidth: 0, // pixels\n    barProgress: true,\n\n    colorBarStroke: '#222',\n    colorBar: '#ccc',\n    colorBarEnd: '',\n    colorBarProgress: '#888',\n    colorBarProgressEnd: '',\n\n    needleWidth: 6,\n\n    tickSide: 'both', // available: 'left', 'right', 'both'\n    needleSide: 'both', // available: 'left', 'right', 'both'\n\n    numberSide: 'both', // available: 'left', 'right', 'both'\n\n    ticksWidth: 10,\n    ticksWidthMinor: 5,\n    ticksPadding: 5,\n    barLength: 85,\n    fontTitleSize: 26,\n\n    highlightsWidth: 10\n});\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws rectangle on a canvas\n *\n * @param {Canvas2DContext} context\n * @param {number} r radius for founded corner rectangle if 0 or less won't be drawn\n * @param {number} x x-coordinate of the top-left corner\n * @param {number} y y-coordinate of the top-left corner\n * @param {number} w width of the rectangle\n * @param {number} h height of the rectangle\n * @param {string} colorStart base fill color of the rectangle\n * @param {string} [colorEnd] gradient color of the rectangle\n */\nfunction drawRectangle(context, r, x, y, w, h, colorStart, colorEnd) {\n    context.beginPath();\n    context.fillStyle = colorEnd ? drawings.linearGradient(context, colorStart, colorEnd, w > h ? w : h, h > w, w > h ? x : y) : colorStart;\n\n    r > 0 ? drawings.roundRect(context, x, y, w, h, r) : context.rect(x, y, w, h);\n\n    context.fill();\n    context.closePath();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws rectangle on a canvas\n *\n * @param {Canvas2DContext} context\n * @param {number} width width of the border\n * @param {number} r radius for founded corner rectangle if 0 or less won't be drawn\n * @param {number} x x-coordinate of the top-left corner\n * @param {number} y y-coordinate of the top-left corner\n * @param {number} w width of the rectangle\n * @param {number} h height of the rectangle\n * @param {string} colorStart base fill color of the rectangle\n * @param {string} [colorEnd] gradient color of the rectangle\n */\nfunction drawLinearBorder(context, width, r, x, y, w, h, colorStart, colorEnd) {\n    context.beginPath();\n    context.lineWidth = width;\n    context.strokeStyle = colorEnd ? drawings.linearGradient(context, colorStart, colorEnd, h, true, y) : colorStart;\n\n    r > 0 ? drawings.roundRect(context, x, y, w, h, r) : context.rect(x, y, w, h);\n\n    context.stroke();\n    context.closePath();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws linear gauge plate\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n */\nfunction drawLinearPlate(context, options, x, y, w, h) {\n    context.save();\n\n    var r = options.borderRadius;\n    var w1 = w - options.borderShadowWidth - options.borderOuterWidth;\n    var w2 = w1 - options.borderOuterWidth - options.borderMiddleWidth;\n    var w3 = w2 - options.borderMiddleWidth - options.borderInnerWidth;\n    var w4 = w3 - options.borderInnerWidth;\n\n    var h1 = h - options.borderShadowWidth - options.borderOuterWidth;\n    var h2 = h1 - options.borderOuterWidth - options.borderMiddleWidth;\n    var h3 = h2 - options.borderMiddleWidth - options.borderInnerWidth;\n    var h4 = h3 - options.borderInnerWidth;\n\n    var x2 = x - (w2 - w1) / 2;\n    var x3 = x2 - (w3 - w2) / 2;\n    var x4 = x3 - (w4 - w3) / 2;\n\n    var y2 = y - (h2 - h1) / 2;\n    var y3 = y2 - (h3 - h2) / 2;\n    var y4 = y3 - (h4 - h3) / 2;\n    var aliasingOffset = 0;\n    var shadowDrawn = false;\n\n    if (options.borderOuterWidth) {\n        shadowDrawn = drawings.drawShadow(context, options, shadowDrawn);\n        drawLinearBorder(context, options.borderOuterWidth, r, x + options.borderOuterWidth / 2 - aliasingOffset, y + options.borderOuterWidth / 2 - aliasingOffset, w1, h1, options.colorBorderOuter, options.colorBorderOuterEnd);\n        aliasingOffset += 0.5;\n    }\n\n    if (options.borderMiddleWidth) {\n        shadowDrawn = drawings.drawShadow(context, options, shadowDrawn);\n        drawLinearBorder(context, options.borderMiddleWidth, r -= 1 + aliasingOffset * 2, x2 + options.borderMiddleWidth / 2 - aliasingOffset, y2 + options.borderMiddleWidth / 2 - aliasingOffset, w2 + aliasingOffset * 2, h2 + aliasingOffset * 2, options.colorBorderMiddle, options.colorBorderMiddleEnd);\n        aliasingOffset += 0.5;\n    }\n\n    if (options.borderInnerWidth) {\n        shadowDrawn = drawings.drawShadow(context, options, shadowDrawn);\n        drawLinearBorder(context, options.borderInnerWidth, r -= 1 + aliasingOffset * 2, x3 + options.borderInnerWidth / 2 - aliasingOffset, y3 + options.borderInnerWidth / 2 - aliasingOffset, w3 + aliasingOffset * 2, h3 + aliasingOffset * 2, options.colorBorderInner, options.colorBorderInnerEnd);\n        aliasingOffset += 0.5;\n    }\n\n    drawings.drawShadow(context, options, shadowDrawn);\n\n    drawRectangle(context, r, x4, y4, w4 + aliasingOffset * 2, h4 + aliasingOffset * 2, options.colorPlate, options.colorPlateEnd);\n\n    context.restore();\n\n    return [x4, y4, w4, h4];\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Calculates and returns linear gauge base bar dimensions.\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions|{barStrokeWidth: number, barBeginCircle: number, barWidth: number, hasLeft: boolean, hasRight: boolean}} options\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @return {{isVertical: boolean, width: number, length: number, barWidth: number, barLength: number, strokeWidth: number, barMargin: number, radius: number, x0: number, y0: number, barOffset: number, titleMargin: number, unitsMargin: number, X: number, Y: number, baseX: number, baseY: number, ticksPadding: number}}\n */\nfunction barDimensions(context, options, x, y, w, h) {\n    var pixelRatio = SmartCanvas.pixelRatio;\n    var isVertical = h >= w;\n    var width = isVertical ? w * 0.85 : h;\n    var length = isVertical ? h : w;\n\n    //noinspection JSUnresolvedFunction\n    x = isVertical ? round(x + (w - width) / 2) : x;\n\n    var hasTitle = !!options.title;\n    var hasUnits = !!options.units;\n    var hasValue = !!options.valueBox;\n\n    var titleMargin = void 0;\n    var unitsMargin = void 0;\n    var valueMargin = void 0;\n\n    if (isVertical) {\n        //noinspection JSUnresolvedFunction\n        unitsMargin = round(length * 0.05);\n        //noinspection JSUnresolvedFunction\n        titleMargin = round(length * 0.075);\n        //noinspection JSUnresolvedFunction\n        valueMargin = round(length * 0.11);\n\n        if (hasTitle) {\n            length -= titleMargin;\n            y += titleMargin;\n        }\n\n        if (hasUnits) length -= unitsMargin;\n        if (hasValue) length -= valueMargin;\n    } else {\n        //noinspection JSUnresolvedFunction\n        unitsMargin = titleMargin = round(width * 0.15);\n\n        if (hasTitle) {\n            width -= titleMargin;\n            y += titleMargin;\n        }\n\n        if (hasUnits) width -= unitsMargin;\n    }\n\n    var strokeWidth = options.barStrokeWidth * 2;\n    //noinspection JSUnresolvedFunction\n    var radius = options.barBeginCircle ? round(width * options.barBeginCircle / 200 - strokeWidth / 2) : 0;\n    //noinspection JSUnresolvedFunction\n    var barWidth = round(width * options.barWidth / 100 - strokeWidth);\n    //noinspection JSUnresolvedFunction\n    var barLength = round(length * options.barLength / 100 - strokeWidth);\n    //noinspection JSUnresolvedFunction\n    var barMargin = round((length - barLength) / 2);\n\n    // coordinates for arc of the bar if configured\n    //noinspection JSUnresolvedFunction\n    var x0 = round(x + (isVertical ? width / 2 : barMargin + radius));\n    //noinspection JSUnresolvedFunction\n    var y0 = round(y + (isVertical ? length - barMargin - radius + strokeWidth / 2 : width / 2));\n    var dx = isVertical && !(options.hasLeft && options.hasRight) ? (options.hasRight ? -1 : 1) * options.ticksWidth / 100 * width : 0;\n    var dy = !isVertical && !(options.hasLeft && options.hasRight) ? (options.hasRight ? -1 : 1) * options.ticksWidth / 100 * width : 0;\n\n    //noinspection JSUndefinedPropertyAssignment\n    context.barDimensions = {\n        isVertical: isVertical,\n        width: width,\n        length: length,\n        barWidth: barWidth,\n        barLength: barLength,\n        strokeWidth: strokeWidth,\n        barMargin: barMargin,\n        radius: radius,\n        pixelRatio: pixelRatio,\n        barOffset: null,\n        titleMargin: hasTitle ? titleMargin : 0,\n        unitsMargin: hasUnits ? unitsMargin : 0,\n        get ticksLength() {\n            return this.barLength - this.barOffset - this.strokeWidth;\n        },\n        X: x + dx,\n        Y: y + dy,\n        x0: x0 + dx,\n        y0: y0 + dy,\n        baseX: x,\n        baseY: y,\n        ticksPadding: options.ticksPadding / 100\n    };\n\n    return context.barDimensions;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws bar shape from the given options on a given canvas context\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n * @param {string} type\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n */\nfunction drawLinearBarShape(context, options, type, x, y, w, h) {\n    var _barDimensions = barDimensions(context, options, x, y, w, h);\n\n    var isVertical = _barDimensions.isVertical;\n    var width = _barDimensions.width;\n    var barWidth = _barDimensions.barWidth;\n    var barLength = _barDimensions.barLength;\n    var strokeWidth = _barDimensions.strokeWidth;\n    var barMargin = _barDimensions.barMargin;\n    var radius = _barDimensions.radius;\n    var x0 = _barDimensions.x0;\n    var y0 = _barDimensions.y0;\n    var X = _barDimensions.X;\n    var Y = _barDimensions.Y;\n\n    var fullBarLength = barLength;\n\n    context.save();\n    context.beginPath();\n\n    if (options.barBeginCircle) {\n        var direction = drawings.radians(isVertical ? 270 : 0);\n        var alpha = Math.asin(barWidth / 2 / radius);\n        var cosAlpha = Math.cos(alpha);\n        var sinAlpha = Math.sin(alpha);\n\n        var x1 = x0 + (isVertical ? radius * sinAlpha : radius * cosAlpha - strokeWidth / 2);\n        var y1 = isVertical ? y0 - radius * cosAlpha : y0 + radius * sinAlpha;\n        //noinspection JSUnresolvedFunction\n        var cutRadius = isVertical ? abs(y1 - y0) : abs(x1 - x0);\n\n        //noinspection JSUnresolvedFunction\n        context.barDimensions.barOffset = round(cutRadius + radius);\n\n        // bottom point\n        //noinspection JSUnresolvedFunction\n        var x2 = isVertical ? round(x0 - radius * sinAlpha) : x1;\n        //noinspection JSUnresolvedFunction\n        var y2 = isVertical ? y1 : round(y0 - radius * sinAlpha);\n\n        if (type === 'progress') {\n            barLength = context.barDimensions.barOffset + (barLength - context.barDimensions.barOffset) * (options.value - options.minValue) / (options.maxValue - options.minValue);\n        }\n\n        // bar ends at\n        //noinspection JSUnresolvedFunction\n        var x3 = round(x1 + barLength - context.barDimensions.barOffset + strokeWidth / 2); // h\n        //noinspection JSUnresolvedFunction\n        var y3 = round(y1 - barLength + context.barDimensions.barOffset - strokeWidth / 2); // v\n\n        context.arc(x0, y0, radius, direction + alpha, direction - alpha);\n\n        if (isVertical) {\n            context.moveTo(x1, y2);\n            context.lineTo(x1, y3);\n            context.lineTo(x2, y3);\n            context.lineTo(x2, y2);\n        } else {\n            context.moveTo(x1, y2);\n            context.lineTo(x3, y2);\n            context.lineTo(x3, y1);\n            context.lineTo(x1, y1);\n        }\n    } else {\n        // simply rectangle\n        //noinspection JSUnresolvedFunction\n        var rx = round(isVertical ? X + (width - barWidth) / 2 : X + barMargin);\n        //noinspection JSUnresolvedFunction\n        var ry = round(isVertical ? Y + barLength + barMargin : Y + (width - barWidth) / 2);\n\n        if (type === 'progress') {\n            barLength *= (options.value - options.minValue) / (options.maxValue - options.minValue);\n        }\n\n        if (isVertical) context.rect(rx, ry, barWidth, -barLength);else context.rect(rx, ry, barLength, barWidth);\n    }\n\n    if (type !== 'progress' && options.barStrokeWidth) {\n        context.lineWidth = strokeWidth;\n        context.strokeStyle = options.colorBarStroke;\n        //context.lineJoin = 'round';\n        context.stroke();\n    }\n\n    if (type !== 'progress' && options.colorBar) {\n        context.fillStyle = options.colorBarEnd ? drawings.linearGradient(context, options.colorBar, options.colorBarEnd, barLength, isVertical, isVertical ? Y : X) : options.colorBar;\n        context.fill();\n    } else if (type === 'progress' && options.colorBarProgress) {\n        context.fillStyle = options.colorBarProgressEnd ? drawings.linearGradient(context, options.colorBarProgress, options.colorBarProgressEnd, fullBarLength, isVertical, isVertical ? Y : X) : options.colorBarProgress;\n        context.fill();\n    }\n\n    context.closePath();\n\n    // fix dimensions for further usage\n    if (options.barBeginCircle) context.barDimensions.radius += strokeWidth;\n\n    context.barDimensions.barWidth += strokeWidth;\n    context.barDimensions.barLength += strokeWidth;\n}\n\n/**\n * Draws gauge bar\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n * @param {number} x x-coordinate of the top-left corner of the gauge\n * @param {number} y y-coordinate of the top-left corner of the gauge\n * @param {number} w width of the gauge\n * @param {number} h height of the gauge\n */\nfunction drawLinearBar(context, options, x, y, w, h) {\n    drawLinearBarShape(context, options, '', x, y, w, h);\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Helper function to calculate bar ticks presence on the sides\n *\n * @param {string} notWhich\n * @param {LinearGaugeOptions} options\n * @return {boolean}\n */\nfunction hasTicksBar(notWhich, options) {\n    return options.needleSide !== notWhich || options.tickSide !== notWhich || options.numberSide !== notWhich;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge bar progress\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n * @param {number} x x-coordinate of the top-left corner of the gauge\n * @param {number} y y-coordinate of the top-left corner of the gauge\n * @param {number} w width of the gauge\n * @param {number} h height of the gauge\n */\nfunction drawLinearBarProgress(context, options, x, y, w, h) {\n    options.barProgress && drawLinearBarShape(context, options, 'progress', x, y, w, h);\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge bar highlighted areas\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n */\nfunction drawLinearBarHighlights(context, options) {\n    var _context$barDimension = context.barDimensions;\n    var isVertical = _context$barDimension.isVertical;\n    var width = _context$barDimension.width;\n    var length = _context$barDimension.length;\n    var barWidth = _context$barDimension.barWidth;\n    var barOffset = _context$barDimension.barOffset;\n    var barMargin = _context$barDimension.barMargin;\n    var X = _context$barDimension.X;\n    var Y = _context$barDimension.Y;\n    var ticksLength = _context$barDimension.ticksLength;\n    var ticksPadding = _context$barDimension.ticksPadding;\n\n    var hlWidth = width * (parseFloat(options.highlightsWidth) || 0) / 100;\n\n    if (!options.highlights || !hlWidth) return;\n\n    var hasLeft = options.tickSide !== 'right';\n    var hasRight = options.tickSide !== 'left';\n    var i = 0;\n    var s = options.highlights.length;\n    var tickOffset = (width - barWidth) / 2;\n    var interval = options.maxValue - options.minValue;\n    //noinspection JSUnresolvedFunction\n    var eX = round(isVertical ? X + tickOffset : X + barMargin + barOffset);\n    var eH = hlWidth;\n    var eY = isVertical ? Y + length - barMargin - barOffset : Y + tickOffset;\n    //noinspection JSUnresolvedFunction\n    var hLeft = round((options.ticksWidth / 100 + ticksPadding) * width) + (hlWidth - options.ticksWidth / 100 * width);\n    //noinspection JSUnresolvedFunction\n    var hRight = round(barWidth + ticksPadding * width);\n\n    context.save();\n\n    for (; i < s; i++) {\n        var entry = options.highlights[i];\n        //noinspection JSUnresolvedFunction\n        var eStart = ticksLength * abs(entry.from) / interval;\n        //noinspection JSUnresolvedFunction\n        var eW = ticksLength * abs((entry.to - entry.from) / interval);\n\n        context.beginPath();\n        context.fillStyle = entry.color;\n\n        if (isVertical) {\n            if (hasLeft) context.rect(eX - hLeft, eY - eStart, eH, -eW);\n\n            if (hasRight) context.rect(eX + hRight, eY - eStart, eH, -eW);\n        } else {\n            if (hasLeft) context.rect(eX + eStart, eY - hLeft, eW, eH);\n\n            if (hasRight) context.rect(eX + eStart, eY + hRight, eW, eH);\n        }\n\n        context.fill();\n        context.closePath();\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws a tick line on a linear gauge\n *\n * @param {Canvas2DContext} context\n * @param x1\n * @param y1\n * @param x2\n * @param y2\n */\nfunction drawLinearTick(context, x1, y1, x2, y2) {\n    context.beginPath();\n\n    context.moveTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.stroke();\n\n    context.closePath();\n    context.save();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws ticks\n *\n * @param {Canvas2DContext} context\n * @param {string} color\n * @param {number} ticksSize\n * @param {number} deltaLen\n * @param {boolean} hasLeft\n * @param {boolean} hasRight\n * @param {number} lineWidth\n * @param {number} lineLength\n */\nfunction drawLinearTicks(context, color, ticksSize, deltaLen, hasLeft, hasRight, lineWidth, lineLength) {\n    var _context$barDimension2 = context.barDimensions;\n    var isVertical = _context$barDimension2.isVertical;\n    var length = _context$barDimension2.length;\n    var barWidth = _context$barDimension2.barWidth;\n    var barOffset = _context$barDimension2.barOffset;\n    var barMargin = _context$barDimension2.barMargin;\n    var pixelRatio = _context$barDimension2.pixelRatio;\n    var width = _context$barDimension2.width;\n    var X = _context$barDimension2.X;\n    var Y = _context$barDimension2.Y;\n    var ticksLength = _context$barDimension2.ticksLength;\n    var ticksPadding = _context$barDimension2.ticksPadding;\n\n    var tickOffset = (width - barWidth) / 2;\n    var tickX = void 0,\n        tickY = void 0;\n    var i = 0;\n    var tickLen = lineLength * width;\n    var tickLeft = tickOffset - ticksPadding * width;\n    var tickRight = tickOffset + barWidth + tickLen + ticksPadding * width;\n    var tickSpace = ticksLength / (ticksSize - deltaLen);\n    var colors = color instanceof Array ? color : new Array(ticksSize).fill(color);\n\n    context.lineWidth = lineWidth * pixelRatio;\n    context.save();\n\n    for (; i < ticksSize; i++) {\n        context.strokeStyle = colors[i];\n\n        if (isVertical) {\n            tickY = Y + length - barMargin - barOffset - i * tickSpace;\n\n            if (hasLeft) {\n                tickX = X + tickLeft;\n                //noinspection JSUnresolvedFunction\n                drawLinearTick(context, tickX, tickY, round(tickX - tickLen), tickY);\n            }\n\n            if (hasRight) {\n                tickX = X + tickRight;\n                //noinspection JSUnresolvedFunction\n                drawLinearTick(context, tickX, tickY, round(tickX - tickLen), tickY);\n            }\n        } else {\n            tickX = X + barMargin + barOffset + i * tickSpace;\n\n            if (hasLeft) {\n                tickY = Y + tickLeft;\n                //noinspection JSUnresolvedFunction\n                drawLinearTick(context, tickX, tickY, tickX, round(tickY - tickLen));\n            }\n\n            if (hasRight) {\n                tickY = Y + tickRight;\n                //noinspection JSUnresolvedFunction\n                drawLinearTick(context, tickX, round(tickY), tickX, tickY - tickLen);\n            }\n        }\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws major ticks\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n */\nfunction drawLinearMajorTicks(context, options) {\n    var _drawings$prepareTick = drawings.prepareTicks(options);\n\n    var _drawings$prepareTick2 = _slicedToArray(_drawings$prepareTick, 2);\n\n    var hasLeft = _drawings$prepareTick2[0];\n    var hasRight = _drawings$prepareTick2[1];\n\n    var lineWidth = 2;\n    var colors = options.colorMajorTicks instanceof Array ? options.colorMajorTicks : new Array(options.colorMajorTicks.length).fill(options.colorMajorTicks);\n\n    drawLinearTicks(context, options.colorMajorTicks, options.majorTicks.length, 1, hasLeft, hasRight, lineWidth, options.ticksWidth / 100);\n\n    if (options.strokeTicks) {\n        var _context$barDimension3 = context.barDimensions;\n        var isVertical = _context$barDimension3.isVertical;\n        var length = _context$barDimension3.length;\n        var width = _context$barDimension3.width;\n        var barWidth = _context$barDimension3.barWidth;\n        var barMargin = _context$barDimension3.barMargin;\n        var barOffset = _context$barDimension3.barOffset;\n        var X = _context$barDimension3.X;\n        var Y = _context$barDimension3.Y;\n        var ticksLength = _context$barDimension3.ticksLength;\n        var pixelRatio = _context$barDimension3.pixelRatio;\n        var ticksPadding = _context$barDimension3.ticksPadding;\n\n        var rightTicks = (width - barWidth) / 2 + barWidth + ticksPadding * width;\n        var leftTicks = (width - barWidth) / 2 - ticksPadding * width;\n        var sX = void 0,\n            sY = void 0,\n            eX = void 0,\n            eY = void 0;\n\n        context.strokeStyle = colors[0];\n\n        lineWidth *= pixelRatio;\n\n        if (isVertical) {\n            sY = Y + length - barMargin - barOffset + lineWidth / 2;\n            eY = sY - ticksLength - lineWidth;\n\n            if (hasLeft) {\n                //noinspection JSUnresolvedFunction\n                eX = sX = round(X + leftTicks);\n                drawLinearTickStroke(context, sX, sY, eX, eY);\n            }\n\n            if (hasRight) {\n                //noinspection JSUnresolvedFunction\n                eX = sX = round(X + rightTicks);\n                drawLinearTickStroke(context, sX, sY, eX, eY);\n            }\n        } else {\n            sX = X + barMargin + barOffset - lineWidth / 2;\n            eX = sX + ticksLength + lineWidth;\n\n            if (hasLeft) {\n                //noinspection JSUnresolvedFunction\n                eY = sY = round(Y + leftTicks);\n                drawLinearTickStroke(context, sX, sY, eX, eY);\n            }\n\n            if (hasRight) {\n                //noinspection JSUnresolvedFunction\n                eY = sY = round(Y + rightTicks);\n                drawLinearTickStroke(context, sX, sY, eX, eY);\n            }\n        }\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws ticks stroke\n *\n * @param {Canvas2DContext} context\n * @param {number} sX\n * @param {number} sY\n * @param {number} eX\n * @param {number} eY\n */\nfunction drawLinearTickStroke(context, sX, sY, eX, eY) {\n    context.beginPath();\n    context.moveTo(sX, sY);\n    context.lineTo(eX, eY);\n    context.stroke();\n    context.closePath();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws minor ticks\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n */\nfunction drawLinearMinorTicks(context, options) {\n    var _drawings$prepareTick3 = drawings.prepareTicks(options);\n\n    var _drawings$prepareTick4 = _slicedToArray(_drawings$prepareTick3, 2);\n\n    var hasLeft = _drawings$prepareTick4[0];\n    var hasRight = _drawings$prepareTick4[1];\n\n\n    drawLinearTicks(context, options.colorMinorTicks, options.minorTicks * (options.majorTicks.length - 1), 0, hasLeft, hasRight, 1, options.ticksWidthMinor / 100);\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws major tick numbers\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n */\nfunction drawLinearMajorTicksNumbers(context, options) {\n    var _context$barDimension4 = context.barDimensions;\n    var isVertical = _context$barDimension4.isVertical;\n    var length = _context$barDimension4.length;\n    var width = _context$barDimension4.width;\n    var barWidth = _context$barDimension4.barWidth;\n    var barMargin = _context$barDimension4.barMargin;\n    var barOffset = _context$barDimension4.barOffset;\n    var X = _context$barDimension4.X;\n    var Y = _context$barDimension4.Y;\n    var ticksLength = _context$barDimension4.ticksLength;\n    var ticksPadding = _context$barDimension4.ticksPadding;\n\n    var ticks = options.majorTicks.length;\n    var hasLeft = options.numberSide !== 'right';\n    var hasRight = options.numberSide !== 'left';\n    var textHeight = options.fontNumbersSize * width / 200;\n    var i = 0;\n    var ticksWidth = (options.ticksWidth / 100 + ticksPadding * 2) * width;\n    var numLeft = (width - barWidth) / 2 - ticksWidth;\n    var numRight = (width - barWidth) / 2 + barWidth + ticksWidth;\n    var textX = void 0,\n        textY = void 0,\n        textWidth = void 0,\n        numberOffset = void 0,\n        tick = void 0;\n    var colors = options.colorNumbers instanceof Array ? options.colorNumbers : new Array(ticks).fill(options.colorNumbers);\n\n    context.font = drawings.font(options, 'Numbers', width / 200);\n    context.lineWidth = 0;\n    context.textAlign = 'center';\n\n    for (; i < ticks; i++) {\n        context.fillStyle = colors[i];\n        tick = options.majorTicks[i];\n        numberOffset = i * ticksLength / (ticks - 1);\n\n        if (isVertical) {\n            textY = Y + length - barMargin - barOffset - numberOffset + textHeight / 3;\n\n            if (hasLeft) {\n                context.textAlign = 'right';\n                context.fillText(tick, X + numLeft, textY);\n            }\n\n            if (hasRight) {\n                context.textAlign = 'left';\n                context.fillText(tick, X + numRight, textY);\n            }\n        } else {\n            textWidth = context.measureText(tick).width;\n            textX = X + barMargin + barOffset + numberOffset;\n\n            if (hasLeft) {\n                context.fillText(tick, textX, Y + numLeft);\n            }\n\n            if (hasRight) {\n                context.fillText(tick, textX, Y + numRight + textHeight);\n            }\n        }\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws linear gauge title\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n */\nfunction drawLinearTitle(context, options) {\n    if (!options.title) return;\n\n    var _context$barDimension5 = context.barDimensions;\n    var isVertical = _context$barDimension5.isVertical;\n    var width = _context$barDimension5.width;\n    var length = _context$barDimension5.length;\n    var baseX = _context$barDimension5.baseX;\n    var baseY = _context$barDimension5.baseY;\n    var titleMargin = _context$barDimension5.titleMargin;\n\n    var textHeight = options.fontTitleSize * width / 200;\n    //noinspection JSUnresolvedFunction\n    var textX = round(baseX + (isVertical ? width : length) / 2);\n    //noinspection JSUnresolvedFunction\n    var textY = round(baseY + titleMargin / 2 - (isVertical ? textHeight : textHeight / 2) - 0.025 * (isVertical ? length : width));\n\n    context.save();\n    context.textAlign = 'center';\n    context.fillStyle = options.colorTitle;\n    context.font = drawings.font(options, 'Title', width / 200);\n    context.lineWidth = 0;\n    context.fillText(options.title, textX, textY, isVertical ? width : length);\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws linear gauge units\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n */\nfunction drawLinearUnits(context, options) {\n    if (!options.units) return;\n\n    var _context$barDimension6 = context.barDimensions;\n    var isVertical = _context$barDimension6.isVertical;\n    var width = _context$barDimension6.width;\n    var length = _context$barDimension6.length;\n    var baseX = _context$barDimension6.baseX;\n    var baseY = _context$barDimension6.baseY;\n    var unitsMargin = _context$barDimension6.unitsMargin;\n\n    var textHeight = options.fontUnitsSize * width / 200;\n    //noinspection JSUnresolvedFunction\n    var textX = round(baseX + (isVertical ? width : length) / 2);\n    //noinspection JSUnresolvedFunction\n    var textY = round(baseY + (isVertical ? length : width) + unitsMargin / 2 - textHeight / 2);\n\n    context.save();\n    context.textAlign = 'center';\n    context.fillStyle = options.colorTitle;\n    context.font = drawings.font(options, 'Units', width / 200);\n    context.lineWidth = 0;\n    context.fillText(options.units, textX, textY, isVertical ? width : length);\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws linear gauge needles\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n */\nfunction drawLinearBarNeedle(context, options) {\n    if (!options.needle) return;\n\n    var _context$barDimension7 = context.barDimensions;\n    var isVertical = _context$barDimension7.isVertical;\n    var width = _context$barDimension7.width;\n    var length = _context$barDimension7.length;\n    var barWidth = _context$barDimension7.barWidth;\n    var barOffset = _context$barDimension7.barOffset;\n    var barMargin = _context$barDimension7.barMargin;\n    var ticksLength = _context$barDimension7.ticksLength;\n    var X = _context$barDimension7.X;\n    var Y = _context$barDimension7.Y;\n    var ticksPadding = _context$barDimension7.ticksPadding;\n\n    var hasLeft = options.needleSide !== 'right';\n    var hasRight = options.needleSide !== 'left';\n    var position = ticksLength * (options.value - options.minValue) / (options.maxValue - options.minValue);\n    var tickWidth = (options.ticksWidth / 100 + ticksPadding) * width;\n    var baseLength = barWidth / 2 + tickWidth;\n    var needleLength = baseLength * (options.needleEnd / 100);\n    var sX = void 0,\n        eX = void 0,\n        sY = void 0,\n        eY = void 0;\n    var draw = options.needleType.toLowerCase() === 'arrow' ? drawLinearArrowNeedle : drawLinearLineNeedle;\n    var barStart = (width - barWidth) / 2;\n    var needleStart = baseLength * (options.needleStart / 100);\n    var nLeft = barStart - tickWidth - needleStart;\n    var nRight = barStart + barWidth + tickWidth + needleStart;\n\n    context.save();\n\n    drawings.drawNeedleShadow(context, options);\n\n    if (isVertical) {\n        //noinspection JSUnresolvedFunction\n        sY = round(Y + length - barMargin - barOffset - position);\n\n        if (hasLeft) {\n            //noinspection JSUnresolvedFunction\n            sX = round(X + nLeft);\n            eX = sX + needleLength;\n            draw(context, options, sX, sY, eX, sY, needleLength);\n        }\n\n        if (hasRight) {\n            //noinspection JSUnresolvedFunction\n            sX = round(X + nRight);\n            eX = sX - needleLength;\n            draw(context, options, sX, sY, eX, sY, needleLength, true);\n        }\n    } else {\n        //noinspection JSUnresolvedFunction\n        sX = round(X + barMargin + barOffset + position);\n\n        if (hasLeft) {\n            //noinspection JSUnresolvedFunction\n            sY = round(Y + nLeft);\n            eY = sY + needleLength;\n            draw(context, options, sX, sY, sX, eY, needleLength);\n        }\n\n        if (hasRight) {\n            //noinspection JSUnresolvedFunction\n            sY = round(Y + nRight);\n            eY = sY - needleLength;\n            draw(context, options, sX, sY, sX, eY, needleLength, true);\n        }\n    }\n\n    context.restore();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Returns needle color style\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n * @param {number} length\n * @param {boolean} [isRight]\n * @return {CanvasGradient|string}\n */\nfunction needleStyle(context, options, length, isRight) {\n    return options.colorNeedleEnd ? drawings.linearGradient(context, isRight ? options.colorNeedleEnd : options.colorNeedle, isRight ? options.colorNeedle : options.colorNeedleEnd, length, !context.barDimensions.isVertical) : options.colorNeedle;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws line needle shape\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n * @param {number} sX\n * @param {number} sY\n * @param {number} eX\n * @param {number} eY\n * @param {number} length\n * @param {boolean} [isRight]\n */\nfunction drawLinearLineNeedle(context, options, sX, sY, eX, eY, length, isRight) {\n    context.lineWidth = options.needleWidth;\n    context.strokeStyle = needleStyle(context, options, length, isRight);\n\n    context.beginPath();\n    context.moveTo(sX, sY);\n    context.lineTo(eX, eY);\n    context.stroke();\n    context.closePath();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws arrow needle shape\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n * @param {number} sX\n * @param {number} sY\n * @param {number} eX\n * @param {number} eY\n * @param {number} length\n * @param {boolean} [isRight]\n */\nfunction drawLinearArrowNeedle(context, options, sX, sY, eX, eY, length, isRight) {\n    //noinspection JSUnresolvedFunction\n    var peakLength = round(length * 0.4);\n    var bodyLength = length - peakLength;\n    var isVertical = sX === eX;\n    var halfWidth = options.needleWidth / 2;\n\n    context.fillStyle = needleStyle(context, options, length, isRight);\n\n    context.beginPath();\n\n    if (isVertical) {\n        if (sY > eY) bodyLength *= -1;\n\n        context.moveTo(sX - halfWidth, sY);\n        context.lineTo(sX + halfWidth, sY);\n        context.lineTo(sX + halfWidth, sY + bodyLength);\n        context.lineTo(sX, eY);\n        context.lineTo(sX - halfWidth, sY + bodyLength);\n        context.lineTo(sX - halfWidth, sY);\n    } else {\n        if (sX > eX) bodyLength *= -1;\n\n        context.moveTo(sX, sY - halfWidth);\n        context.lineTo(sX, sY + halfWidth);\n        context.lineTo(sX + bodyLength, sY + halfWidth);\n        context.lineTo(eX, sY);\n        context.lineTo(sX + bodyLength, sY - halfWidth);\n        context.lineTo(sX, sY - halfWidth);\n    }\n\n    context.fill();\n    context.closePath();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws value box for linear gauge\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n * @param {number} value\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n */\nfunction drawLinearValueBox(context, options, value, x, y, w, h) {\n    // currently value box is available only for vertical linear gauge,\n    // as far as by design it is hard to find a proper place for\n    // horizontal ones\n    var boxWidth = (parseFloat(options.fontValueSize) || 0) * w / 200;\n    var dy = (0.11 * h - boxWidth) / 2;\n\n    context.barDimensions.isVertical && drawings.drawValueBox(context, options, value, x + w / 2, y + h - boxWidth - dy, w);\n}\n\n/**\n * Minimalistic HTML5 Canvas Linear Gauge\n */\n\nvar LinearGauge = function (_BaseGauge2) {\n    _inherits(LinearGauge, _BaseGauge2);\n\n    /**\n     * @constructor\n     * @param {LinearGaugeOptions} options\n     */\n    function LinearGauge(options) {\n        _classCallCheck(this, LinearGauge);\n\n        options = Object.assign({}, defaultLinearGaugeOptions, options || {});\n\n        /* istanbul ignore else */\n        if (options.barStrokeWidth >= options.barWidth) {\n            //noinspection JSUnresolvedFunction\n            options.barStrokeWidth = round(options.barWidth / 2);\n        }\n\n        //noinspection JSUndefinedPropertyAssignment\n        options.hasLeft = hasTicksBar('right', options);\n        //noinspection JSUndefinedPropertyAssignment\n        options.hasRight = hasTicksBar('left', options);\n\n        return _possibleConstructorReturn(this, (LinearGauge.__proto__ || Object.getPrototypeOf(LinearGauge)).call(this, options));\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Triggering linear gauge render on a canvas.\n     *\n     * @returns {LinearGauge}\n     */\n\n\n    _createClass(LinearGauge, [{\n        key: 'draw',\n        value: function draw() {\n            try {\n                var canvas = this.canvas;\n                var _ref2 = [-canvas.drawX, -canvas.drawY, canvas.drawWidth, canvas.drawHeight];\n                var x = _ref2[0];\n                var y = _ref2[1];\n                var w = _ref2[2];\n                var h = _ref2[3];\n\n                var options = this.options;\n\n                if (!canvas.elementClone.initialized) {\n                    var context = canvas.contextClone;\n\n                    // clear the cache\n                    context.clearRect(x, y, w, h);\n                    context.save();\n\n                    this.drawBox = drawLinearPlate(context, options, x, y, w, h);\n\n                    drawLinearBar.apply(undefined, [context, options].concat(_toConsumableArray(this.drawBox)));\n\n                    canvas.context.barDimensions = context.barDimensions;\n\n                    drawLinearBarHighlights(context, options);\n                    drawLinearMinorTicks(context, options);\n                    drawLinearMajorTicks(context, options);\n                    drawLinearMajorTicksNumbers(context, options);\n                    drawLinearTitle(context, options);\n                    drawLinearUnits(context, options);\n\n                    canvas.elementClone.initialized = true;\n                }\n\n                this.canvas.commit();\n\n                // clear the canvas\n                canvas.context.clearRect(x, y, w, h);\n                canvas.context.save();\n\n                canvas.context.drawImage(canvas.elementClone, x, y, w, h);\n                canvas.context.save();\n\n                drawLinearBarProgress.apply(undefined, [canvas.context, options].concat(_toConsumableArray(this.drawBox)));\n                drawLinearBarNeedle(canvas.context, options);\n                drawLinearValueBox.apply(undefined, [canvas.context, options, options.animatedValue ? this.options.value : this.value].concat(_toConsumableArray(this.drawBox)));\n\n                _get(LinearGauge.prototype.__proto__ || Object.getPrototypeOf(LinearGauge.prototype), 'draw', this).call(this);\n            } catch (err) {\n                drawings.verifyError(err);\n            }\n\n            return this;\n        }\n    }]);\n\n    return LinearGauge;\n}(BaseGauge);\n\n/**\n * @ignore\n * @typedef {object} ns\n */\n/* istanbul ignore if */\n\n\nif (typeof ns !== 'undefined') {\n    ns['LinearGauge'] = LinearGauge;\n}\n\nBaseGauge.initialize('LinearGauge', defaultLinearGaugeOptions);;typeof module !== \"undefined\" && Object.assign(ns, {Collection: Collection,GenericOptions: GenericOptions,Animation: Animation,BaseGauge: BaseGauge,drawings: drawings,SmartCanvas: SmartCanvas,vendorize: vendorize});}(typeof module !== \"undefined\" ? module.exports : window));"],"sourceRoot":"/source/"}